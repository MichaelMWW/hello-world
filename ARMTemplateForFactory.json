{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ChinaAdfDevTest"
		},
		"LS_ASQL_ChinaCommercialBAI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_ChinaCommercialBAI'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=60;Data Source=chinacommercialbai-server-sbx.database.chinacloudapi.cn;Initial Catalog=ChinaCommercialBAIDbSBX"
		},
		"LS_ASYN_ChinaDataLake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASYN_ChinaDataLake'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=60;Data Source=china-server-test.database.chinacloudapi.cn;Initial Catalog=ChinaSQLPoolTest"
		},
		"LS_REST_Event_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_REST_Event'"
		},
		"LS_SFTP_ChinaDataLake_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SFTP_ChinaDataLake'"
		},
		"MA_data_storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'MA_data_storage'"
		},
		"LS_ADLS_ChinaDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chinastorageaccounttest.dfs.core.chinacloudapi.cn"
		},
		"LS_REST_Event_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://vep-rest.eventsystem.cn"
		},
		"LS_REST_Event_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "viatris"
		},
		"LS_SFTP_ChinaDataLake_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "chinafta1.viatris.com"
		},
		"LS_SFTP_ChinaDataLake_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "datalake@viatrissvcacc.com"
		},
		"MA_Rest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://58.213.112.90:25309/apiDocpolicyJobs/getDocpolicy"
		},
		"MA_data_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chinastorageaccounttest.dfs.core.chinacloudapi.cn"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MA_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://58.213.112.90:25309/apiDocpolicyJobs/getToken",
							"method": "POST",
							"headers": {},
							"body": {
								"userName": "hz01",
								"passWord": "123456"
							},
							"linkedServices": [
								{
									"referenceName": "MA_Rest",
									"type": "LinkedServiceReference"
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "{\"token\":\"activity(GetToken).output.Response\"}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-13T02:42:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MA_Rest')]",
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_BAI_DW_Synapse_To_Sqldatabase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDWTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select * from master.table_name where name not like '%cmh%' \nand name not like '%ims%' \nand name not like '%cpa%' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "master",
									"pTableName": "table_name"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDWTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDWTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDWTables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopydataDWTableToBackup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 10,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN_Table",
											"type": "DatasetReference",
											"parameters": {
												"pSchemaName": "dw",
												"pTableName": {
													"value": "@item().NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_SQLSV_Table",
											"type": "DatasetReference",
											"parameters": {
												"pSchemaName": "datalake_dw",
												"pTableName": {
													"value": "@item().NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_truncate_table_20220113",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_drop_index",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "datalake_dw.sp_truncate_table_20220113",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ChinaCommercialBAI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_drop_index",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "datalake_dw.sp_drop_index"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ChinaCommercialBAI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_create_index",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachDWTable",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy DIMPRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy rel_account_position_package_weight_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy fact_in_market_sales_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute CMHPipeLine",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute CPAPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute IMSPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "datalake_dw.sp_create_index"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ChinaCommercialBAI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy DIMPRODUCT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_product",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PackageName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PackageNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PackageNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StrengthEnName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StrengthEnName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ProductCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TherapeuticAreaCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Unit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Unit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CalcPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "CalcPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetailPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "RetailPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CostPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "CostPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "IsSell",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IsSell",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LegalEntityCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LegalEntityCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LegalEntityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LegalEntityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_product"
								}
							}
						]
					},
					{
						"name": "Copy rel_account_position_package_weight",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.rel_account_position_package_weight",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MicsPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MicsPositionID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "rel_account_position_package_weight"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "rel_account_position_package_weight"
								}
							}
						]
					},
					{
						"name": "Copy rel_account_position_package_weight_cur_year",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE DATALAKE_DW.rel_account_position_package_weight_cur_year",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QuarterShortName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QuarterShortName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MicsPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MicsPositionID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "rel_account_position_package_weight_cur_year"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "rel_account_position_package_weight_cur_year"
								}
							}
						]
					},
					{
						"name": "Copy fact_in_market_sales_summary",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE DATALAKE_DW.fact_in_market_sales_summary",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOKAPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOKAPositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "SalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "TargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYFullYearSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYFullYearSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYFullYearSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYFullYearSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSymSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSymSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSymSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSymSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_in_market_sales_summary"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_in_market_sales_summary"
								}
							}
						]
					},
					{
						"name": "Execute CMHPipeLine",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CMH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute CPAPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CPA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute IMSPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "sp_truncate_table_20220113",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_IMS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BAI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:45:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ChinaCommercialBAI')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_SQLSV_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CMH')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CPA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_IMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy DIMPRODUCT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_product",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PackageName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PackageNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PackageNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StrengthEnName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StrengthEnName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ProductCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TherapeuticAreaCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TherapeuticAreaNameEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Unit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Unit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CalcPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "CalcPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetailPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "RetailPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CostPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "CostPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "IsSell",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IsSell",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LegalEntityCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LegalEntityCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LegalEntityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LegalEntityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_product"
								}
							}
						]
					},
					{
						"name": "Copy rel_account_position_package_weight",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.rel_account_position_package_weight",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MicsPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MicsPositionID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "rel_account_position_package_weight"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "rel_account_position_package_weight"
								}
							}
						]
					},
					{
						"name": "Copy rel_account_position_package_weight_cur_year",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE DATALAKE_DW.rel_account_position_package_weight_cur_year",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QuarterShortName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QuarterShortName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MicsPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MicsPositionID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "rel_account_position_package_weight_cur_year"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "rel_account_position_package_weight_cur_year"
								}
							}
						]
					},
					{
						"name": "Copy fact_in_market_sales_summary",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE DATALAKE_DW.fact_in_market_sales_summary",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StrengthID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PackageID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOKAPositionID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOKAPositionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "SalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "TargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LQTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LQTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LMTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LMTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "P6MTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "P6MTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MQTTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MQTTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MATTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "MATTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYFullYearSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYFullYearSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYFullYearSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYFullYearSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSymSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSymSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LYSymSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LYSymSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHSalesQuantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LHTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "LHTargetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_in_market_sales_summary"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_in_market_sales_summary"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BAI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:17:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_SQLSV_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CMH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFactCMHDistributionrateByBrand",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_cmh_distributionrate_by_brand",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHViatrisType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHViatrisType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHAveragePrice",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHAveragePrice",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHValue",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHValue",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHUnit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHUnit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHDistributionRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHDistributionRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CMHWeightedDistributionRate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHWeightedDistributionRate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMarketNameCn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketNameCn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_cmh_distributionrate_by_brand"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_cmh_distributionrate_by_brand"
								}
							}
						]
					},
					{
						"name": "Copy DimMarketProductCMH",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_market_product_cmh",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CMHMarketId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMarketNameCn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketNameCn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHDrugType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHDrugType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHPrescriptionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHPrescriptionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHForm",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHForm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHType2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHType2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHStrength",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StandardCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProbrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProbrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_market_product_cmh"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_market_product_cmh"
								}
							}
						]
					},
					{
						"name": "Copy FactCMHByMarket",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_cmh_by_market",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHAveragePrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHAveragePrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CMHValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CMHUnit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHUnit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHStandardUnit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHStandardUnit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHDistributionRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHDistributionRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CMHWeightedDistributionRate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHWeightedDistributionRate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMarketId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMarketId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CMHVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_cmh_by_market"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_cmh_by_market"
								}
							}
						]
					},
					{
						"name": "Copy DimProductCMH",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_product_cmh",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CMHProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHPrescriptionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHPrescriptionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHDrugType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHDrugType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHForm",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHForm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHTargetGroup",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHTargetGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHType1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHType2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHType2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHViatrisType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHViatrisType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProbrandType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProbrandType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHProbrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProbrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHStrengthNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHStrengthNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHPackageName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHPackageName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHStrength",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHTakeNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHTakeNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_product_cmh"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_product_cmh"
								}
							}
						]
					},
					{
						"name": "Copy DimGeographyCMH",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_geography_cmh",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CMHProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMHCityType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CMHCityType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_geography_cmh"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_geography_cmh"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BAI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:14:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_SQLSV_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_CPA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFact DimAccountCPA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_account_cpa",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAHospitalName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAHospitalName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Classification",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Classification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_account_cpa"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_account_cpa"
								}
							}
						]
					},
					{
						"name": "Copy DimProductCPA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_product_cpa",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAStrength",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAAdministrationRoute",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAAdministrationRoute",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_product_cpa"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_product_cpa"
								}
							}
						]
					},
					{
						"name": "Copy FactCPAByProduct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_cpa_by_product",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CPAStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_cpa_by_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_cpa_by_product"
								}
							}
						]
					},
					{
						"name": "Copy FactCPAByMarket",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_cpa_by_market",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAHospitalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CPAStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_cpa_by_market"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_cpa_by_market"
								}
							}
						]
					},
					{
						"name": "Copy DimVBPWinnerCPA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_vbpwinner_cpa",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPACityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VBPRound",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VBPRound",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VBPWinnerMark",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VBPWinnerMark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StartDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EndDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_vbpwinner_cpa"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_vbpwinner_cpa"
								}
							}
						]
					},
					{
						"name": "Copy DimGeographyCPA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_geography_cpa",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPACityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_geography_cpa"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_geography_cpa"
								}
							}
						]
					},
					{
						"name": "Copy DimMarketProductCPA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_market_product_cpa",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CPAMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAForm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAFormEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAFormEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAAdministrationRoute",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAAdministrationRoute",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAAdministrationRouteEn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAAdministrationRouteEn",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAStrength",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPAStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StandardCorprationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CPAStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "CPAStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "CPACoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CPACoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_market_product_cpa"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_market_product_cpa"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BAI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:25:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_SQLSV_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_BAI_DW_Synapse_To_Sqldatabase_ByTable_IMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFact DimProductIMS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_product_ims",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMoleculeCompositionID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerTypeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerTypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass1Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass1Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass1Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass1Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass2Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass2Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass2Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass2Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass3Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass3Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass3Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass3Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode1Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode12Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode12Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode123Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode123Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode2Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode23Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewFormCode23Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSIntegerProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSIntegerStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSIntegerPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSIntegerPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSIntegerPackage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketTypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMarketTypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPRESDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPRESDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGENProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGENProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProtectionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProtectionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCompanyDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCompanyDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProductLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_product_ims"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_product_ims"
								}
							}
						]
					},
					{
						"name": "Copy DimVBPWinnerIMS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_vbpwinner_ims",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculecompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMoleculecompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSDosage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSDosage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSRound",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSRound",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSVBPWinnerMark",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSVBPWinnerMark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStartDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStartDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSEndDate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSEndDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_vbpwinner_ims"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_vbpwinner_ims"
								}
							}
						]
					},
					{
						"name": "Copy DimGeographyIMS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_geography_ims",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityEN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCityEN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SG",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_geography_ims"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_geography_ims"
								}
							}
						]
					},
					{
						"name": "Copy DimChannelIMS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_channel_ims",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_channel_ims"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_channel_ims"
								}
							}
						]
					},
					{
						"name": "Copy DimMapMarketIMS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.dim_map_market_ims",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewformcodeiName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewformcodeiName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewformcodeiiName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSNewformcodeiiName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStandardCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStandardManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSStandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EffectiveFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EffectiveEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IsViatrisBrand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "dim_map_market_ims"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "dim_map_market_ims"
								}
							}
						]
					},
					{
						"name": "Copy FactImsMaxByMarket",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT \nActionFlag\n,SysCreatedDate\n,SysModifiedDate\n,Pipeline\n,StoredProcedure\n,IMSGeographyID\n,GeographyID\n,IMSChannelID\n,IMSPackageID\n,IMSMarketID\n,MonthID\n,IMSUnit\n,IMSCountingUnit\n,IMSStandardUnit\n,IMSValue\n,IMSValueUsd\n,IMSVolume\n,DataSource\nFROM dw.fact_ims_max_by_market\nWHERE DataSource='IMS'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_ims_max_by_market",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_ims_max_by_market"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_ims_max_by_market"
								}
							}
						]
					},
					{
						"name": "Copy FactImsMaxByProduct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT \nActionFlag\n,SysCreatedDate\n,SysModifiedDate\n,Pipeline\n,StoredProcedure\n,IMSGeographyID\n,GeographyID\n,IMSChannelID\n,IMSPackageID\n,MonthID\n,IMSUnit\n,IMSCountingUnit\n,IMSStandardUnit\n,IMSValue\n,IMSValueUsd\n,DataSource\nFROM dw.fact_ims_max_by_product\nwhere DataSource='IMS'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_ims_max_by_product",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_ims_max_by_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_ims_max_by_product"
								}
							}
						]
					},
					{
						"name": "Copy FactImsMaxByMarketByCity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT \nActionFlag\n,SysCreatedDate\n,SysModifiedDate\n,Pipeline\n,StoredProcedure\n,IMSGeographyID\n,GeographyID\n,IMSChannelID\n,IMSPackageID\n,IMSMarketID\n,MonthID\n,IMSUnit\n,IMSCountingUnit\n,IMSStandardUnit\n,IMSValue\n,IMSValueUsd\n,IMSVolume\n,DataSource\nFROM dw.fact_ims_max_by_market\nWHERE DataSource='MAX'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_ims_max_by_market_by_city",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSMarketID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSVolume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_ims_max_by_market"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_ims_max_by_market_by_city"
								}
							}
						]
					},
					{
						"name": "Copy FactImsMaxByProductByCity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT \nActionFlag\n,SysCreatedDate\n,SysModifiedDate\n,Pipeline\n,StoredProcedure\n,IMSGeographyID\n,GeographyID\n,IMSChannelID\n,IMSPackageID\n,MonthID\n,IMSUnit\n,IMSCountingUnit\n,IMSStandardUnit\n,IMSValue\n,IMSValueUsd\n,DataSource\nFROM dw.fact_ims_max_by_product\nwhere DataSource='MAX'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table datalake_dw.fact_ims_max_by_product_by_city",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ActionFlag",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StoredProcedure",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dw",
									"pTableName": "fact_ims_max_by_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL_SQLSV_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "datalake_dw",
									"pTableName": "fact_ims_max_by_product_by_city"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BAI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:39:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_SQLSV_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataBusinessRegionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_business_region",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Province"
										},
										"sink": {
											"name": "Province"
										}
									},
									{
										"source": {
											"name": "Region"
										},
										"sink": {
											"name": "Region"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_business_region",
									"pFileName": "cdi_business_region.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_business_region"
								}
							}
						]
					},
					{
						"name": "CopydataPrimaryDisProdParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_primary_distributor_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SysCreatedDate",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SysModifiedDate",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "DistributorCode"
										},
										"sink": {
											"name": "DistributorCode"
										}
									},
									{
										"source": {
											"name": "DistributorName"
										},
										"sink": {
											"name": "DistributorName"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "PackageName"
										},
										"sink": {
											"name": "PackageName"
										}
									},
									{
										"source": {
											"name": "YearMonth"
										},
										"sink": {
											"name": "YearMonth"
										}
									},
									{
										"source": {
											"name": "AddMonth"
										},
										"sink": {
											"name": "AddMonth"
										}
									},
									{
										"source": {
											"name": "Import"
										},
										"sink": {
											"name": "Import"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_primary_distributor_product",
									"pFileName": "cdi_primary_distributor_product.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_primary_distributor_product"
								}
							}
						]
					},
					{
						"name": "CopydataSecondaryDisParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_secondary_distributor",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "AccountCode"
										},
										"sink": {
											"name": "AccountCode"
										}
									},
									{
										"source": {
											"name": "BuyerName"
										},
										"sink": {
											"name": "BuyerName"
										}
									},
									{
										"source": {
											"name": "StartMonth"
										},
										"sink": {
											"name": "StartMonth"
										}
									},
									{
										"source": {
											"name": "EndMonth"
										},
										"sink": {
											"name": "EndMonth"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_secondary_distributor",
									"pFileName": "cdi_secondary_distributor.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_secondary_distributor"
								}
							}
						]
					},
					{
						"name": "CopydataPrimaryDisForecastParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_primary_distributor_forecast",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "PackageName"
										},
										"sink": {
											"name": "PackageName"
										}
									},
									{
										"source": {
											"name": "ForecastQuantity"
										},
										"sink": {
											"name": "ForecastQuantity"
										}
									},
									{
										"source": {
											"name": "AccountPeriod"
										},
										"sink": {
											"name": "AccountPeriod"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_primary_distributor_forecast",
									"pFileName": "cdi_primary_distributor_forecast.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_primary_distributor_forecast"
								}
							}
						]
					},
					{
						"name": "CopydataPrimaryDisTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_primary_distributor_target",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "GlobalBU"
										},
										"sink": {
											"name": "GlobalBU"
										}
									},
									{
										"source": {
											"name": "RegionCode"
										},
										"sink": {
											"name": "RegionCode"
										}
									},
									{
										"source": {
											"name": "ProvinceName"
										},
										"sink": {
											"name": "ProvinceName"
										}
									},
									{
										"source": {
											"name": "DistributorCode"
										},
										"sink": {
											"name": "DistributorCode"
										}
									},
									{
										"source": {
											"name": "DistributorName"
										},
										"sink": {
											"name": "DistributorName"
										}
									},
									{
										"source": {
											"name": "TTDTarget"
										},
										"sink": {
											"name": "TTDTarget"
										}
									},
									{
										"source": {
											"name": "Year"
										},
										"sink": {
											"name": "Year"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_primary_distributor_target",
									"pFileName": "cdi_primary_distributor_target.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_primary_distributor_target"
								}
							}
						]
					},
					{
						"name": "CopydataProductBuParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_product_bu",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "PackageName"
										},
										"sink": {
											"name": "PackageName"
										}
									},
									{
										"source": {
											"name": "GlobalBu"
										},
										"sink": {
											"name": "GlobalBu"
										}
									},
									{
										"source": {
											"name": "LocalBu"
										},
										"sink": {
											"name": "LocalBu"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_product_bu",
									"pFileName": "cdi_product_bu.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_product_bu"
								}
							}
						]
					},
					{
						"name": "CopydataExchangeRateParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_exchange_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "AccountPeriod"
										},
										"sink": {
											"name": "AccountPeriod"
										}
									},
									{
										"source": {
											"name": "Exchange"
										},
										"sink": {
											"name": "Exchange"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_exchange_rate",
									"pFileName": "cdi_exchange_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_exchange_rate"
								}
							}
						]
					},
					{
						"name": "CopydataInventoryWeekParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_inventory_week",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "CalendarPeriod"
										},
										"sink": {
											"name": "CalendarPeriod"
										}
									},
									{
										"source": {
											"name": "Weeks"
										},
										"sink": {
											"name": "Weeks"
										}
									},
									{
										"source": {
											"name": "InventoryTime"
										},
										"sink": {
											"name": "InventoryTime"
										}
									},
									{
										"source": {
											"name": "DisplayTime"
										},
										"sink": {
											"name": "DisplayTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_inventory_week",
									"pFileName": "cdi_inventory_week.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_inventory_week"
								}
							}
						]
					},
					{
						"name": "CopydataSalesMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_sales_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "SellerCode"
										},
										"sink": {
											"name": "SellerCode"
										}
									},
									{
										"source": {
											"name": "SellerName"
										},
										"sink": {
											"name": "SellerName"
										}
									},
									{
										"source": {
											"name": "BuyerCode"
										},
										"sink": {
											"name": "BuyerCode"
										}
									},
									{
										"source": {
											"name": "BuyerName"
										},
										"sink": {
											"name": "BuyerName"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_sales_mapping",
									"pFileName": "cdi_sales_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_sales_mapping"
								}
							}
						]
					},
					{
						"name": "CopydataTTDQuatityUnitParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_ttd_quatity_unit",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "PackageName"
										},
										"sink": {
											"name": "PackageName"
										}
									},
									{
										"source": {
											"name": "Times"
										},
										"sink": {
											"name": "Times"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_ttd_quatity_unit",
									"pFileName": "cdi_ttd_quatity_unit.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_ttd_quatity_unit"
								}
							}
						]
					},
					{
						"name": "CopydataParentChildDistributorParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_parent_child_distributor",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ParentDistributorCode"
										},
										"sink": {
											"name": "ParentDistributorCode"
										}
									},
									{
										"source": {
											"name": "ParentDistributoName"
										},
										"sink": {
											"name": "ParentDistributoName"
										}
									},
									{
										"source": {
											"name": "ChildDistributorCode"
										},
										"sink": {
											"name": "ChildDistributorCode"
										}
									},
									{
										"source": {
											"name": "ChildDistributorName"
										},
										"sink": {
											"name": "ChildDistributorName"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_parent_child_distributor",
									"pFileName": "cdi_parent_child_distributor.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_parent_child_distributor"
								}
							}
						]
					},
					{
						"name": "CopydataGroupsParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_groups",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "BuyerKeywords"
										},
										"sink": {
											"name": "BuyerKeywords"
										}
									},
									{
										"source": {
											"name": "SellerKeywords"
										},
										"sink": {
											"name": "SellerKeywords"
										}
									},
									{
										"source": {
											"name": "BuyerNature"
										},
										"sink": {
											"name": "BuyerNature"
										}
									},
									{
										"source": {
											"name": "SellerNature"
										},
										"sink": {
											"name": "SellerNature"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_groups",
									"pFileName": "cdi_groups.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_groups"
								}
							}
						]
					},
					{
						"name": "CopydataDDIDistributorListParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_ddi_distributor_list",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "DistributorCode"
										},
										"sink": {
											"name": "DistributorCode"
										}
									},
									{
										"source": {
											"name": "DistributorName"
										},
										"sink": {
											"name": "DistributorName"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_ddi_distributor_list",
									"pFileName": "cdi_ddi_distributor_list.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_ddi_distributor_list"
								}
							}
						]
					},
					{
						"name": "CopydataTTDParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_ttd",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "FiscalMonth"
										},
										"sink": {
											"name": "FiscalMonth"
										}
									},
									{
										"source": {
											"name": "SalesOrganization"
										},
										"sink": {
											"name": "SalesOrganization"
										}
									},
									{
										"source": {
											"name": "SalesDocument"
										},
										"sink": {
											"name": "SalesDocument"
										}
									},
									{
										"source": {
											"name": "AcGIDate"
										},
										"sink": {
											"name": "AcGIDate"
										}
									},
									{
										"source": {
											"name": "DocumentDate"
										},
										"sink": {
											"name": "DocumentDate"
										}
									},
									{
										"source": {
											"name": "SoldToCode"
										},
										"sink": {
											"name": "SoldToCode"
										}
									},
									{
										"source": {
											"name": "SoldToName"
										},
										"sink": {
											"name": "SoldToName"
										}
									},
									{
										"source": {
											"name": "Province"
										},
										"sink": {
											"name": "Province"
										}
									},
									{
										"source": {
											"name": "Region"
										},
										"sink": {
											"name": "Region"
										}
									},
									{
										"source": {
											"name": "MaterialCode"
										},
										"sink": {
											"name": "MaterialCode"
										}
									},
									{
										"source": {
											"name": "MaterialName"
										},
										"sink": {
											"name": "MaterialName"
										}
									},
									{
										"source": {
											"name": "SalesDocumentType"
										},
										"sink": {
											"name": "SalesDocumentType"
										}
									},
									{
										"source": {
											"name": "ConfirmedQuantity"
										},
										"sink": {
											"name": "ConfirmedQuantity"
										}
									},
									{
										"source": {
											"name": "NetPrice"
										},
										"sink": {
											"name": "NetPrice"
										}
									},
									{
										"source": {
											"name": "NetValue"
										},
										"sink": {
											"name": "NetValue"
										}
									},
									{
										"source": {
											"name": "PurchaseOrder"
										},
										"sink": {
											"name": "PurchaseOrder"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "OrderReason"
										},
										"sink": {
											"name": "OrderReason"
										}
									},
									{
										"source": {
											"name": "JvDvp"
										},
										"sink": {
											"name": "JvDvp"
										}
									},
									{
										"source": {
											"name": "EmbImb"
										},
										"sink": {
											"name": "EmbImb"
										}
									},
									{
										"source": {
											"name": "GroupName"
										},
										"sink": {
											"name": "GroupName"
										}
									},
									{
										"source": {
											"name": "ProductName"
										},
										"sink": {
											"name": "ProductName"
										}
									},
									{
										"source": {
											"name": "DistributorCode"
										},
										"sink": {
											"name": "DistributorCode"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_ttd",
									"pFileName": "cdi_ttd.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_ttd"
								}
							}
						]
					},
					{
						"name": "CopydataNetTTDParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_net_ttd",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CalendarMonth",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CalendarMonth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CalendarDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CalendarDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FiscalPeriod",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FiscalPeriod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FiscalYearPeriod",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FiscalYearPeriod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrgCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SalesOrgCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalesOrgName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SalesOrgName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SoldToRegion",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SoldToRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SoldToCity",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SoldToCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SoldToCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SoldToCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SoldToName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SoldToName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductBrand1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductBrand1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductBrand2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductBrand2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaterialCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MaterialCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaterialName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MaterialName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExcludeFreegoodsQuantity",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExcludeFreegoodsQuantity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IncludeFreegoodsQuantity",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IncludeFreegoodsQuantity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NetSalesAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NetSalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NetSalesAmountUSD",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NetSalesAmountUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "OffShoreCH",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OffShoreCH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "USDRate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "USDRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LocImp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocImp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GlobalBU",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "GlobalBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocalBU",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocalBU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MPGName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MPGName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JVLocal1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "JVLocal1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CommissionPer",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CommissionPer",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CommissionKUSD",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CommissionKUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NetSalesCommissionUSD",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NetSalesCommissionUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SoldToParty1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SoldToParty1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DistributorCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DistributorCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PackageCode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_net_ttd",
									"pFileName": "cdi_net_ttd.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_net_ttd"
								}
							}
						]
					},
					{
						"name": "CopydataTopNChannelarquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_topn_channel",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountCode"
										},
										"sink": {
											"name": "AccountCode"
										}
									},
									{
										"source": {
											"name": "BuyerName"
										},
										"sink": {
											"name": "BuyerName"
										}
									},
									{
										"source": {
											"name": "StartMonth"
										},
										"sink": {
											"name": "StartMonth"
										}
									},
									{
										"source": {
											"name": "EndMonth"
										},
										"sink": {
											"name": "EndMonth"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_topn_channel",
									"pFileName": "cdi_topn_channel.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_topn_channel"
								}
							}
						]
					},
					{
						"name": "CopydataDistributorType",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "PL_DATA_DCI_Format_To_Stg",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "CopyDataDCIFmt2Stg",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE stg.stg_cdi_distributor_type",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BeginMonth",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BeginMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndMonth",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EndMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DistributorCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DistributorCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DistributorName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DistributorName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ForecastPerson",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ForecastPerson",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_distributor_type",
									"pFileName": "cdi_distributor_type.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_distributor_type"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_DCI_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataDCIFmt2Stg"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:34:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_Input_Format1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCDIUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCDI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterBusinessRegionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'商务大区维护表')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPrimaryDisProdFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'一级商一级产品')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSecondaryDisFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'TOP N二级商')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDdiDisListFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'DDIDisList')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNetTTDFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Net TTD')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterTTDFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'TTD.')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterGroupsFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'集团维护表')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfBusinessRegionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterBusinessRegionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterBusinessRegionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataBusinessRegionXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Province",
														"type": "String"
													},
													"sink": {
														"name": "Province"
													}
												},
												{
													"source": {
														"name": "Region",
														"type": "String"
													},
													"sink": {
														"name": "Region"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterBusinessRegionFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_business_region",
												"pFileName": "cdi_business_region.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPrimaryDisProdFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPrimaryDisProdFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPrimaryDisProdFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPrimaryDisProdXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DistributorCode",
														"type": "String"
													},
													"sink": {
														"name": "DistributorCode"
													}
												},
												{
													"source": {
														"name": "DistributorName",
														"type": "String"
													},
													"sink": {
														"name": "DistributorName"
													}
												},
												{
													"source": {
														"name": "PackageCode",
														"type": "String"
													},
													"sink": {
														"name": "PackageCode"
													}
												},
												{
													"source": {
														"name": "PackageName",
														"type": "String"
													},
													"sink": {
														"name": "PackageName"
													}
												},
												{
													"source": {
														"name": "YearMonth",
														"type": "String"
													},
													"sink": {
														"name": "YearMonth"
													}
												},
												{
													"source": {
														"name": "销售维护月份",
														"type": "String"
													},
													"sink": {
														"name": "AddMonth"
													}
												},
												{
													"source": {
														"name": "Import",
														"type": "String"
													},
													"sink": {
														"name": "Import"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": "@activity('FilterPrimaryDisProdFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_primary_distributor_product/",
												"pFileName": "cdi_primary_distributor_product.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSecondaryDisFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSecondaryDisFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSecondaryDisFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSecondaryDisXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "AccountCode",
														"type": "String"
													},
													"sink": {
														"name": "AccountCode"
													}
												},
												{
													"source": {
														"name": "BuyerName",
														"type": "String"
													},
													"sink": {
														"name": "BuyerName"
													}
												},
												{
													"source": {
														"name": "StartMonth",
														"type": "String"
													},
													"sink": {
														"name": "StartMonth"
													}
												},
												{
													"source": {
														"name": "EndMonth",
														"type": "String"
													},
													"sink": {
														"name": "EndMonth"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": "@activity('FilterSecondaryDisFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_secondary_distributor",
												"pFileName": "cdi_secondary_distributor.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDdiDisListExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDdiDisListFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDdiDisListFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDdiDisListXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "经销商代码",
														"type": "String"
													},
													"sink": {
														"name": "DistributorCode"
													}
												},
												{
													"source": {
														"name": "经销商名称",
														"type": "String"
													},
													"sink": {
														"name": "DistributorName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": "@activity('FilterDdiDisListFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_ddi_distributor_list",
												"pFileName": "cdi_ddi_distributor_list.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfNetTTDExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNetTTDFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNetTTDFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNetTTDXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "年",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CalendarYear",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "自然月",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CalendarMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CalendarDay",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CalendarDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "财务年",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FiscalYear",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "财务月",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FiscalPeriod",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Fiscalyear/period",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FiscalYearPeriod",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SalesOrganization",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesOrgCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SalesOrganization2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesOrgName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CompanyCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CompanyCode",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CompanyCode2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CompanyName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "省份",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToRegion",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "城市",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToCity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SAPDisCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SAPDisName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品编码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductBrand1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "FDMMPG",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductBrand2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKUCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SKUCode",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品SAPCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MaterialCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品SAP名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MaterialName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ExcludeFreegoods",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ExcludeFreegoodsQuantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IncludeFreegoods",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IncludeFreegoodsQuantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NetSalesAmount",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "NetSalesAmount",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "$NetSales（美金）",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "NetSalesAmountUSD",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Offshorech",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OffShoreCH",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "USDRate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "USDRate",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "loc_Imp",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "LocImp",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "GlobalBU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GlobalBU",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LocalBU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "LocalBU",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MPGName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MPGName",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "jvlocal1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "JVLocal1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Commission/per",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CommissionPer",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "commissionKUSD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CommissionKUSD",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "$NetSales-Commission",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "NetSalesCommissionUSD",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Sold-toparty_1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToParty1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "一级商业代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DistributorCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PackageCode",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterNetTTDFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_net_ttd",
												"pFileName": "cdi_net_ttd.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfTTDExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterTTDFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterTTDFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTTDXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FiscalMonth",
														"physicalType": "String"
													},
													"sink": {
														"name": "FiscalMonth",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SOrg.",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesOrganization",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Document",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesDocument",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "GIDATE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AcGIDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Doc.Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DocumentDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Sold-topt",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Name1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SoldToName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "省份",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Province",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "大区",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Region",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Material",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MaterialCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Description",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MaterialName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SaTy",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesDocumentType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ConfirmQty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ConfirmedQuantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Netprice",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "NetPrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NetValue",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "NetValue",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PONumber",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PurchaseOrder",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "OrdRs",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "OrderReason",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "JV/DVP",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "JvDvp",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EMB/IMB",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmbImb",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "体系",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GroupName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Brand",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "分销商代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DistributorCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PackageCode",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterTTDFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_ttd",
												"pFileName": "cdi_ttd.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfGroupsExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterGroupsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterGroupsFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataGroupsXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "卖方关键字",
														"type": "String"
													},
													"sink": {
														"name": "SellerKeywords"
													}
												},
												{
													"source": {
														"name": "买方关键字",
														"type": "String"
													},
													"sink": {
														"name": "BuyerKeywords"
													}
												},
												{
													"source": {
														"name": "买方性质",
														"type": "String"
													},
													"sink": {
														"name": "BuyerNature"
													}
												},
												{
													"source": {
														"name": "卖方性质",
														"type": "String"
													},
													"sink": {
														"name": "SellerNature"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": "@activity('FilterGroupsFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_groups",
												"pFileName": "cdi_groups.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatCDI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCDIzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CDI/",
									"pFileName": {
										"value": "@activity('FilterCDIzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip1/"
								}
							}
						]
					},
					{
						"name": "FilterCDIzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCDIFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCDIFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CDI.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCDIFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCDIUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CDI/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCDIUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "china-commercial/Backup/Log/CDI/PL_DATA_CDI_Input_To_Format/DeleteFormatCMHUnzipFolder",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterTopNChannelFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'TOPN广阔市场')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfTopNChannelFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterTopNChannelFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterTopNChannelFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTopNChannelXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "AccountCode",
														"type": "String"
													},
													"sink": {
														"name": "AccountCode"
													}
												},
												{
													"source": {
														"name": "BuyerName",
														"type": "String"
													},
													"sink": {
														"name": "BuyerName"
													}
												},
												{
													"source": {
														"name": "StartMonth",
														"type": "String"
													},
													"sink": {
														"name": "StartMonth"
													}
												},
												{
													"source": {
														"name": "EndMonth",
														"type": "String"
													},
													"sink": {
														"name": "EndMonth"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip1/",
												"pFileName": "@activity('FilterTopNChannelFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_topn_channel",
												"pFileName": "cdi_topn_channel.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CDI"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CDI"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:02:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_Input_Format2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCDIUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCDI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip2/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterInventoryWeekFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Inventory Weeks表结构维护')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSalesMappingFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'销售Mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterTtdQuatityUnitFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'TTDQuatity Unit')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterParentChildDistributorFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Parent-Child Dis')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPrimaryDisForeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'一级商销售预测')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPrimaryDisTargetFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'一级商DisTarget')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterProductBuFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'产品业务分组')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterExchangeRateFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Exchange汇率维护')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfInventoryWeekFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterInventoryWeekFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterInventoryWeekFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataInventoryWeekXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CalendarPeriod",
														"type": "String"
													},
													"sink": {
														"name": "CalendarPeriod"
													}
												},
												{
													"source": {
														"name": "Weeks",
														"type": "String"
													},
													"sink": {
														"name": "Weeks"
													}
												},
												{
													"source": {
														"name": "InventoryTime"
													},
													"sink": {
														"name": "InventoryTime"
													}
												},
												{
													"source": {
														"name": "DisplayTime"
													},
													"sink": {
														"name": "DisplayTime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterInventoryWeekFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_inventory_week",
												"pFileName": "cdi_inventory_week.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSalesMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSalesMappingFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSalesMappingFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSalesMappingXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SellerCode",
														"type": "String"
													},
													"sink": {
														"name": "SellerCode"
													}
												},
												{
													"source": {
														"name": "SellerName",
														"type": "String"
													},
													"sink": {
														"name": "SellerName"
													}
												},
												{
													"source": {
														"name": "BuyerCode",
														"type": "String"
													},
													"sink": {
														"name": "BuyerCode"
													}
												},
												{
													"source": {
														"name": "BuyerName",
														"type": "String"
													},
													"sink": {
														"name": "BuyerName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterSalesMappingFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_sales_mapping",
												"pFileName": "cdi_sales_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfTtdQuatityUnitFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterTtdQuatityUnitFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterTtdQuatityUnitFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTtdQuatityUnitXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PackageCode",
														"type": "String"
													},
													"sink": {
														"name": "PackageCode"
													}
												},
												{
													"source": {
														"name": "Package",
														"type": "String"
													},
													"sink": {
														"name": "PackageName"
													}
												},
												{
													"source": {
														"name": "Times",
														"type": "String"
													},
													"sink": {
														"name": "Times"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterTtdQuatityUnitFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_ttd_quatity_unit",
												"pFileName": "cdi_ttd_quatity_unit.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfParentChildDistributorExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterParentChildDistributorFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterParentChildDistributorFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataParentChildDistributorXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ParentDistributorCode",
														"type": "String"
													},
													"sink": {
														"name": "ParentDistributorCode"
													}
												},
												{
													"source": {
														"name": "ParentDistributorName",
														"type": "String"
													},
													"sink": {
														"name": "ParentDistributoName"
													}
												},
												{
													"source": {
														"name": "ChildDistributorCode",
														"type": "String"
													},
													"sink": {
														"name": "ChildDistributorCode"
													}
												},
												{
													"source": {
														"name": "ChildDistributorName",
														"type": "String"
													},
													"sink": {
														"name": "ChildDistributorName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterParentChildDistributorFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_parent_child_distributor",
												"pFileName": "cdi_parent_child_distributor.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPrimaryDisForeExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPrimaryDisForeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPrimaryDisForeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPrimaryDisForeXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PackageCode",
														"type": "String"
													},
													"sink": {
														"name": "PackageCode"
													}
												},
												{
													"source": {
														"name": "PackageName",
														"type": "String"
													},
													"sink": {
														"name": "PackageName"
													}
												},
												{
													"source": {
														"name": "Quantity",
														"type": "String"
													},
													"sink": {
														"name": "ForecastQuantity"
													}
												},
												{
													"source": {
														"name": "AccountPeriod",
														"type": "String"
													},
													"sink": {
														"name": "AccountPeriod"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterPrimaryDisForeFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_primary_distributor_forecast",
												"pFileName": "cdi_primary_distributor_forecast.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPrimaryDisTargetExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPrimaryDisTargetFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPrimaryDisTargetFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPrimaryDisTargetXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "GlobalBU",
														"type": "String"
													},
													"sink": {
														"name": "GlobalBU"
													}
												},
												{
													"source": {
														"name": "大区",
														"type": "String"
													},
													"sink": {
														"name": "RegionCode"
													}
												},
												{
													"source": {
														"name": "省份",
														"type": "String"
													},
													"sink": {
														"name": "ProvinceName"
													}
												},
												{
													"source": {
														"name": "一级商Code",
														"type": "String"
													},
													"sink": {
														"name": "DistributorCode"
													}
												},
												{
													"source": {
														"name": "一级商名称",
														"type": "String"
													},
													"sink": {
														"name": "DistributorName"
													}
												},
												{
													"source": {
														"name": "全年TTD指标",
														"type": "String"
													},
													"sink": {
														"name": "TTDTarget"
													}
												},
												{
													"source": {
														"name": "年份",
														"type": "String"
													},
													"sink": {
														"name": "Year"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterPrimaryDisTargetFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_primary_distributor_target",
												"pFileName": "cdi_primary_distributor_target.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfProductBuExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterProductBuFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterProductBuFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataProductBuXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "PackageCode",
														"type": "String"
													},
													"sink": {
														"name": "PackageCode"
													}
												},
												{
													"source": {
														"name": "PackageName",
														"type": "String"
													},
													"sink": {
														"name": "PackageName"
													}
												},
												{
													"source": {
														"name": "GlobalBU",
														"type": "String"
													},
													"sink": {
														"name": "GlobalBu"
													}
												},
												{
													"source": {
														"name": "LocalBU",
														"type": "String"
													},
													"sink": {
														"name": "LocalBu"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": "@activity('FilterProductBuFile').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_product_bu",
												"pFileName": "cdi_product_bu.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfExchangeRateExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterExchangeRateFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterExchangeRateFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataExchangeRateXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "AccountPeriod",
														"type": "String"
													},
													"sink": {
														"name": "AccountPeriod"
													}
												},
												{
													"source": {
														"name": "Exchange",
														"type": "String"
													},
													"sink": {
														"name": "Exchange"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterExchangeRateFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_exchange_rate",
												"pFileName": "cdi_exchange_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatCDI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCDIzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CDI/",
									"pFileName": {
										"value": "@activity('FilterCDIzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip2/"
								}
							}
						]
					},
					{
						"name": "FilterCDIzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCDIFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCDIFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CDI.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCDIFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCDIUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CDI/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCDIUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip2/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "china-commercial/Backup/Log/CDI/PL_DATA_CDI_Input_To_Format/DeleteFormatCMHUnzipFolder",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterDistributorTypeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'预测填报人信息表')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfDistributorTypeExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributorTypeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributorTypeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributorTypeXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "SysCreatedDate",
													"value": {
														"value": "@addhours(utcnow(),+8)",
														"type": "Expression"
													}
												},
												{
													"name": "SysModifiedDate",
													"value": {
														"value": "@addhours(utcnow(),+8)",
														"type": "Expression"
													}
												},
												{
													"name": "Pipeline",
													"value": {
														"value": "1",
														"type": "Expression"
													}
												},
												{
													"name": "StoredProcedure",
													"value": {
														"value": "1",
														"type": "Expression"
													}
												},
												{
													"name": "EffectiveFlag",
													"value": {
														"value": "1",
														"type": "Expression"
													}
												},
												{
													"name": "DistributorTypeId",
													"value": {
														"value": "1",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "BeginMonth",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BeginMonth",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "EndMonth",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EndMonth",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "DisCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DistributorCode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "DisName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DistributorName",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "预测填报人",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ForecastPerson",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CDI/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributorTypeFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_distributor_type",
												"pFileName": "cdi_distributor_type.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CDI"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CDI"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:09:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_Input_Format3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCDIUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCDI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip3/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "UnzipFormatCDI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCDIForecastZip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/DCS_New/",
									"pFileName": {
										"value": "@activity('FilterCDIForecastZip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip3/"
								}
							}
						]
					},
					{
						"name": "FilterCDIForecastZip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCDIForecatFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCDIForecatFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'DCStoDLK_Forecast_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCDIForecatFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCDIUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/DCS_New/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCDIUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/Unzip3/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "china-commercial/Backup/Log/CDI/PL_DATA_CDI_Input_To_Format/DeleteFormatCMHUnzipFolder",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterSalesForecastFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCDIUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCDIUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'DCStoDLK_Forecast')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfSalesForecastFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSalesForecastFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSalesForecastFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSalesForecastCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ap_year",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ap_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "erp_code_one",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ERPDistributorCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "fcode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ERPPackageCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_price",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Price",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "forcast_quantity",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ForecastQuantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "forcast_amount",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ForecastAmount",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "bu_type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BUType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "organ_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DistributorCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "prod_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PackageCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "paas_create_user",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CreateUser",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "paas_create_time",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CreateTime",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "paas_update_user",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "UpdateUser",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "paas_update_time",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "UpdateTime",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "paas_is_del",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IsDel",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ID",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/Unzip3/",
												"pFileName": "@activity('FilterSalesForecastFile').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CDI/cdi_sales_forecast",
												"pFileName": "cdi_sales_forecast.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CDI"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CDI"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:12:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSFTP_CDI_File",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfCDIFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCDIFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterCDIFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait5Minute",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CopyDataBackupInputCDI",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/CDI/"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat(\n'Backup/Input/CDI/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteInputCDIZip",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataBackupInputCDI",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/CDI/"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/CDI/PL_DATA_CDI_SFTP_To_Input/DeleteInputCDIZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "CopyDataCDISFTPToInput",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DeleteInputCDIZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"maxConcurrentConnections": 5,
												"recursive": true,
												"deleteFilesAfterCompletion": false,
												"disableChunking": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SFTP_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												},
												"pFileName": {
													"value": "@activity('FilterCDIFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/CDI"
											}
										}
									]
								},
								{
									"name": "DeleteSftpCDIZip",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataCDISFTPToInput",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												},
												"pFileName": {
													"value": "@activity('FilterCDIFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/CDI/PL_DATA_CDI_SFTP_To_Input/DeleteSftpCDIZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false,
											"disableChunking": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterCDIFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetSFTP_CDI_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSFTP_CDI_File').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CDI')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/BMCC/"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T07:51:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DATA_CDI_Input_Format1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_CDI_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_Input_Format1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_CDI_Input_Format2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_CDI_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_Input_Format2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_CDI_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_CDI_Input_Format1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_CDI_Input_Format2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_CDI_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_CDI_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_CDI_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:37:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_Input_Format1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_Input_Format2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_Stg_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_SFTP_To_Input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CDI_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_update_cdi_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_update_cdi_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_CDI_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataCDIFmt2Stg"
					}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:35:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Check_Geography')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCMHGeographyMappingCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  stg.stg_check_cmh_geography\nwhere ISNeedAdd='Y';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCMHGeographyMappingNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCMHGeographyMappingCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCMHGeographyMappingCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataGeographyMappingStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "SELECT \ncmh_province_name\t\n,cmh_city_name\t\n,province_code\t\n,province_name\t\n,city_code\t\n,city_name\nFROM \n(\nSELECT \nCMHProvinceName cmh_province_name\n,CMHCityName    cmh_city_name\n,ProvinceCode   province_code\n,ProvinceName   province_name\n,CityCode       city_code\n,CityName       city_name\nFROM  stg.stg_check_cmh_geography\nWHERE ISNeedAdd='Y'\nUNION ALL\n\nSELECT \nDISTINCT\nCMHProvinceName cmh_province_name\n,CMHCityName    cmh_city_name\n,ProvinceCode   province_code\n,ProvinceName   province_name\n,CityCode       city_code\n,CityName       city_name\nFROM  stg.stg_cmh_geography_mapping\n)  GM",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CMH/CMH_Viatris_Geography_Mapping/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CMH_Viatris_Geography_Mapping_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:00:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Check_Map_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCMHMapMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  itg.itg_cmh_map_market \nWHERE CMHCoreMarket='Y' AND StandardBrandName IS NULL;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCMHMapMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCMHMapMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCMHMapMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataMapMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select \nDISTINCT \n AA.market\n,AA.mole_name\n,AA.corp_name\n,AA.product_name\n,AA.Drug_Type\n,AA.rx_type\n,AA.form\n,AA.type_1\n,AA.type_2\n,AA.strength\n,AA.standard_corp_name\n,AA.standard_brand_name\n,AA.core_market\n,AA.standardized_rate_by_DOT\n,AA.brand_name\nFROM (\nselect  \n [CMHMarketName]        market\n,[CMHMoleculeName]      mole_name\n,CMHCorprationName      corp_name\n,CMHProductName         product_name\n,[CMHDrugType]          Drug_Type\n,[CMHPrescriptionType]  rx_type\n,[CMHForm]              form\n,[CMHType1]             type_1\n,[CMHType2]             type_2\n,[CMHStrength]          strength\n,StandardCorprationName standard_corp_name\n,StandardBrandName      standard_brand_name\n,[CMHCoreMarket]        core_market\n,[CMHStandardizedRateByDot]  standardized_rate_by_DOT\n,CMHProbrandName brand_name\nfrom itg.itg_cmh_map_market \nWHERE CMHCoreMarket='Y'\nUNION ALL\nselect  \n [CMHMarketName]        market\n,[CMHMoleculeName]      mole_name\n,CMHCorprationName      corp_name\n,CMHProductName         product_name\n,[CMHDrugType]          Drug_Type\n,[CMHPrescriptionType]  rx_type\n,[CMHForm]              form\n,[CMHType1]             type_1\n,[CMHType2]             type_2\n,[CMHStrength]          strength\n,StandardCorprationName standard_corp_name\n,StandardBrandName      standard_brand_name\n,[CMHCoreMarket]        core_market\n,[CMHStandardizedRateByDot]  standardized_rate_by_DOT\n,CMHProbrandName brand_name\nfrom stg.stg_cmh_map_market \n) AA\norder by  standard_brand_name desc\n,market\n,mole_name\n,corp_name\n,product_name\n,Drug_Type\n,form\n,strength",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CMH/CMH_Map_Market/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CMH_Map_Market_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:05:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Check_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCMHMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select \nCOUNT(1)  as cnt \nfrom stg.stg_check_cmh_market \nWHERE ISNeedAdd='Y'  ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCMHMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCMHMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCMHMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataSHMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select \ndistinct \n [CMHMarketName] market\n,[CMHMoleculeName]  mole_name\n,[CMHPrescriptionType]  Drug_Type\n,[CMHDrugType]          rx_type\n,[CMHForm]              form\n,[CMHType1]             type_1\n,[CMHType2]             type_2\n,[CMHStrength]          strength\n,[CMHCoreMarket]        core_market\n,NULL  standardized_rate_by_DOT\nfrom stg.stg_check_cmh_market \nWHERE ISNeedAdd='Y'     \nORDER BY \n[CMHMarketName]\n,[CMHMoleculeName]\n,[CMHPrescriptionType]\n,[CMHDrugType]\n,[CMHForm] \n,[CMHType1]\n,[CMHType2] \n,[CMHStrength] ",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CMH/SH_Market/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('SH_Market_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:05:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataCMHFileMarketParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_file_market_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_file_market_mapping",
									"pFileName": "cmh_file_market_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_file_market_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHMarketParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_market",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_market",
									"pFileName": "cmh_market.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_market"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHGeographyMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_geography_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_geography_mapping",
									"pFileName": "cmh_geography_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_geography_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHCarduraxlFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_carduraxl_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_carduraxl_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_carduraxl_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHCelebrexlFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_celebrex_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_celebrex_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_celebrex_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHElidelFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_elidel_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_elidel_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_elidel_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLegalonFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_legalon_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_legalon_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_legalon_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLipitorFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_lipitor_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_lipitor_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_lipitor_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLyricaFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_lyrica_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_lyrica_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_lyrica_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHNorvascFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_norvasc_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_norvasc_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_norvasc_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHViagraFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_viagra_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_viagra_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_viagra_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHViartrilsFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_viartrils_mkt_data",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/data",
									"pFileName": "cmh_sh_viartrils_mkt_data.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_viartrils_mkt_data"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHCarduraxlRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_carduraxl_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_carduraxl_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_carduraxl_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHCelebrexRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_celebrex_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_celebrex_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_celebrex_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLipitorRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_lipitor_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_lipitor_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_lipitor_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLyricaRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_lyrica_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_lyrica_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_lyrica_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHNorvascRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_norvasc_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_norvasc_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_norvasc_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHViagraRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_viagra_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_viagra_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_viagra_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHViartrilsRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_viartrils_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_viartrils_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_viartrils_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHMapMarketParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_map_market",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_map_market",
									"pFileName": "cmh_map_market.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_map_market"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHLegalonRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_legalon_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_legalon_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_legalon_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHElidelRateFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_sh_elidel_mkt_distribute_rate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_fact/distributerate",
									"pFileName": "cmh_sh_elidel_mkt_distribute_rate.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_sh_elidel_mkt_distribute_rate"
								}
							}
						]
					},
					{
						"name": "CopyDataCMHMarketBPParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cmh_market_by_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/cmh_market",
									"pFileName": "cmh_market_by_mole.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cmh_market_by_product"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_CMH_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataCMHFmt2Stg"
					}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:59:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Input_To_Format1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCMHUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCMH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterDataViagraFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'01.晖致-ED品类-全国及77城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataLipitorFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'02.晖致-降血脂药品-全国及50城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataNorvascFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'03.晖致-钙通道阻滞剂(CCB)-全国及50城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataCelebrexFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'04.晖致-口服解热镇痛-全国及50城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataViartrilsFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'05.晖致-氨糖-全国及40城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataLyricalsFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'06.晖致-乐瑞卡定义市场-全国及50城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataCarduraxlFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'07.晖致-良性前列腺增生化学药-全国及18城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataLegalonFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'08.晖致-护肝药-全国及40城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDataElidelFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'09.晖致-皮炎湿疹用药-全国及40城市-数据源-Database')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfDataViagraFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataViagraFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataViagraFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataViagraCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataViagraFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_viagra_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataLipitorFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataLipitorFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataLipitorFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataLipitorCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataLipitorFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_lipitor_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataNorvascFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataNorvascFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataNorvascFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataNorvascCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataNorvascFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_norvasc_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataCelebrexFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataCelebrexFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataCelebrexFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataCelebrexCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataCelebrexFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_celebrex_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataViartrilsFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataViartrilsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataViartrilsFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataViartrilsCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataViartrilsFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_viartrils_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataLyricalsFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataLyricalsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataLyricalsFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataLyricaCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataLyricalsFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_lyrica_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataCarduraxlFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataCarduraxlFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataCarduraxlFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataCarduraxlCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataCarduraxlFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_carduraxl_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataLegalonFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataLegalonFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataLegalonFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataLegalonCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataLegalonFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_legalon_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDataElidelFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDataElidelFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDataElidelFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDataElidelCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "处方性质",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中西药属性",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDrugType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "对象",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTargetGroup",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类二",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "通用名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "商品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名(含属性)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProbrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "厂家",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "集团",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "规格",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrengthNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SKU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "剂量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "片数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "日服用量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHTakeNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "销售量(片)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "可否拆分KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHSplitKAType"
													}
												},
												{
													"source": {
														"name": "KA类型",
														"type": "String"
													},
													"sink": {
														"name": "CMHKAType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDataElidelFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/data",
												"pFileName": "cmh_sh_elidel_mkt_data.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatCMH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCMHzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CMH/",
									"pFileName": {
										"value": "@activity('FilterCMHzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip1/"
								}
							}
						]
					},
					{
						"name": "FilterCMHzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCMHFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCMHFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CMH.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCMHFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCMHUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CMH/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCMHUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/CMH/PL_DATA_CMH_Input_To_Format/DeleteFormatCMHUnzipFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterDistributeRateLegalonFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'08.晖致-护肝药-全国及40城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateElidelFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'09.晖致-皮炎湿疹用药-全国及40城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfDistributeRateLegalonFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateLegalonFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateLegalonFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateLegalonCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateLegalonFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_legalon_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateElidelFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateElidelFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateElidelFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateCarduraxCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateElidelFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_elidel_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CMH"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CMH"
					}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:45:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Input_To_Format2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCMHUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCMH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip2/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFileMarketMappingFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CMH_File_Market_Mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSHMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'SH_Market')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCMHViatrisGeographyMappingFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CMH_Viatris_Geography_Mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateViagraFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'01.晖致-ED品类-全国及77城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateLipitorFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'02.晖致-降血脂药品-全国及50城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateNorvascFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'03.晖致-钙通道阻滞剂(CCB)-全国及50城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateCelebrexFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'04.晖致-口服解热镇痛-全国及50城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateViartrilsFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'05.晖致-氨糖-全国及40城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateLyricaFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'06.晖致-乐瑞卡定义市场-全国及50城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDistributeRateCarduraxlFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'07.晖致-良性前列腺增生化学药-全国及18城市-数据源-TOP品牌铺货率')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfFileMarketMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterFileMarketMappingFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterFileMarketMappingFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataFileMarketMappingExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FileName"
													},
													"sink": {
														"name": "CMHFileName"
													}
												},
												{
													"source": {
														"name": "market",
														"type": "String"
													},
													"sink": {
														"name": "CMHMarketName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterFileMarketMappingFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_file_market_mapping",
												"pFileName": "cmh_file_market_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSHMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSHMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSHMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSHMarketBMExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "market",
														"type": "String"
													},
													"sink": {
														"name": "CMHMarketName"
													}
												},
												{
													"source": {
														"name": "mole_name",
														"type": "String"
													},
													"sink": {
														"name": "CMHMoleculeName"
													}
												},
												{
													"source": {
														"name": "Drug_Type",
														"type": "String"
													},
													"sink": {
														"name": "CMHDrugType"
													}
												},
												{
													"source": {
														"name": "rx_type",
														"type": "String"
													},
													"sink": {
														"name": "CMHPrescriptionType"
													}
												},
												{
													"source": {
														"name": "form",
														"type": "String"
													},
													"sink": {
														"name": "CMHForm"
													}
												},
												{
													"source": {
														"name": "type_1"
													},
													"sink": {
														"name": "CMHType1"
													}
												},
												{
													"source": {
														"name": "type_2"
													},
													"sink": {
														"name": "CMHType2"
													}
												},
												{
													"source": {
														"name": "strength"
													},
													"sink": {
														"name": "CMHStrength"
													}
												},
												{
													"source": {
														"name": "core_market"
													},
													"sink": {
														"name": "CMHCoreMarket"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT"
													},
													"sink": {
														"name": "CMHStandardizedRateByDot"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterSHMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "ByMole"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_market",
												"pFileName": "cmh_market.parquet"
											}
										}
									]
								},
								{
									"name": "CopyDataSHMarketBPExcelToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataSHMarketBMExcelToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "market",
														"type": "String"
													},
													"sink": {
														"name": "CMHMarketName"
													}
												},
												{
													"source": {
														"name": "mole_name",
														"type": "String"
													},
													"sink": {
														"name": "CMHMoleculeName"
													}
												},
												{
													"source": {
														"name": "Drug_Type"
													},
													"sink": {
														"name": "CMHDrugType"
													}
												},
												{
													"source": {
														"name": "rx_type"
													},
													"sink": {
														"name": "CMHPrescriptionType"
													}
												},
												{
													"source": {
														"name": "form",
														"type": "String"
													},
													"sink": {
														"name": "CMHForm"
													}
												},
												{
													"source": {
														"name": "type_2",
														"type": "String"
													},
													"sink": {
														"name": "CMHType1"
													}
												},
												{
													"source": {
														"name": "Type_3",
														"type": "String"
													},
													"sink": {
														"name": "CMHType2"
													}
												},
												{
													"source": {
														"name": "Dosage"
													},
													"sink": {
														"name": "CMHStrength"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String"
													},
													"sink": {
														"name": "CMHCoreMarket"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"type": "String"
													},
													"sink": {
														"name": "CMHStandardizedRateByDot"
													}
												},
												{
													"source": {
														"name": "中康-品名",
														"type": "String"
													},
													"sink": {
														"name": "CMHProbrandName"
													}
												},
												{
													"source": {
														"name": "中康-厂家",
														"type": "String"
													},
													"sink": {
														"name": "CMHCorprationName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterSHMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "ByProduct"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_market",
												"pFileName": "cmh_market_by_mole.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfCMHViatrisGeographyMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCMHViatrisGeographyMappingFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCMHViatrisGeographyMappingFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCMHViatrisGeographyMappingExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "cmh_province_name",
														"type": "String"
													},
													"sink": {
														"name": "CMHProvinceName"
													}
												},
												{
													"source": {
														"name": "cmh_city_name",
														"type": "String"
													},
													"sink": {
														"name": "CMHCityName"
													}
												},
												{
													"source": {
														"name": "province_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterCMHViatrisGeographyMappingFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_geography_mapping",
												"pFileName": "cmh_geography_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateViagraFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateViagraFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateViagraFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateViagraCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateViagraFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_viagra_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateLipitorFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateLipitorFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateLipitorFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateLipitorCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateLipitorFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_lipitor_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateNorvascFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateNorvascFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateNorvascFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateNorvascCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateNorvascFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_norvasc_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateCelebrexFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateCelebrexFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateCelebrexFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateCelebrexCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateCelebrexFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_celebrex_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateViartrilsFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateViartrilsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateViartrilsFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateViartrilsCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateViartrilsFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_viartrils_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateLyricaFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateLyricaFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateLyricaFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateLyricaCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateLyricaFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_lyrica_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfDistributeRateCarduraxlFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDistributeRateCarduraxlFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDistributeRateCarduraxlFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDistributeRateCarduraxCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "区域类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "年度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quarter",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "YearMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "上级区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "区域",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "中康分类一",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHType1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "晖致自定义分类",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHViatrisType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "平均单价(元/盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHAveragePrice",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售额(元)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌销售量(盒)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHDistributionRate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "品牌加权铺货率(%)",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CMHWeightedDistributionRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterDistributeRateCarduraxlFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_fact/distributerate",
												"pFileName": "cmh_sh_carduraxl_mkt_distribute_rate.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatCMH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCMHzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CMH/",
									"pFileName": {
										"value": "@activity('FilterCMHzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip2/"
								}
							}
						]
					},
					{
						"name": "FilterCMHzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCMHFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCMHFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CMH.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCMHFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCMHUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CMH/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCMHUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CMH/Unzip2/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/CMH/PL_DATA_CMH_Input_To_Format/DeleteFormatCMHUnzipFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterMapMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCMHUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCMHUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CMH_Map_Market')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfFileMapMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMapMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMapMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMapMarketExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "market"
													},
													"sink": {
														"name": "CMHMarketName"
													}
												},
												{
													"source": {
														"name": "mole_name"
													},
													"sink": {
														"name": "CMHMoleculeName"
													}
												},
												{
													"source": {
														"name": "corp_name"
													},
													"sink": {
														"name": "CMHCorprationName"
													}
												},
												{
													"source": {
														"name": "product_name"
													},
													"sink": {
														"name": "CMHProductName"
													}
												},
												{
													"source": {
														"name": "Drug_Type"
													},
													"sink": {
														"name": "CMHDrugType"
													}
												},
												{
													"source": {
														"name": "rx_type"
													},
													"sink": {
														"name": "CMHPrescriptionType"
													}
												},
												{
													"source": {
														"name": "form"
													},
													"sink": {
														"name": "CMHForm"
													}
												},
												{
													"source": {
														"name": "type_1"
													},
													"sink": {
														"name": "CMHType1"
													}
												},
												{
													"source": {
														"name": "type_2"
													},
													"sink": {
														"name": "CMHType2"
													}
												},
												{
													"source": {
														"name": "strength"
													},
													"sink": {
														"name": "CMHStrength"
													}
												},
												{
													"source": {
														"name": "standard_corp_name"
													},
													"sink": {
														"name": "StandardCorprationName"
													}
												},
												{
													"source": {
														"name": "standard_brand_name"
													},
													"sink": {
														"name": "StandardBrandName"
													}
												},
												{
													"source": {
														"name": "core_market"
													},
													"sink": {
														"name": "CMHCoreMarket"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT"
													},
													"sink": {
														"name": "CMHStandardizedRateByDot"
													}
												},
												{
													"source": {
														"name": "brand_name",
														"type": "String"
													},
													"sink": {
														"name": "CMHProbrandName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CMH/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMapMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CMH/cmh_map_market",
												"pFileName": "cmh_map_market.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CMH"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CMH"
					}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:47:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilCMHFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterCMH_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_CMH_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfCMHFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterCMH_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterCMH_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputCMH",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CMH/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/CMH/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputCMHZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputCMH",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CMH/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/CMH/PL_DATA_CMH_SFTP_To_Input/DeleteInputCMHZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataCMHSftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputCMHZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CMH"
														}
													}
												]
											},
											{
												"name": "DeleteSftpCMHZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataCMHSftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/CMH/PL_DATA_CMH_SFTP_To_Input/DeleteSftpCMHZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterCMH_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_CMH_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_CMH_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'CMH_Summary')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/CMH/"
					}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:40:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_SFTP_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_CMH_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFolder": "DataLake/Interface/Inbound/CMH/"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CMH_Input_To_Format1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CMH_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_Input_To_Format1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFormatFolderName": "/Format/CMH",
								"pInputFolderName": "/Input/CMH"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CMH_Input_To_Format2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CMH_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_Input_To_Format2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFormatFolderName": "/Format/CMH",
								"pInputFolderName": "/Input/CMH"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CMH_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CMH_Input_To_Format1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_CMH_Input_To_Format2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_CMH_Format_To_Stg",
								"pActivity": "CopyDataCMHFmt2Stg"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:06:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Input_To_Format1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Input_To_Format2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Format_To_Stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CMH_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_check_stg_cmh_market",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_stg_cmh_market]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_CMH",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp_check_stg_cmh_market",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select count(1) as counts  from stg.data_check where CheckCode in ('4','5') and CheckFlag='1';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_CMH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('Lookup_CMH').output.firstRow.counts)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute_PL_DATA_CMH_Check_Geography",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Execute_PL_DATA_CMH_Check_Market",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_CMH_Check_Geography",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Execute_PL_DATA_CMH_Check_Market",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_CMH_Check_Market",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "sp_cmh_stg2itg",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_cmh_stg2itg]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "sp_cmh_map_market",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "sp_cmh_stg2itg",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_cmh_map_market]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute_PL_DATA_CMH_Check_Map_Market",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sp_cmh_map_market",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_CMH_Check_Map_Market",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CMH"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:07:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Check_Geography')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Check_Market')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Check_Map_Market')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Check_Geography')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCPAGeographyMappingCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  stg.stg_check_cpa_geography\nwhere ISNeedAdd='Y';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCMHMapMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCPAGeographyMappingCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCPAGeographyMappingCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataGeographyMappingStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "SELECT \ncpa_province_name\t\n,cpa_city_name\t\n,province_code\t\n,province_name\t\n,city_code\t\n,city_name\nFROM (\nSELECT \nCPAProvinceName cpa_province_name\n,CPACityName    cpa_city_name\n,ProvinceCode   province_code\n,ProvinceName   province_name\n,CityCode       city_code\n,CityName       city_name\nFROM  stg.stg_check_cpa_geography\nWHERE  ISNeedAdd='Y'\nUNION ALL\nSELECT \nDISTINCT \nCPAProvinceName cpa_province_name\n,CPACityName    cpa_city_name\n,ProvinceCode   province_code\n,ProvinceName   province_name\n,CityCode       city_code\n,CityName       city_name\nFROM  stg.stg_cpa_geography_mapping\n) GM",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CPA/CPA_Viatris_geography_mapping/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CPA_Viatris_geography_mapping_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:59:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Check_Map_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCPAMapMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  itg.itg_cpa_map_market \nWHERE  StandardBrandName IS NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCPAMapMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCPAMapMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCPAMapMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataMapMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "SELECT \nDISTINCT \nmarket\n,mole_name\n,corp_name\n,product_name\n,dosage\n,dosage_en\n,customattribute3\n,customattribute3_en\n,pack_des\n,standard_corp_name\n,standard_brand_name\n,standardized_rate_by_DOT\n,core_market\nFROM (\nSELECT \nCPAMarketName             market\n,CPAMoleculeName          mole_name\n,CPACorprationName        corp_name\n,CPAProductName           product_name\n,CPAForm                  dosage\n,CPAFormEn                dosage_en\n,CPAAdministrationRoute   customattribute3\n,CPAAdministrationRouteEn customattribute3_en\n,CPAStrength              pack_des\n,StandardCorprationName   standard_corp_name\n,StandardBrandName        standard_brand_name\n,CPAStandardizedRateByDot standardized_rate_by_DOT\n,CPACoreMarket            core_market\nFROM itg.itg_cpa_map_market \nUNION ALL\nSELECT \nCPAMarketName             market\n,CPAMoleculeName          mole_name\n,CPACorprationName        corp_name\n,CPAProductName           product_name\n,CPAForm                  dosage\n,CPAFormEn                dosage_en\n,CPAAdministrationRoute   customattribute3\n,CPAAdministrationRouteEn customattribute3_en\n,CPAStrength              pack_des\n,StandardCorprationName   standard_corp_name\n,StandardBrandName        standard_brand_name\n,CPAStandardizedRateByDot standardized_rate_by_DOT\n,CPACoreMarket            core_market\nFROM stg.stg_cpa_map_market \n) AA\norder by standard_brand_name desc\n,market\n,mole_name\n,corp_name\n,product_name\n,dosage\n,customattribute3\n,pack_des\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CPA/CPA_MAP_MARKET/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CPA_MAP_MARKET_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T10:05:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Check_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryCPAMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select \nCOUNT(1) as cnt \nfrom stg.stg_check_cpa_market cm\nWHERE IsNeedFill='Y'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfCPAMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryCPAMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryCPAMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataCPAMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select  distinct\n cm.CPAMarketName\n,cm.CPAMoleculeName\n,isnull(mk.CPAForm,cm.CPAForm) CPAForm\n,mk.CPAFormEn\n,isnull(mkr.CPAAdministrationRoute,cm.CPAAdministrationRoute) CPAAdministrationRoute\n,mkr.CPAAdministrationRouteEn\n,cm.CPAStrength\n\n,cm.CPAStandardizedRateByDot\n,cm.CPACoreMarket\nfrom stg.stg_check_cpa_market cm\n\nleft join (select distinct CPAForm,CPAFormEn  \n           from [itg].[itg_cpa_map_market] \n\t\t    where CPAFormEn is not null\n\t\t  ) mk\n   on (cm.CPAForm=mk.CPAForm or cm.CPAForm=mk.CPAFormEn)\nleft join (select distinct CPAAdministrationRoute,CPAAdministrationRouteEn  \n           from [itg].[itg_cpa_map_market] \n\t\t    where CPAAdministrationRouteEn is not null\n\t\t  ) mkr\n  on (cm.CPAAdministrationRoute=mkr.CPAAdministrationRoute \n      or cm.CPAAdministrationRoute=mkr.CPAAdministrationRouteEn)\nWHERE IsNeedFill='Y'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CPA/CPA_Viatris_BAI_Market/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CPA_Viatris_BAI_Market_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T10:06:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataColumnMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_column_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/cpa_column_mapping",
									"pFileName": "cpa_column_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_column_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_fact",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "Format/CPA/cpa_fact/",
										"type": "Expression"
									},
									"pFileName": {
										"value": "cpa_fact.parquet",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_fact"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAGeographyMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_geography_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/cpa_geography_mapping/",
									"pFileName": "cpa_geography_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_geography_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAhospitalParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_hospital_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/cpa_hospital_mapping/",
									"pFileName": "cpa_hospital_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_hospital_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAMapMarketParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_map_market",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/cpa_map_market/",
									"pFileName": "cpa_map_market.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_map_market"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAMarketByProductParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_market_by_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "/Format/CPA/cpa_market/cpa_market_by_product",
										"type": "Expression"
									},
									"pFileName": {
										"value": "cpa_market_by_product.parquet",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_market_by_product"
								}
							}
						]
					},
					{
						"name": "CopyDataCPAMarketByMoleParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cpa_market_by_molecule",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "/Format/CPA/cpa_market/cpa_market_by_molecule",
										"type": "Expression"
									},
									"pFileName": {
										"value": "cpa_market_by_molecule.parquet",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cpa_market_by_molecule"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CPA"
					},
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_CPA_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataCPAFmt2Stg"
					}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:58:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatCPAUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatCPA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/Unzip/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterColumnMappingFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA_Column_Mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCPAFactFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA_Fact')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCPAGeographyMappingFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'geography_mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCPAhospitalFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA_hospital_code_check')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCPAMapMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA_MAP_MARKET')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterCPAMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatCPAUnzipFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA_Viatris_BAI_Market')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfCPAMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCPAMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCPAMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCPAMarketByProductExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mole_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "corp_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAFormEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRoute",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRouteEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "pack_des",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "CPA-product"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_market/cpa_market_by_product",
												"pFileName": "cpa_market_by_product.parquet"
											}
										}
									]
								},
								{
									"name": "CopyDataCPAMarketByMoleExcelToParquet_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataCPAMarketByProductExcelToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mole_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAFormEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRoute",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRouteEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "pack_des",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "CPA-mole"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_market/cpa_market_by_molecule",
												"pFileName": "cpa_market_by_molecule.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfCPAMapMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCPAMapMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCPAMapMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCPAMapMarketExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mole_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "corp_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAFormEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRoute",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customattribute3_en",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRouteEn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "pack_des",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standard_corp_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "StandardCorprationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standard_brand_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "StandardBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAMapMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_map_market",
												"pFileName": "cpa_map_market.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfCPAhospitalFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCPAhospitalFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCPAhospitalFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCPAhospitalExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CPA_hospital_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAHospitalCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "hospital_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAHospitalName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "classification",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Classification",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DataSource",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Account_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AccountCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Account_Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AccountName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAhospitalFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_hospital_mapping",
												"pFileName": "cpa_hospital_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfCPAGeographyMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCPAGeographyMappingFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCPAGeographyMappingFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCPAGeographyMappingExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "cpa_province_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "cpa_city_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAGeographyMappingFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_geography_mapping",
												"pFileName": "cpa_geography_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfColumnMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterColumnMappingFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterColumnMappingFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataColumnMappingExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CPA数据字段中文名",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAColumnNameCn",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "字段英文名",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAColumnNameEn",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterColumnMappingFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_column_mapping",
												"pFileName": "cpa_column_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfCPAFactFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCPAFactFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCPAFactFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCPAFactCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Province",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CITY",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "YEAR",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MONTH",
														"physicalType": "String"
													},
													"sink": {
														"name": "Month",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HOSPITAL_CODE",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAHospitalCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MOLE_NAME",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PRODUCT_NAME",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PACK_DES",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PACK_NUMBER",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "VALUE",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STANDARD_UNIT",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "APP2_COD",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "APP1_COD",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPAAdministrationRoute",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CORP_NAME",
														"physicalType": "String"
													},
													"sink": {
														"name": "CPACorprationName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/Unzip/",
												"pFileName": {
													"value": "@activity('FilterCPAFactFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/CPA/cpa_fact",
												"pFileName": "cpa_fact.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatCPA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterCPAzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CPA/",
									"pFileName": {
										"value": "@activity('FilterCPAzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/Unzip/"
								}
							}
						]
					},
					{
						"name": "FilterCPAzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputCPAFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputCPAFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'CPA.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputCPAFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatCPAUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CPA/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatCPAUnzipFloder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CPA/Unzip/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/CPA/PL_DATA_CPA_Input_To_Format/DeleteFormatCPAUnzipFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/CPA"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/CPA"
					}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:55:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilCPAFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterCPA_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_CPA_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfCPAFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterCPA_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterCPA_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputCPA",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CPA/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/CPA/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputCPAZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputCPA",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CPA/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/CPA/PL_DATA_CPA_SFTP_To_Input/DeleteInputCPAZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataCPASftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputCPAZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/CPA"
														}
													}
												]
											},
											{
												"name": "DeleteSftpCPAZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataCPASftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/CPA/PL_DATA_CPA_SFTP_To_Input/DeleteSftpCPAZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterCPA_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_CPA_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_CPA_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'CPA_Summary')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/CPA/"
					}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T09:54:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_SFTP_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_CPA_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CPA_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFloder": "DataLake/Interface/Inbound/CPA/"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CPA_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CPA_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CPA_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFormatFolderName": "/Format/CPA",
								"pInputFolderName": "/Input/CPA"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CPA_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CPA_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CPA_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFormatFolderName": "/Format/CPA",
								"pPipelineName": "PL_DATA_CPA_Format_To_Stg",
								"pActivity": "CopyDataCPAFmt2Stg"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T10:02:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_Format_To_Stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CPA_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_check_stg_cpa_market",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_stg_cpa_market]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_CPA",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp_check_stg_cpa_market",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select COUNT(1) as cnt from stg.data_check where CheckCode in ('6','7') and CheckFlag='1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_CPA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('Lookup_CPA').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataCPAMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select distinct\n cm.CPAMarketName\n,cm.CPAMoleculeName\n,isnull(mk.CPAForm,cm.CPAForm) CPAForm\n,mk.CPAFormEn\n,isnull(mkr.CPAAdministrationRoute,cm.CPAAdministrationRoute) CPAAdministrationRoute\n,mkr.CPAAdministrationRouteEn\n,cm.CPAStrength\n\n,cm.CPAStandardizedRateByDot\n,cm.CPACoreMarket\nfrom stg.stg_check_cpa_market cm\n\nleft join (select distinct CPAForm,CPAFormEn  \n           from [itg].[itg_cpa_map_market] \n\t\t    where CPAFormEn is not null\n\t\t  ) mk\n   on (cm.CPAForm=mk.CPAForm or cm.CPAForm=mk.CPAFormEn)\nleft join (select distinct CPAAdministrationRoute,CPAAdministrationRouteEn  \n           from [itg].[itg_cpa_map_market] \n\t\t    where CPAAdministrationRouteEn is not null\n\t\t  ) mkr\n  on (cm.CPAAdministrationRoute=mkr.CPAAdministrationRoute \n      or cm.CPAAdministrationRoute=mkr.CPAAdministrationRouteEn)\nWHERE IsNeedFill='Y'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/CPA/CPA_Viatris_BAI_Market/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('CPA_Viatris_BAI_Market_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								},
								{
									"name": "Execute_PL_DATA_CPA_Check_Geography",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "CopyDataCPAMarketStgToFeedback",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_CPA_Check_Geography",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "sp_update_cpa_stg2itg",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_cpa_stg2itg]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "sp_cpa_map_market",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "sp_update_cpa_stg2itg",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_cpa_map_market]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ExecutePL_DATA_CPA_Check_Map_Market",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sp_cpa_map_market",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_CPA_Check_Map_Market",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CPA"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T10:08:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_Check_Geography')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_Check_Map_Market')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_DCS_Adjustment_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataTTH_IF_AdjustmentExcelToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_dcs_tth_if_adjustment",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ExtID"
										},
										"sink": {
											"name": "ExtID"
										}
									},
									{
										"source": {
											"name": "SellerID"
										},
										"sink": {
											"name": "SellerId"
										}
									},
									{
										"source": {
											"name": "BuyerID"
										},
										"sink": {
											"name": "BuyerId"
										}
									},
									{
										"source": {
											"name": "SellerCode"
										},
										"sink": {
											"name": "SellerCode"
										}
									},
									{
										"source": {
											"name": "BuyerCode"
										},
										"sink": {
											"name": "BuyerCode"
										}
									},
									{
										"source": {
											"name": "PackageID"
										},
										"sink": {
											"name": "PackageID"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "SalesDate"
										},
										"sink": {
											"name": "SalesDate"
										}
									},
									{
										"source": {
											"name": "TransactionDate"
										},
										"sink": {
											"name": "TransactionDate"
										}
									},
									{
										"source": {
											"name": "PfizerSalesDate"
										},
										"sink": {
											"name": "PfizerSalesDate"
										}
									},
									{
										"source": {
											"name": "Quantity"
										},
										"sink": {
											"name": "Quantity"
										}
									},
									{
										"source": {
											"name": "Amount"
										},
										"sink": {
											"name": "Amount"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "Version"
										},
										"sink": {
											"name": "Version"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Excel_File",
								"type": "DatasetReference",
								"parameters": {
									"pPathName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									},
									"pFileName": "tth_if_adjustment.xlsx",
									"pSheetName": "sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_tth_if_adjustment"
								}
							}
						]
					},
					{
						"name": "itg_sp_dcs_tth_if_adjustment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopydataTTH_IF_AdjustmentExcelToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_dcs_tth_if_adjustment]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_DCS_Adjustment_To_Itg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataAdjustment2Stg"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Adjustment/DCS"
					}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:25:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_DCS_Format_To_Stg_From_DCS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataTTH_IFParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_dcs_tth_if",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ExtID"
										},
										"sink": {
											"name": "ExtID"
										}
									},
									{
										"source": {
											"name": "SellerId"
										},
										"sink": {
											"name": "SellerId"
										}
									},
									{
										"source": {
											"name": "BuyerId"
										},
										"sink": {
											"name": "BuyerId"
										}
									},
									{
										"source": {
											"name": "SellerCode"
										},
										"sink": {
											"name": "SellerCode"
										}
									},
									{
										"source": {
											"name": "BuyerCode"
										},
										"sink": {
											"name": "BuyerCode"
										}
									},
									{
										"source": {
											"name": "PackageID"
										},
										"sink": {
											"name": "PackageID"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "SalesDate"
										},
										"sink": {
											"name": "SalesDate"
										}
									},
									{
										"source": {
											"name": "TransactionDate"
										},
										"sink": {
											"name": "TransactionDate"
										}
									},
									{
										"source": {
											"name": "PfizerSalesDate"
										},
										"sink": {
											"name": "PfizerSalesDate"
										}
									},
									{
										"source": {
											"name": "Quantity"
										},
										"sink": {
											"name": "Quantity"
										}
									},
									{
										"source": {
											"name": "Amount"
										},
										"sink": {
											"name": "Amount"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_IF')",
										"type": "Expression"
									},
									"pFileName": "TTH_IF.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_tth_if"
								}
							}
						]
					},
					{
						"name": "CopydataTTH_SS_IFParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_dcs_tth_ss_if",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "ExternalID"
										},
										"sink": {
											"name": "ExternalID"
										}
									},
									{
										"source": {
											"name": "TransactionDate"
										},
										"sink": {
											"name": "TransactionDate"
										}
									},
									{
										"source": {
											"name": "PackageCode"
										},
										"sink": {
											"name": "PackageCode"
										}
									},
									{
										"source": {
											"name": "Quantity"
										},
										"sink": {
											"name": "Quantity"
										}
									},
									{
										"source": {
											"name": "BuyerCode"
										},
										"sink": {
											"name": "BuyerCode"
										}
									},
									{
										"source": {
											"name": "SellerCode"
										},
										"sink": {
											"name": "SellerCode"
										}
									},
									{
										"source": {
											"name": "PackageName"
										},
										"sink": {
											"name": "PackageName"
										}
									},
									{
										"source": {
											"name": "PackageRawName"
										},
										"sink": {
											"name": "PackageRawName"
										}
									},
									{
										"source": {
											"name": "BuyerName"
										},
										"sink": {
											"name": "BuyerName"
										}
									},
									{
										"source": {
											"name": "BuyerRawName"
										},
										"sink": {
											"name": "BuyerRawName"
										}
									},
									{
										"source": {
											"name": "SellerName"
										},
										"sink": {
											"name": "SellerName"
										}
									},
									{
										"source": {
											"name": "SellerRawName"
										},
										"sink": {
											"name": "SellerRawName"
										}
									},
									{
										"source": {
											"name": "Remark"
										},
										"sink": {
											"name": "Remark"
										}
									},
									{
										"source": {
											"name": "LineNumber"
										},
										"sink": {
											"name": "LineNumber"
										}
									},
									{
										"source": {
											"name": "Amount"
										},
										"sink": {
											"name": "Amount"
										}
									},
									{
										"source": {
											"name": "SellerId"
										},
										"sink": {
											"name": "SellerId"
										}
									},
									{
										"source": {
											"name": "BuyerId"
										},
										"sink": {
											"name": "BuyerId"
										}
									},
									{
										"source": {
											"name": "PackageId"
										},
										"sink": {
											"name": "PackageId"
										}
									},
									{
										"source": {
											"name": "UploadBy"
										},
										"sink": {
											"name": "UploadBy"
										}
									},
									{
										"source": {
											"name": "UploadOn"
										},
										"sink": {
											"name": "UploadOn"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_SS_IF')",
										"type": "Expression"
									},
									"pFileName": "TTH_SS_IF.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_tth_ss_if"
								}
							}
						]
					},
					{
						"name": "CopydataTTH_IFSummaryParquetToStg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exec_Truncate_stg_dcs_batch2_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "COUNT",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_IF_Summary')",
										"type": "Expression"
									},
									"pFileName": "TTH_IF_Summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_summary_new"
								}
							}
						]
					},
					{
						"name": "Exec_sp_Check_DSC_stg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopydataTTH_IFParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataTTH_SS_IFParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataTTH_IFSummaryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataInventoryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataTTH_SS_IFSummaryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataInventorySummaryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataSalesForecastParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_inmarket_stg_summary]",
							"storedProcedureParameters": {
								"ModuleName": {
									"value": "DCS_New",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopydataInventoryParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_dcs_inventory",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Inventory')",
										"type": "Expression"
									},
									"pFileName": "Inventory.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_inventory"
								}
							}
						]
					},
					{
						"name": "Exec_Truncate_stg_dcs_batch2_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncate_table]",
							"storedProcedureParameters": {
								"schema_name": {
									"value": "stg",
									"type": "String"
								},
								"table_name": {
									"value": "stg_dcs_summary_new",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopydataTTH_SS_IFSummaryParquetToStg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exec_Truncate_stg_dcs_batch2_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FILE_NAME",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "COUNT",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_SS_IF_Summary')",
										"type": "Expression"
									},
									"pFileName": "TTH_SS_IF_Summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_summary_new"
								}
							}
						]
					},
					{
						"name": "CopydataInventorySummaryParquetToStg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exec_Truncate_stg_dcs_batch2_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FILE_NAME",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "COUNT",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Inventory_Summary')",
										"type": "Expression"
									},
									"pFileName": "Inventory_Summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_dcs_summary_new"
								}
							}
						]
					},
					{
						"name": "CopydataSalesForecastParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "PL_DATA_DCI_Format_To_Stg",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "CopyDataDCIFmt2Stg",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cdi_sales_forecast",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/CDI/cdi_sales_forecast",
									"pFileName": "cdi_sales_forecast.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cdi_sales_forecast"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_DCS_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataDCSFmt2Stg"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/DCS_New"
					}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:02:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_DCS_Input_To_Format_From_DCS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnzipTTHToFormat",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterTTHZip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterTTHZip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GetInputDCSZipFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterTTHZip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputDCSZipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputDCSZipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'_TTH_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetFormatDCSUnzipFiles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipTTHToFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UnzipSpecialSalesToFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UnzipInventoryToFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Csv_Folder_Comma",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatDCSUnzipFolder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataTTH_SS_IFCsvToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataInventoryCsvToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataTTH_IFSummaryTxtToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataTTH_SS_IFSummaryTxtToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataInventorySummaryTxtToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataTTH_IFCsvToParquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_Input_To_Format/DeleteFormatDCSFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyDataTTH_IFCsvToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterTTHDataFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterTTHDataFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_IF')",
										"type": "Expression"
									},
									"pFileName": "TTH_IF.parquet"
								}
							}
						]
					},
					{
						"name": "UnzipSpecialSalesToFormat",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterSpecialSaleZip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterSpecialSaleZip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "FilterSpecialSaleZip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputDCSZipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputDCSZipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'_SpecialSale_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UnzipInventoryToFormat",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterInventoryZip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterInventoryZip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "FilterInventoryZip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputDCSZipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputDCSZipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'_Inventory_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterTTHDataFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_TTH_'),contains(item().name,'.csv'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataTTH_SS_IFCsvToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterSpecialSaleDataFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterSpecialSaleDataFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_SS_IF')",
										"type": "Expression"
									},
									"pFileName": "TTH_SS_IF.parquet"
								}
							}
						]
					},
					{
						"name": "FilterSpecialSaleDataFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_SpecialSale_'),contains(item().name,'.csv'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataInventoryCsvToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterInventoryDataFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterInventoryDataFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Inventory')",
										"type": "Expression"
									},
									"pFileName": "Inventory.parquet"
								}
							}
						]
					},
					{
						"name": "FilterInventoryDataFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_Inventory_'),contains(item().name,'.csv'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataTTH_IFSummaryTxtToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterTTHSummaryFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterTTHSummaryFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_IF_Summary')",
										"type": "Expression"
									},
									"pFileName": "TTH_IF_Summary.parquet"
								}
							}
						]
					},
					{
						"name": "FilterTTHSummaryFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_TTH_Summary'),contains(item().name,'.txt'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataTTH_SS_IFSummaryTxtToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterSpecialSaleSummaryFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterSpecialSaleSummaryFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/TTH_SS_IF_Summary')",
										"type": "Expression"
									},
									"pFileName": "TTH_SS_IF_Summary.parquet"
								}
							}
						]
					},
					{
						"name": "FilterSpecialSaleSummaryFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_SpecialSale_Summary'),contains(item().name,'.txt'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataInventorySummaryTxtToParquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterInventorySummaryFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Unzip')",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterInventorySummaryFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(pipeline().parameters.pFormatFolderName,'/Inventory_Summary')",
										"type": "Expression"
									},
									"pFileName": "Inventory_Summary.parquet"
								}
							}
						]
					},
					{
						"name": "FilterInventorySummaryFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatDCSUnzipFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatDCSUnzipFiles').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,'_Inventory_Summary'),contains(item().name,'.txt'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/DCS_New"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/DCS_New"
					}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:01:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_Folder_Comma')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_DCS_SFTP_To_Input_From_DCS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilDCSFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(and(and(equals(activity('FilterTTHFile').output.FilteredItemsCount,1),\nequals(activity('FilterSpecialSaleFile').output.FilteredItemsCount,1)),\nequals(activity('FilterInventoryFile').output.FilteredItemsCount,1)),\nequals(activity('FilterCDIForecastFile').output.FilteredItemsCount,1))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_DCS_Files",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pSFTPFolderName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FilterTTHFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_DCS_Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_DCS_Files').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'_TTH_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait5Minute",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "FilterTTHFile",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "FilterSpecialSaleFile",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "FilterInventoryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "FilterCDIForecastFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								},
								{
									"name": "FilterSpecialSaleFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_DCS_Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_DCS_Files').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'_SpecialSale_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "FilterInventoryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_DCS_Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_DCS_Files').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'_Inventory_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "FilterCDIForecastFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_DCS_Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_DCS_Files').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'DCStoDLK_Forecast_')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					},
					{
						"name": "CopyDataDCSInputToBackupt",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UntilDCSFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(\n'Backup/',pipeline().parameters.pInputFolderName,'/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteInputDCSFiles",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataDCSInputToBackupt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_SFTP_To_Input/DeleteInputDCSZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyDataTTHSFTPToInput",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputDCSFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterTTHFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteSFTPTTHZip",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataTTHSFTPToInput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterTTHFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_SFTP_To_Input/DeleteSFTPTTHZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							}
						}
					},
					{
						"name": "CopyDataSpecialSaleSFTPToInput",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputDCSFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterSpecialSaleFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteSFTPSpecialSaleZip",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataSpecialSaleSFTPToInput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterSpecialSaleFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_SFTP_To_Input/DeleteSFTPSpecialSaleZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							}
						}
					},
					{
						"name": "CopyDataInventorySFTPToInput",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputDCSFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterInventoryFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteSFTPInventoryZip",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataInventorySFTPToInput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterInventoryFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_SFTP_To_Input/DeleteSFTPInventoryZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							}
						}
					},
					{
						"name": "CopyDataForecastSFTPToInput",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputDCSFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterCDIForecastFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteSFTPForecastZip",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataForecastSFTPToInput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSFTPFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@activity('FilterCDIForecastFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_DCS_SFTP_To_Input/DeleteSFTPForecastZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pSFTPFolderName": {
						"type": "string",
						"defaultValue": "DCS2DataLake"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/DCS_New"
					}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:00:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_DCS_SFTP_To_Itg_From_DCS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_DCS_SFTP_To_Input_From_DCS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_DCS_SFTP_To_Input_From_DCS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_DCS_Input_To_Format_From_DCS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_DCS_SFTP_To_Input_From_DCS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_DCS_Input_To_Format_From_DCS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_DCS_Format_To_Stg_From_DCS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_DCS_Input_To_Format_From_DCS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_CDI_Input_Format3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_DCS_Format_To_Stg_From_DCS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_DCS_Format_To_Stg",
								"pActivity": "CopyDataDCSFmt2Stg"
							}
						}
					},
					{
						"name": "QueryDCSNewSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_DCS_Format_To_Stg_From_DCS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfDCSNewSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryDCSNewSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryDCSNewSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "DCS Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "DCS File row count not matched with summary",
										"errorCode": "ERROR0001"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_DCS_Stg_To_Itg_From_DCS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_TRAN_SPRC_DCS_Stg_To_Itg_From_DCS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Execute_PL_DATA_CDI_Input_Format3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_DCS_SFTP_To_Input_From_DCS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_Input_Format3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "DCS_New"
					}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_DCS_SFTP_To_Input_From_DCS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_DCS_Input_To_Format_From_DCS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_DCS_Format_To_Stg_From_DCS')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_Input_Format3')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DCS_Stg_To_Itg_From_DCS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_Input_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DATA_EVENT_Input_to_Format",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Input_to_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg cfg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg cfg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_Event_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_Event_Format_To_Stg cfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-29T05:45:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Input_to_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg cfg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_Input_to_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_vw_vep_event_infos_attendeetype",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFormatEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeTypeId']"
										},
										"sink": {
											"name": "AttendeeTypeId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeQty']"
										},
										"sink": {
											"name": "AttendeeQty",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_attendeetype"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_attendee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFormatEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeId']"
										},
										"sink": {
											"name": "AttendeeId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"name": "ExtId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Org']"
										},
										"sink": {
											"name": "Org",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubOrg']"
										},
										"sink": {
											"name": "SubOrg",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_attendee"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_basic",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFormatEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventNum']"
										},
										"sink": {
											"name": "EventNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventName']"
										},
										"sink": {
											"name": "EventName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventType_Val']"
										},
										"sink": {
											"name": "EventType_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventType_Txt']"
										},
										"sink": {
											"name": "EventType_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Val']"
										},
										"sink": {
											"name": "SubEventType_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Txt']"
										},
										"sink": {
											"name": "SubEventType_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Val']"
										},
										"sink": {
											"name": "EventForm_Val",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Txt']"
										},
										"sink": {
											"name": "EventForm_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DtStart']"
										},
										"sink": {
											"name": "DtStart",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DtEnd']"
										},
										"sink": {
											"name": "DtEnd",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"name": "AreaCountry_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"name": "AreaCountry_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Region_Val']"
										},
										"sink": {
											"name": "Region_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Region_Txt']"
										},
										"sink": {
											"name": "Region_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"name": "AreaCity_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"name": "AreaCity_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventAddr']"
										},
										"sink": {
											"name": "EventAddr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Val']"
										},
										"sink": {
											"name": "EventStatus_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Txt']"
										},
										"sink": {
											"name": "EventStatus_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sponsor']"
										},
										"sink": {
											"name": "Sponsor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"name": "Remark",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DspName']"
										},
										"sink": {
											"name": "DspName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UserName']"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['LeaderEmail']"
										},
										"sink": {
											"name": "LeaderEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DmName']"
										},
										"sink": {
											"name": "DmName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rmName']"
										},
										"sink": {
											"name": "rmName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['rmCode']"
										},
										"sink": {
											"name": "rmCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_isNoPlan']"
										},
										"sink": {
											"name": "ExtData_isNoPlan",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Txt']"
										},
										"sink": {
											"name": "ExtData_department_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Val']"
										},
										"sink": {
											"name": "ExtData_department_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Txt']"
										},
										"sink": {
											"name": "ExtData_hospital_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Val']"
										},
										"sink": {
											"name": "ExtData_hospital_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Txt']"
										},
										"sink": {
											"name": "ExtData_chainStore_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Val']"
										},
										"sink": {
											"name": "ExtData_chainStore_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Txt']"
										},
										"sink": {
											"name": "ExtData_drugStore_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Val']"
										},
										"sink": {
											"name": "ExtData_drugStore_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Val']"
										},
										"sink": {
											"name": "ExtData_product_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Txt']"
										},
										"sink": {
											"name": "ExtData_product_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_basic"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteFormatEVENTfile",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/PL_DATA_EVENT_Input_to_Format/DeleteFormatEVENTZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy data_vw_vep_event_infos_sponsor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendeetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrganizerDspName']"
										},
										"sink": {
											"name": "OrganizerDspName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrganizerNum']"
										},
										"sink": {
											"name": "OrganizerNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrganizerMobile']"
										},
										"sink": {
											"name": "OrganizerMobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrganizerEmail']"
										},
										"sink": {
											"name": "OrganizerEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_sponsor"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_basic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"name": "Stage",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"name": "AmtAcc",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"name": "AmtAct",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['AttendStatus']"
										},
										"sink": {
											"name": "AttendStatus",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"name": "CostCenter_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Txt']"
										},
										"sink": {
											"name": "CostCenter_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Val']"
										},
										"sink": {
											"name": "WbsCode_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Txt']"
										},
										"sink": {
											"name": "WbsCode_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Val']"
										},
										"sink": {
											"name": "InternalOrder_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Txt']"
										},
										"sink": {
											"name": "InternalOrder_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_speaker"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_product",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_sponsor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Product_Val']"
										},
										"sink": {
											"name": "Product_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Product_Txt']"
										},
										"sink": {
											"name": "Product_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_speaker_product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_material",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_session_text",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MatNum']"
										},
										"sink": {
											"name": "MatNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['LectureMaterials_Url']"
										},
										"sink": {
											"name": "LectureMaterials_Url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_speaker_material"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_tasks",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TaskId']"
										},
										"sink": {
											"name": "TaskId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"name": "TaskNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ActionId']"
										},
										"sink": {
											"name": "ActionId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ActName']"
										},
										"sink": {
											"name": "ActName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NodeId']"
										},
										"sink": {
											"name": "NodeId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NodeName']"
										},
										"sink": {
											"name": "NodeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DtCreated']"
										},
										"sink": {
											"name": "DtCreated",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['DtDone']"
										},
										"sink": {
											"name": "DtDone",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['UserId']"
										},
										"sink": {
											"name": "UserId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ActDescr']"
										},
										"sink": {
											"name": "ActDescr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_tasks"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_outside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_material",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"name": "OrgName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"name": "SubOrgName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"name": "DtCheckin",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"name": "CheckinMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"name": "CheckinSource",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"name": "CheckInUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_checkin_outside"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_inside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_expense",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"name": "OrgName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"name": "SubOrgName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"name": "DtCheckin",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"name": "CheckinMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"name": "CheckinSource",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"name": "CheckInUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_checkin_inside"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FileKey']"
										},
										"sink": {
											"name": "FileKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FileDescr']"
										},
										"sink": {
											"name": "FileDescr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UploadName']"
										},
										"sink": {
											"name": "UploadName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UploadTime']"
										},
										"sink": {
											"name": "UploadTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['FileType']"
										},
										"sink": {
											"name": "FileType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FileUrl']"
										},
										"sink": {
											"name": "FileUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_file"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_risk",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_inside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"name": "Number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"name": "Stage",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['Message']"
										},
										"sink": {
											"name": "Message",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Comments']"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_risk"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_iccheck",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"name": "Number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Status_Val']"
										},
										"sink": {
											"name": "Status_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Status_Txt']"
										},
										"sink": {
											"name": "Status_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"name": "Remark",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimDspName']"
										},
										"sink": {
											"name": "SatelliteClaimDspName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimFirstDate']"
										},
										"sink": {
											"name": "SatelliteClaimFirstDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_iccheck"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_plans",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_outside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['VisitPlanId']"
										},
										"sink": {
											"name": "VisitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Val']"
										},
										"sink": {
											"name": "VisitedBy_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Txt']"
										},
										"sink": {
											"name": "VisitedBy_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Val']"
										},
										"sink": {
											"name": "DistributedBy_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Txt']"
										},
										"sink": {
											"name": "DistributedBy_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['VisitNumber']"
										},
										"sink": {
											"name": "VisitNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['VisitType']"
										},
										"sink": {
											"name": "VisitType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['VisitMode']"
										},
										"sink": {
											"name": "VisitMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Status']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"name": "ApprovalStatus_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"name": "ApprovalStatus_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Score']"
										},
										"sink": {
											"name": "Score",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ReservationStatus']"
										},
										"sink": {
											"name": "ReservationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FirstSubmitTime']"
										},
										"sink": {
											"name": "FirstSubmitTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_plans"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_risk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ActCode']"
										},
										"sink": {
											"name": "ActCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['applicantName']"
										},
										"sink": {
											"name": "applicantName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['reservationStatus']"
										},
										"sink": {
											"name": "reservationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['finalResult']"
										},
										"sink": {
											"name": "finalResult",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitType']"
										},
										"sink": {
											"name": "visitType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlatform']"
										},
										"sink": {
											"name": "visitPlatform",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitMode']"
										},
										"sink": {
											"name": "visitMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['creatorPhone']"
										},
										"sink": {
											"name": "creatorPhone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['applicantDistrict']"
										},
										"sink": {
											"name": "applicantDistrict",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventType']"
										},
										"sink": {
											"name": "eventType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitedBy']"
										},
										"sink": {
											"name": "visitedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitArea']"
										},
										"sink": {
											"name": "visitArea",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventMode']"
										},
										"sink": {
											"name": "eventMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['remark']"
										},
										"sink": {
											"name": "remark",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitMode']"
										},
										"sink": {
											"name": "distributeVisitMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitType']"
										},
										"sink": {
											"name": "distributeVisitType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventDate']"
										},
										"sink": {
											"name": "eventDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventPlace']"
										},
										"sink": {
											"name": "eventPlace",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventCity']"
										},
										"sink": {
											"name": "eventCity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventBeginTime']"
										},
										"sink": {
											"name": "eventBeginTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventEndTime']"
										},
										"sink": {
											"name": "eventEndTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['internalSpeakerNum']"
										},
										"sink": {
											"name": "internalSpeakerNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['externalSpeakerNum']"
										},
										"sink": {
											"name": "externalSpeakerNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['internalParticipantNum']"
										},
										"sink": {
											"name": "internalParticipantNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['externalParticipantNum']"
										},
										"sink": {
											"name": "externalParticipantNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormal']"
										},
										"sink": {
											"name": "participantAbnormal",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerNumRatioIsOk']"
										},
										"sink": {
											"name": "speakerNumRatioIsOk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerNumIsOk']"
										},
										"sink": {
											"name": "speakerNumIsOk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerChanged']"
										},
										"sink": {
											"name": "speakerChanged",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerCanBeIdentified']"
										},
										"sink": {
											"name": "speakerCanBeIdentified",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speechDurationIsOk']"
										},
										"sink": {
											"name": "speechDurationIsOk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['writtenTextIsOk']"
										},
										"sink": {
											"name": "writtenTextIsOk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['finalResultScore']"
										},
										"sink": {
											"name": "finalResultScore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerIdentifiedScore']"
										},
										"sink": {
											"name": "speakerIdentifiedScore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerRatioIsOkScore']"
										},
										"sink": {
											"name": "speakerRatioIsOkScore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormalScore']"
										},
										"sink": {
											"name": "participantAbnormalScore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['offeredBillScore']"
										},
										"sink": {
											"name": "offeredBillScore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstAuditBy']"
										},
										"sink": {
											"name": "firstAuditBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['firstSubmitBy']"
										},
										"sink": {
											"name": "firstSubmitBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report_speakerInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_iccheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['canIdentify']"
										},
										"sink": {
											"name": "canIdentify",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['canIdentifyBool']"
										},
										"sink": {
											"name": "canIdentifyBool",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['materialCode']"
										},
										"sink": {
											"name": "materialCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['pptIsOk']"
										},
										"sink": {
											"name": "pptIsOk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerName']"
										},
										"sink": {
											"name": "speakerName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerQualification']"
										},
										"sink": {
											"name": "speakerQualification",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speakerType']"
										},
										"sink": {
											"name": "speakerType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['speechTopic']"
										},
										"sink": {
											"name": "speechTopic",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tempReplaced']"
										},
										"sink": {
											"name": "tempReplaced",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tempReplacedBool']"
										},
										"sink": {
											"name": "tempReplacedBool",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeEnough']"
										},
										"sink": {
											"name": "timeEnough",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['unidentifiedReason']"
										},
										"sink": {
											"name": "unidentifiedReason",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_speakerInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansMealsInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_plans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['arrivedBeforeEnd']"
										},
										"sink": {
											"name": "arrivedBeforeEnd",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['costAmount']"
										},
										"sink": {
											"name": "costAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['mealsType']"
										},
										"sink": {
											"name": "mealsType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['mealsTypeStr']"
										},
										"sink": {
											"name": "mealsTypeStr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['numOfMeals']"
										},
										"sink": {
											"name": "numOfMeals",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['numOfPeople']"
										},
										"sink": {
											"name": "numOfPeople",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['offeredBill']"
										},
										"sink": {
											"name": "offeredBill",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['settlementMethod']"
										},
										"sink": {
											"name": "settlementMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shopName']"
										},
										"sink": {
											"name": "shopName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['statementAmount']"
										},
										"sink": {
											"name": "statementAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['takeMode']"
										},
										"sink": {
											"name": "takeMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['takeModeStr']"
										},
										"sink": {
											"name": "takeModeStr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansMealsInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansHotelInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hotelName']"
										},
										"sink": {
											"name": "hotelName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['accommodationNum']"
										},
										"sink": {
											"name": "accommodationNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['accommodationAmount']"
										},
										"sink": {
											"name": "accommodationAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansHotelInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansPlaceInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report_speakerInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventHotelName']"
										},
										"sink": {
											"name": "eventHotelName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventRoomName']"
										},
										"sink": {
											"name": "eventRoomName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['siteRentalAmount']"
										},
										"sink": {
											"name": "siteRentalAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansPlaceInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansTrafficInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansMealsInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['trafficShopName']"
										},
										"sink": {
											"name": "trafficShopName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['trafficAmount']"
										},
										"sink": {
											"name": "trafficAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['trafficTypeStr']"
										},
										"sink": {
											"name": "trafficTypeStr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansTrafficInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansPrintInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansHotelInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['printObject']"
										},
										"sink": {
											"name": "printObject",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['printAmount']"
										},
										"sink": {
											"name": "printAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansPrintInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_event_visit_report_visitPlansPatientEducationInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansPlaceInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['giftInfo']"
										},
										"sink": {
											"name": "giftInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['giftNum']"
										},
										"sink": {
											"name": "giftNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['giftAmount']"
										},
										"sink": {
											"name": "giftAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['giftVisible']"
										},
										"sink": {
											"name": "giftVisible",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientEducationInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_event_visit_report_visitPlansPatientBookInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansTrafficInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"name": "eventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookInfo']"
										},
										"sink": {
											"name": "bookInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookNum']"
										},
										"sink": {
											"name": "bookNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookAmount']"
										},
										"sink": {
											"name": "bookAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookVisible']"
										},
										"sink": {
											"name": "bookVisible",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"name": "createdOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"name": "createdBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientBookInfos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_pte_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansPrintInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"name": "RowId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpt_ID']"
										},
										"sink": {
											"name": "Rpt_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Name']"
										},
										"sink": {
											"name": "Rpt_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Emp_ID']"
										},
										"sink": {
											"name": "Emp_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Purpose']"
										},
										"sink": {
											"name": "Rpt_Purpose",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpe_Transaction_Amount']"
										},
										"sink": {
											"name": "Rpe_Transaction_Amount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Approval_Status']"
										},
										"sink": {
											"name": "Rpt_Approval_Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Submit_Date']"
										},
										"sink": {
											"name": "Rpt_Submit_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_pte_report"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_speaker_infos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_event_visit_report_visitPlansPatientEducationInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"name": "TaskNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerInfoId']"
										},
										"sink": {
											"name": "SpeakerInfoId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SourceId']"
										},
										"sink": {
											"name": "SourceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SapId']"
										},
										"sink": {
											"name": "SapId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"name": "ExtId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerName']"
										},
										"sink": {
											"name": "SpeakerName"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Val']"
										},
										"sink": {
											"name": "SpeakerType_Val",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Txt']"
										},
										"sink": {
											"name": "SpeakerType_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"name": "AreaCountry_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"name": "AreaCountry_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Val']"
										},
										"sink": {
											"name": "AreaCity_Region_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Txt']"
										},
										"sink": {
											"name": "AreaCity_Region_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"name": "AreaCity_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"name": "AreaCity_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Val']"
										},
										"sink": {
											"name": "SpeakerLevel_Val",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Txt']"
										},
										"sink": {
											"name": "SpeakerLevel_Txt"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Val']"
										},
										"sink": {
											"name": "OrgName_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Txt']"
										},
										"sink": {
											"name": "OrgName_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Val']"
										},
										"sink": {
											"name": "SubOrgName_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Txt']"
										},
										"sink": {
											"name": "SubOrgName_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Val']"
										},
										"sink": {
											"name": "OrgTitle_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Txt']"
										},
										"sink": {
											"name": "OrgTitle_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Skill_Val']"
										},
										"sink": {
											"name": "Skill_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Skill_Txt']"
										},
										"sink": {
											"name": "Skill_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"name": "ApprovalStatus_Val",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"name": "ApprovalStatus_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StatusReason']"
										},
										"sink": {
											"name": "StatusReason",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Val']"
										},
										"sink": {
											"name": "TaskData_Val",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Txt']"
										},
										"sink": {
											"name": "TaskData_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_speaker_infos"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_event_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_event_visit_report_visitPlansPatientBookInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_event_types"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_cfg_event_types_subtypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_pte_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_cfg_event_types_subtypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_event_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_speaker_infos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_event_status"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_event_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_status"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_expense_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_cfg_event_types_subtypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_expense_types"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_cfg_expense_types_subtypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_event_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Code']"
										},
										"sink": {
											"name": "Code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_expense_types_subtypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_reservation_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_visit_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_reservation_status"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_finalresult",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_expense_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_finalresult"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_modes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_cfg_expense_types_subtypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_modes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_plateform",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_visit_reservation_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_plateform"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Cd_vw_vep_cfg_visit_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Cd_vw_vep_cfg_visit_finalresult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"name": "Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"name": "Txt",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_types"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_expense",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ExpenseId']"
										},
										"sink": {
											"name": "ExpenseId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"name": "Number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IO_Val']"
										},
										"sink": {
											"name": "IO_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IO_Txt']"
										},
										"sink": {
											"name": "IO_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['PayStatus']"
										},
										"sink": {
											"name": "PayStatus",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['CostType_Val']"
										},
										"sink": {
											"name": "CostType_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CostType_Txt']"
										},
										"sink": {
											"name": "CostType_Txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"name": "AmtAcc",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"name": "AmtAct",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"name": "CostCenter_Val",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_txt']"
										},
										"sink": {
											"name": "CostCenter_txt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"name": "Remark",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsElectronicInvoice']"
										},
										"sink": {
											"name": "IsElectronicInvoice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NonPosReason']"
										},
										"sink": {
											"name": "NonPosReason",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_expense"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_session_text",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['SessionId']"
										},
										"sink": {
											"name": "SessionId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SessionText']"
										},
										"sink": {
											"name": "SessionText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_event_infos_session_text"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSinkFolderName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "Input/EVENT/"
					},
					"pSinkFolderName": {
						"type": "string",
						"defaultValue": "Format/EVENT/"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:34:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_REST_to_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_vw_vep_event_infos_attendee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_attendee"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeId']"
										},
										"sink": {
											"path": "$['AttendeeId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"path": "$['ExtId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['Name']"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"path": "$['Org']"
										},
										"sink": {
											"path": "$['Org']"
										}
									},
									{
										"source": {
											"path": "$['SubOrg']"
										},
										"sink": {
											"path": "$['SubOrg']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_attendee"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_attendeetype",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_attendeetype"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeTypeId']"
										},
										"sink": {
											"name": "AttendeeTypeId"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"name": "AttendeeName"
										}
									},
									{
										"source": {
											"path": "$['AttendeeQty']"
										},
										"sink": {
											"name": "AttendeeQty"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_attendeetype"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_sponsor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_basic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_sponsor"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerDspName']"
										},
										"sink": {
											"path": "$['OrganizerDspName']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerNum']"
										},
										"sink": {
											"path": "$['OrganizerNum']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerMobile']"
										},
										"sink": {
											"path": "$['OrganizerMobile']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerEmail']"
										},
										"sink": {
											"path": "$['OrganizerEmail']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_sponsor"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_session_text",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_session_text"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['SessionId']"
										},
										"sink": {
											"path": "$['SessionId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SessionText']"
										},
										"sink": {
											"path": "$['SessionText']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_session_text"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_product",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_sponsor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker_product"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Product_Val']"
										},
										"sink": {
											"path": "$['Product_Val']"
										}
									},
									{
										"source": {
											"path": "$['Product_Txt']"
										},
										"sink": {
											"path": "$['Product_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_product"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_material",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_session_text",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker_material"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['MatNum']"
										},
										"sink": {
											"path": "$['MatNum']"
										}
									},
									{
										"source": {
											"path": "$['LectureMaterials_Url']"
										},
										"sink": {
											"path": "$['LectureMaterials_Url']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_material"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_expense",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_expense"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ExpenseId']"
										},
										"sink": {
											"path": "$['ExpenseId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['IO_Val']"
										},
										"sink": {
											"path": "$['IO_Val']"
										}
									},
									{
										"source": {
											"path": "$['IO_Txt']"
										},
										"sink": {
											"path": "$['IO_Txt']"
										}
									},
									{
										"source": {
											"path": "$['PayStatus']"
										},
										"sink": {
											"path": "$['PayStatus']"
										}
									},
									{
										"source": {
											"path": "$['CostType_Val']"
										},
										"sink": {
											"path": "$['CostType_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostType_Txt']"
										},
										"sink": {
											"path": "$['CostType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"path": "$['AmtAcc']"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"path": "$['AmtAct']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"path": "$['CostCenter_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_txt']"
										},
										"sink": {
											"path": "$['CostCenter_txt']"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"path": "$['Currency']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['IsElectronicInvoice']"
										},
										"sink": {
											"path": "$['IsElectronicInvoice']"
										}
									},
									{
										"source": {
											"path": "$['NonPosReason']"
										},
										"sink": {
											"path": "$['NonPosReason']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_expense"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_outside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_material",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_checkin_outside"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"path": "$['AttendeeName']"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"path": "$['OrgName']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"path": "$['SubOrgName']"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"path": "$['DtCheckin']"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"path": "$['CheckinMode']"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"path": "$['CheckinSource']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"path": "$['CheckInUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_outside"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_inside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_expense",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_checkin_inside"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"path": "$['AttendeeName']"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"path": "$['OrgName']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"path": "$['SubOrgName']"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"path": "$['DtCheckin']"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"path": "$['CheckinMode']"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"path": "$['CheckinSource']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"path": "$['CheckInUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_inside"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_file"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['FileKey']"
										},
										"sink": {
											"path": "$['FileKey']"
										}
									},
									{
										"source": {
											"path": "$['FileName']"
										},
										"sink": {
											"path": "$['FileName']"
										}
									},
									{
										"source": {
											"path": "$['FileDescr']"
										},
										"sink": {
											"path": "$['FileDescr']"
										}
									},
									{
										"source": {
											"path": "$['UploadName']"
										},
										"sink": {
											"path": "$['UploadName']"
										}
									},
									{
										"source": {
											"path": "$['UploadTime']"
										},
										"sink": {
											"path": "$['UploadTime']"
										}
									},
									{
										"source": {
											"path": "$['FileType']"
										},
										"sink": {
											"path": "$['FileType']"
										}
									},
									{
										"source": {
											"path": "$['FileUrl']"
										},
										"sink": {
											"path": "$['FileUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_file"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_risk",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_inside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_risk"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"path": "$['Stage']"
										}
									},
									{
										"source": {
											"path": "$['Message']"
										},
										"sink": {
											"path": "$['Message']"
										}
									},
									{
										"source": {
											"path": "$['Comments']"
										},
										"sink": {
											"path": "$['Comments']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_risk"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_iccheck",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_iccheck"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['Status_Val']"
										},
										"sink": {
											"path": "$['Status_Val']"
										}
									},
									{
										"source": {
											"path": "$['Status_Txt']"
										},
										"sink": {
											"path": "$['Status_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimDspName']"
										},
										"sink": {
											"path": "$['SatelliteClaimDspName']"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimFirstDate']"
										},
										"sink": {
											"path": "$['SatelliteClaimFirstDate']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_iccheck"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_plans",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_outside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_plans"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['VisitPlanId']"
										},
										"sink": {
											"path": "$['VisitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Val']"
										},
										"sink": {
											"path": "$['VisitedBy_Val']"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Txt']"
										},
										"sink": {
											"path": "$['VisitedBy_Txt']"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Val']"
										},
										"sink": {
											"path": "$['DistributedBy_Val']"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Txt']"
										},
										"sink": {
											"path": "$['DistributedBy_Txt']"
										}
									},
									{
										"source": {
											"path": "$['VisitNumber']"
										},
										"sink": {
											"path": "$['VisitNumber']"
										}
									},
									{
										"source": {
											"path": "$['VisitType']"
										},
										"sink": {
											"path": "$['VisitType']"
										}
									},
									{
										"source": {
											"path": "$['VisitMode']"
										},
										"sink": {
											"path": "$['VisitMode']"
										}
									},
									{
										"source": {
											"path": "$['Status']"
										},
										"sink": {
											"path": "$['Status']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Score']"
										},
										"sink": {
											"path": "$['Score']"
										}
									},
									{
										"source": {
											"path": "$['ReservationStatus']"
										},
										"sink": {
											"path": "$['ReservationStatus']"
										}
									},
									{
										"source": {
											"path": "$['FirstSubmitTime']"
										},
										"sink": {
											"path": "$['FirstSubmitTime']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_plans"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_risk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['ActCode']"
										},
										"sink": {
											"path": "$['ActCode']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['applicantName']"
										},
										"sink": {
											"path": "$['applicantName']"
										}
									},
									{
										"source": {
											"path": "$['reservationStatus']"
										},
										"sink": {
											"path": "$['reservationStatus']"
										}
									},
									{
										"source": {
											"path": "$['finalResult']"
										},
										"sink": {
											"path": "$['finalResult']"
										}
									},
									{
										"source": {
											"path": "$['visitType']"
										},
										"sink": {
											"path": "$['visitType']"
										}
									},
									{
										"source": {
											"path": "$['visitPlatform']"
										},
										"sink": {
											"path": "$['visitPlatform']"
										}
									},
									{
										"source": {
											"path": "$['visitMode']"
										},
										"sink": {
											"path": "$['visitMode']"
										}
									},
									{
										"source": {
											"path": "$['creatorPhone']"
										},
										"sink": {
											"path": "$['creatorPhone']"
										}
									},
									{
										"source": {
											"path": "$['applicantDistrict']"
										},
										"sink": {
											"path": "$['applicantDistrict']"
										}
									},
									{
										"source": {
											"path": "$['eventType']"
										},
										"sink": {
											"path": "$['eventType']"
										}
									},
									{
										"source": {
											"path": "$['visitedBy']"
										},
										"sink": {
											"path": "$['visitedBy']"
										}
									},
									{
										"source": {
											"path": "$['visitArea']"
										},
										"sink": {
											"path": "$['visitArea']"
										}
									},
									{
										"source": {
											"path": "$['eventMode']"
										},
										"sink": {
											"path": "$['eventMode']"
										}
									},
									{
										"source": {
											"path": "$['remark']"
										},
										"sink": {
											"path": "$['remark']"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitMode']"
										},
										"sink": {
											"path": "$['distributeVisitMode']"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitType']"
										},
										"sink": {
											"path": "$['distributeVisitType']"
										}
									},
									{
										"source": {
											"path": "$['eventDate']"
										},
										"sink": {
											"path": "$['eventDate']"
										}
									},
									{
										"source": {
											"path": "$['eventPlace']"
										},
										"sink": {
											"path": "$['eventPlace']"
										}
									},
									{
										"source": {
											"path": "$['eventCity']"
										},
										"sink": {
											"path": "$['eventCity']"
										}
									},
									{
										"source": {
											"path": "$['eventBeginTime']"
										},
										"sink": {
											"path": "$['eventBeginTime']"
										}
									},
									{
										"source": {
											"path": "$['eventEndTime']"
										},
										"sink": {
											"path": "$['eventEndTime']"
										}
									},
									{
										"source": {
											"path": "$['internalSpeakerNum']"
										},
										"sink": {
											"path": "$['internalSpeakerNum']"
										}
									},
									{
										"source": {
											"path": "$['externalSpeakerNum']"
										},
										"sink": {
											"path": "$['externalSpeakerNum']"
										}
									},
									{
										"source": {
											"path": "$['internalParticipantNum']"
										},
										"sink": {
											"path": "$['internalParticipantNum']"
										}
									},
									{
										"source": {
											"path": "$['externalParticipantNum']"
										},
										"sink": {
											"path": "$['externalParticipantNum']"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormal']"
										},
										"sink": {
											"path": "$['participantAbnormal']"
										}
									},
									{
										"source": {
											"path": "$['speakerNumRatioIsOk']"
										},
										"sink": {
											"path": "$['speakerNumRatioIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerNumIsOk']"
										},
										"sink": {
											"path": "$['speakerNumIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerChanged']"
										},
										"sink": {
											"path": "$['speakerChanged']"
										}
									},
									{
										"source": {
											"path": "$['speakerCanBeIdentified']"
										},
										"sink": {
											"path": "$['speakerCanBeIdentified']"
										}
									},
									{
										"source": {
											"path": "$['speechDurationIsOk']"
										},
										"sink": {
											"path": "$['speechDurationIsOk']"
										}
									},
									{
										"source": {
											"path": "$['writtenTextIsOk']"
										},
										"sink": {
											"path": "$['writtenTextIsOk']"
										}
									},
									{
										"source": {
											"path": "$['finalResultScore']"
										},
										"sink": {
											"path": "$['finalResultScore']"
										}
									},
									{
										"source": {
											"path": "$['speakerIdentifiedScore']"
										},
										"sink": {
											"path": "$['speakerIdentifiedScore']"
										}
									},
									{
										"source": {
											"path": "$['speakerRatioIsOkScore']"
										},
										"sink": {
											"path": "$['speakerRatioIsOkScore']"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormalScore']"
										},
										"sink": {
											"path": "$['participantAbnormalScore']"
										}
									},
									{
										"source": {
											"path": "$['offeredBillScore']"
										},
										"sink": {
											"path": "$['offeredBillScore']"
										}
									},
									{
										"source": {
											"path": "$['firstAuditBy']"
										},
										"sink": {
											"path": "$['firstAuditBy']"
										}
									},
									{
										"source": {
											"path": "$['firstSubmitBy']"
										},
										"sink": {
											"path": "$['firstSubmitBy']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report_speakerInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_iccheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_speakerInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['canIdentify']"
										},
										"sink": {
											"path": "$['canIdentify']"
										}
									},
									{
										"source": {
											"path": "$['canIdentifyBool']"
										},
										"sink": {
											"path": "$['canIdentifyBool']"
										}
									},
									{
										"source": {
											"path": "$['materialCode']"
										},
										"sink": {
											"path": "$['materialCode']"
										}
									},
									{
										"source": {
											"path": "$['pptIsOk']"
										},
										"sink": {
											"path": "$['pptIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerName']"
										},
										"sink": {
											"path": "$['speakerName']"
										}
									},
									{
										"source": {
											"path": "$['speakerQualification']"
										},
										"sink": {
											"path": "$['speakerQualification']"
										}
									},
									{
										"source": {
											"path": "$['speakerType']"
										},
										"sink": {
											"path": "$['speakerType']"
										}
									},
									{
										"source": {
											"path": "$['speechTopic']"
										},
										"sink": {
											"path": "$['speechTopic']"
										}
									},
									{
										"source": {
											"path": "$['tempReplaced']"
										},
										"sink": {
											"path": "$['tempReplaced']"
										}
									},
									{
										"source": {
											"path": "$['tempReplacedBool']"
										},
										"sink": {
											"path": "$['tempReplacedBool']"
										}
									},
									{
										"source": {
											"path": "$['timeEnough']"
										},
										"sink": {
											"path": "$['timeEnough']"
										}
									},
									{
										"source": {
											"path": "$['unidentifiedReason']"
										},
										"sink": {
											"path": "$['unidentifiedReason']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_speakerInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansMealsInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_plans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansMealsInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['arrivedBeforeEnd']"
										},
										"sink": {
											"path": "$['arrivedBeforeEnd']"
										}
									},
									{
										"source": {
											"path": "$['costAmount']"
										},
										"sink": {
											"path": "$['costAmount']"
										}
									},
									{
										"source": {
											"path": "$['mealsType']"
										},
										"sink": {
											"path": "$['mealsType']"
										}
									},
									{
										"source": {
											"path": "$['mealsTypeStr']"
										},
										"sink": {
											"path": "$['mealsTypeStr']"
										}
									},
									{
										"source": {
											"path": "$['numOfMeals']"
										},
										"sink": {
											"path": "$['numOfMeals']"
										}
									},
									{
										"source": {
											"path": "$['numOfPeople']"
										},
										"sink": {
											"path": "$['numOfPeople']"
										}
									},
									{
										"source": {
											"path": "$['offeredBill']"
										},
										"sink": {
											"path": "$['offeredBill']"
										}
									},
									{
										"source": {
											"path": "$['settlementMethod']"
										},
										"sink": {
											"path": "$['settlementMethod']"
										}
									},
									{
										"source": {
											"path": "$['shopName']"
										},
										"sink": {
											"path": "$['shopName']"
										}
									},
									{
										"source": {
											"path": "$['statementAmount']"
										},
										"sink": {
											"path": "$['statementAmount']"
										}
									},
									{
										"source": {
											"path": "$['takeMode']"
										},
										"sink": {
											"path": "$['takeMode']"
										}
									},
									{
										"source": {
											"path": "$['takeModeStr']"
										},
										"sink": {
											"path": "$['takeModeStr']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansMealsInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansHotelInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansHotelInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['hotelName']"
										},
										"sink": {
											"path": "$['hotelName']"
										}
									},
									{
										"source": {
											"path": "$['accommodationNum']"
										},
										"sink": {
											"path": "$['accommodationNum']"
										}
									},
									{
										"source": {
											"path": "$['accommodationAmount']"
										},
										"sink": {
											"path": "$['accommodationAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansHotelInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPrintInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansHotelInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPrintInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['printObject']"
										},
										"sink": {
											"path": "$['printObject']"
										}
									},
									{
										"source": {
											"path": "$['printAmount']"
										},
										"sink": {
											"path": "$['printAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPrintInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPlaceInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report_speakerInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPlaceInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['eventHotelName']"
										},
										"sink": {
											"path": "$['eventHotelName']"
										}
									},
									{
										"source": {
											"path": "$['eventRoomName']"
										},
										"sink": {
											"path": "$['eventRoomName']"
										}
									},
									{
										"source": {
											"path": "$['siteRentalAmount']"
										},
										"sink": {
											"path": "$['siteRentalAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPlaceInfos"
								}
							}
						]
					},
					{
						"name": "CD_event_visit_report_visitPlansPatientEducationInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPlaceInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPatientEducationInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['giftInfo']"
										},
										"sink": {
											"path": "$['giftInfo']"
										}
									},
									{
										"source": {
											"path": "$['giftNum']"
										},
										"sink": {
											"path": "$['giftNum']"
										}
									},
									{
										"source": {
											"path": "$['giftAmount']"
										},
										"sink": {
											"path": "$['giftAmount']"
										}
									},
									{
										"source": {
											"path": "$['giftVisible']"
										},
										"sink": {
											"path": "$['giftVisible']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientEducationInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPatientBookInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansTrafficInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPatientBookInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['bookInfo']"
										},
										"sink": {
											"path": "$['bookInfo']"
										}
									},
									{
										"source": {
											"path": "$['bookNum']"
										},
										"sink": {
											"path": "$['bookNum']"
										}
									},
									{
										"source": {
											"path": "$['bookAmount']"
										},
										"sink": {
											"path": "$['bookAmount']"
										}
									},
									{
										"source": {
											"path": "$['bookVisible']"
										},
										"sink": {
											"path": "$['bookVisible']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientBookInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_pte_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPrintInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_pte_report"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_ID']"
										},
										"sink": {
											"path": "$['Rpt_ID']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Name']"
										},
										"sink": {
											"path": "$['Rpt_Name']"
										}
									},
									{
										"source": {
											"path": "$['Emp_ID']"
										},
										"sink": {
											"path": "$['Emp_ID']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Purpose']"
										},
										"sink": {
											"path": "$['Rpt_Purpose']"
										}
									},
									{
										"source": {
											"path": "$['Rpe_Transaction_Amount']"
										},
										"sink": {
											"path": "$['Rpe_Transaction_Amount']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Approval_Status']"
										},
										"sink": {
											"path": "$['Rpt_Approval_Status']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Submit_Date']"
										},
										"sink": {
											"path": "$['Rpt_Submit_Date']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_pte_report"
								}
							}
						]
					},
					{
						"name": "CopyDataBackupInputEventfile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(\n'Backup/Input/EVENT/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteInputEVENTfile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataBackupInputEventfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/EVENT/PL_DATA_EVENT_REST_to_Input/DeleteInputEVENTZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansTrafficInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansMealsInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansTrafficInfos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['trafficShopName']"
										},
										"sink": {
											"path": "$['trafficShopName']"
										}
									},
									{
										"source": {
											"path": "$['trafficAmount']"
										},
										"sink": {
											"path": "$['trafficAmount']"
										}
									},
									{
										"source": {
											"path": "$['trafficTypeStr']"
										},
										"sink": {
											"path": "$['trafficTypeStr']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansTrafficInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_speaker_infos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_event_visit_report_visitPlansPatientEducationInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_speaker_infos"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"path": "$['TaskNumber']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerInfoId']"
										},
										"sink": {
											"path": "$['SpeakerInfoId']"
										}
									},
									{
										"source": {
											"path": "$['SourceId']"
										},
										"sink": {
											"path": "$['SourceId']"
										}
									},
									{
										"source": {
											"path": "$['SapId']"
										},
										"sink": {
											"path": "$['SapId']"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"path": "$['ExtId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerName']"
										},
										"sink": {
											"path": "$['SpeakerName']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Val']"
										},
										"sink": {
											"path": "$['SpeakerType_Val']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Txt']"
										},
										"sink": {
											"path": "$['SpeakerType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"path": "$['AreaCountry_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"path": "$['AreaCountry_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Region_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Region_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Val']"
										},
										"sink": {
											"path": "$['SpeakerLevel_Val']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Txt']"
										},
										"sink": {
											"path": "$['SpeakerLevel_Txt']"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Val']"
										},
										"sink": {
											"path": "$['OrgName_Val']"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Txt']"
										},
										"sink": {
											"path": "$['OrgName_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Val']"
										},
										"sink": {
											"path": "$['SubOrgName_Val']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Txt']"
										},
										"sink": {
											"path": "$['SubOrgName_Txt']"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Val']"
										},
										"sink": {
											"path": "$['OrgTitle_Val']"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Txt']"
										},
										"sink": {
											"path": "$['OrgTitle_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Skill_Val']"
										},
										"sink": {
											"path": "$['Skill_Val']"
										}
									},
									{
										"source": {
											"path": "$['Skill_Txt']"
										},
										"sink": {
											"path": "$['Skill_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['StatusReason']"
										},
										"sink": {
											"path": "$['StatusReason']"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Val']"
										},
										"sink": {
											"path": "$['TaskData_Val']"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Txt']"
										},
										"sink": {
											"path": "$['TaskData_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_speaker_infos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_event_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPatientBookInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_event_types"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_event_types"
								}
							}
						]
					},
					{
						"name": "CD_vw_cfg_event_types_subtypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_pte_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_cfg_event_types_subtypes"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_cfg_event_types_subtypes"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_event_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_speaker_infos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_event_status"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_event_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_event_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_status"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_expense_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_cfg_event_types_subtypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_expense_types"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_expense_types"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_reservation_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_reservation_status"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_reservation_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_finalresult",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_expense_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_finalresult"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_finalresult"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_modes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_event_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_modes"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_modes"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_plateform",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_reservation_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_plateform"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_plateform"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_finalresult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_types"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_types"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_tasks",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_tasks"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['TaskId']"
										},
										"sink": {
											"path": "$['TaskId']"
										}
									},
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"path": "$['TaskNumber']"
										}
									},
									{
										"source": {
											"path": "$['ActionId']"
										},
										"sink": {
											"path": "$['ActionId']"
										}
									},
									{
										"source": {
											"path": "$['ActName']"
										},
										"sink": {
											"path": "$['ActName']"
										}
									},
									{
										"source": {
											"path": "$['NodeId']"
										},
										"sink": {
											"path": "$['NodeId']"
										}
									},
									{
										"source": {
											"path": "$['NodeName']"
										},
										"sink": {
											"path": "$['NodeName']"
										}
									},
									{
										"source": {
											"path": "$['DtCreated']"
										},
										"sink": {
											"path": "$['DtCreated']"
										}
									},
									{
										"source": {
											"path": "$['DtDone']"
										},
										"sink": {
											"path": "$['DtDone']"
										}
									},
									{
										"source": {
											"path": "$['UserId']"
										},
										"sink": {
											"path": "$['UserId']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['ActDescr']"
										},
										"sink": {
											"path": "$['ActDescr']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_tasks"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_basic",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_basic"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['EventNum']"
										},
										"sink": {
											"path": "$['EventNum']"
										}
									},
									{
										"source": {
											"path": "$['EventName']"
										},
										"sink": {
											"path": "$['EventName']"
										}
									},
									{
										"source": {
											"path": "$['EventType_Val']"
										},
										"sink": {
											"path": "$['EventType_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventType_Txt']"
										},
										"sink": {
											"path": "$['EventType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Val']"
										},
										"sink": {
											"path": "$['SubEventType_Val']"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Txt']"
										},
										"sink": {
											"path": "$['SubEventType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Val']"
										},
										"sink": {
											"path": "$['EventForm_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Txt']"
										},
										"sink": {
											"path": "$['EventForm_Txt']"
										}
									},
									{
										"source": {
											"path": "$['DtStart']"
										},
										"sink": {
											"path": "$['DtStart']"
										}
									},
									{
										"source": {
											"path": "$['DtEnd']"
										},
										"sink": {
											"path": "$['DtEnd']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"path": "$['AreaCountry_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"path": "$['AreaCountry_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Region_Val']"
										},
										"sink": {
											"path": "$['Region_Val']"
										}
									},
									{
										"source": {
											"path": "$['Region_Txt']"
										},
										"sink": {
											"path": "$['Region_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Txt']"
										}
									},
									{
										"source": {
											"path": "$['EventAddr']"
										},
										"sink": {
											"path": "$['EventAddr']"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Val']"
										},
										"sink": {
											"path": "$['EventStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Txt']"
										},
										"sink": {
											"path": "$['EventStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Sponsor']"
										},
										"sink": {
											"path": "$['Sponsor']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['DspName']"
										},
										"sink": {
											"path": "$['DspName']"
										}
									},
									{
										"source": {
											"path": "$['UserName']"
										},
										"sink": {
											"path": "$['UserName']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['LeaderEmail']"
										},
										"sink": {
											"path": "$['LeaderEmail']"
										}
									},
									{
										"source": {
											"path": "$['DmName']"
										},
										"sink": {
											"path": "$['DmName']"
										}
									},
									{
										"source": {
											"path": "$['rmName']"
										},
										"sink": {
											"path": "$['rmName']"
										}
									},
									{
										"source": {
											"path": "$['rmCode']"
										},
										"sink": {
											"path": "$['rmCode']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_isNoPlan']"
										},
										"sink": {
											"path": "$['ExtData_isNoPlan']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Txt']"
										},
										"sink": {
											"path": "$['ExtData_department_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Val']"
										},
										"sink": {
											"path": "$['ExtData_department_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Txt']"
										},
										"sink": {
											"path": "$['ExtData_hospital_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Val']"
										},
										"sink": {
											"path": "$['ExtData_hospital_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Txt']"
										},
										"sink": {
											"path": "$['ExtData_chainStore_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Val']"
										},
										"sink": {
											"path": "$['ExtData_chainStore_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Txt']"
										},
										"sink": {
											"path": "$['ExtData_drugStore_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Val']"
										},
										"sink": {
											"path": "$['ExtData_drugStore_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Val']"
										},
										"sink": {
											"path": "$['ExtData_product_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Txt']"
										},
										"sink": {
											"path": "$['ExtData_product_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_basic"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendeetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"path": "$['Stage']"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"path": "$['AmtAcc']"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"path": "$['AmtAct']"
										}
									},
									{
										"source": {
											"path": "$['AttendStatus']"
										},
										"sink": {
											"path": "$['AttendStatus']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"path": "$['CostCenter_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Txt']"
										},
										"sink": {
											"path": "$['CostCenter_Txt']"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Val']"
										},
										"sink": {
											"path": "$['WbsCode_Val']"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Txt']"
										},
										"sink": {
											"path": "$['WbsCode_Txt']"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Val']"
										},
										"sink": {
											"path": "$['InternalOrder_Val']"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Txt']"
										},
										"sink": {
											"path": "$['InternalOrder_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:29:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_Event')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_REST_to_Input02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CD_vw_vep_cfg_expense_types_subtypes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_expense_types_subtypes"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Code']"
										},
										"sink": {
											"path": "$['Code']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_expense_types_subtypes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:30:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_Event')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_REST_to_Input02_Initialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CD_vw_vep_cfg_expense_types_subtypes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_expense_types_subtypes",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Code']"
										},
										"sink": {
											"path": "$['Code']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_expense_types_subtypes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:32:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_Event')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_REST_to_Input_Initialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_vw_vep_event_infos_basic",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:05:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_basic",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['EventNum']"
										},
										"sink": {
											"path": "$['EventNum']"
										}
									},
									{
										"source": {
											"path": "$['EventName']"
										},
										"sink": {
											"path": "$['EventName']"
										}
									},
									{
										"source": {
											"path": "$['EventType_Val']"
										},
										"sink": {
											"path": "$['EventType_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventType_Txt']"
										},
										"sink": {
											"path": "$['EventType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Val']"
										},
										"sink": {
											"path": "$['SubEventType_Val']"
										}
									},
									{
										"source": {
											"path": "$['SubEventType_Txt']"
										},
										"sink": {
											"path": "$['SubEventType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Val']"
										},
										"sink": {
											"path": "$['EventForm_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventForm_Txt']"
										},
										"sink": {
											"path": "$['EventForm_Txt']"
										}
									},
									{
										"source": {
											"path": "$['DtStart']"
										},
										"sink": {
											"path": "$['DtStart']"
										}
									},
									{
										"source": {
											"path": "$['DtEnd']"
										},
										"sink": {
											"path": "$['DtEnd']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"path": "$['AreaCountry_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"path": "$['AreaCountry_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Region_Val']"
										},
										"sink": {
											"path": "$['Region_Val']"
										}
									},
									{
										"source": {
											"path": "$['Region_Txt']"
										},
										"sink": {
											"path": "$['Region_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Txt']"
										}
									},
									{
										"source": {
											"path": "$['EventAddr']"
										},
										"sink": {
											"path": "$['EventAddr']"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Val']"
										},
										"sink": {
											"path": "$['EventStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['EventStatus_Txt']"
										},
										"sink": {
											"path": "$['EventStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Sponsor']"
										},
										"sink": {
											"path": "$['Sponsor']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['DspName']"
										},
										"sink": {
											"path": "$['DspName']"
										}
									},
									{
										"source": {
											"path": "$['UserName']"
										},
										"sink": {
											"path": "$['UserName']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['LeaderEmail']"
										},
										"sink": {
											"path": "$['LeaderEmail']"
										}
									},
									{
										"source": {
											"path": "$['DmName']"
										},
										"sink": {
											"path": "$['DmName']"
										}
									},
									{
										"source": {
											"path": "$['rmName']"
										},
										"sink": {
											"path": "$['rmName']"
										}
									},
									{
										"source": {
											"path": "$['rmCode']"
										},
										"sink": {
											"path": "$['rmCode']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_isNoPlan']"
										},
										"sink": {
											"path": "$['ExtData_isNoPlan']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Txt']"
										},
										"sink": {
											"path": "$['ExtData_department_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_department_Val']"
										},
										"sink": {
											"path": "$['ExtData_department_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Txt']"
										},
										"sink": {
											"path": "$['ExtData_hospital_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_hospital_Val']"
										},
										"sink": {
											"path": "$['ExtData_hospital_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Txt']"
										},
										"sink": {
											"path": "$['ExtData_chainStore_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_chainStore_Val']"
										},
										"sink": {
											"path": "$['ExtData_chainStore_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Txt']"
										},
										"sink": {
											"path": "$['ExtData_drugStore_Txt']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_drugStore_Val']"
										},
										"sink": {
											"path": "$['ExtData_drugStore_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Val']"
										},
										"sink": {
											"path": "$['ExtData_product_Val']"
										}
									},
									{
										"source": {
											"path": "$['ExtData_product_Txt']"
										},
										"sink": {
											"path": "$['ExtData_product_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_basic"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_attendee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_attendee",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeId']"
										},
										"sink": {
											"path": "$['AttendeeId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"path": "$['ExtId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['Name']"
										},
										"sink": {
											"path": "$['Name']"
										}
									},
									{
										"source": {
											"path": "$['Org']"
										},
										"sink": {
											"path": "$['Org']"
										}
									},
									{
										"source": {
											"path": "$['SubOrg']"
										},
										"sink": {
											"path": "$['SubOrg']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_attendee"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_attendeetype",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteInputEVENTfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_attendeetype",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['AttendeeTypeId']"
										},
										"sink": {
											"name": "AttendeeTypeId"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"name": "EventId"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"name": "AttendeeType"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"name": "AttendeeName"
										}
									},
									{
										"source": {
											"path": "$['AttendeeQty']"
										},
										"sink": {
											"name": "AttendeeQty"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_attendeetype"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_sponsor",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_basic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_sponsor",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerDspName']"
										},
										"sink": {
											"path": "$['OrganizerDspName']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerNum']"
										},
										"sink": {
											"path": "$['OrganizerNum']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerMobile']"
										},
										"sink": {
											"path": "$['OrganizerMobile']"
										}
									},
									{
										"source": {
											"path": "$['OrganizerEmail']"
										},
										"sink": {
											"path": "$['OrganizerEmail']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_sponsor"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_session_text",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_session_text",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['SessionId']"
										},
										"sink": {
											"path": "$['SessionId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SessionText']"
										},
										"sink": {
											"path": "$['SessionText']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_session_text"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_attendeetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"path": "$['Stage']"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"path": "$['AmtAcc']"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"path": "$['AmtAct']"
										}
									},
									{
										"source": {
											"path": "$['AttendStatus']"
										},
										"sink": {
											"path": "$['AttendStatus']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"path": "$['CostCenter_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Txt']"
										},
										"sink": {
											"path": "$['CostCenter_Txt']"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Val']"
										},
										"sink": {
											"path": "$['WbsCode_Val']"
										}
									},
									{
										"source": {
											"path": "$['WbsCode_Txt']"
										},
										"sink": {
											"path": "$['WbsCode_Txt']"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Val']"
										},
										"sink": {
											"path": "$['InternalOrder_Val']"
										}
									},
									{
										"source": {
											"path": "$['InternalOrder_Txt']"
										},
										"sink": {
											"path": "$['InternalOrder_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_product",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_sponsor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker_product",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Product_Val']"
										},
										"sink": {
											"path": "$['Product_Val']"
										}
									},
									{
										"source": {
											"path": "$['Product_Txt']"
										},
										"sink": {
											"path": "$['Product_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_product"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_speaker_material",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_session_text",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_speaker_material",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['MatNum']"
										},
										"sink": {
											"path": "$['MatNum']"
										}
									},
									{
										"source": {
											"path": "$['LectureMaterials_Url']"
										},
										"sink": {
											"path": "$['LectureMaterials_Url']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_material"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_expense",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_expense",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ExpenseId']"
										},
										"sink": {
											"path": "$['ExpenseId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerId']"
										},
										"sink": {
											"path": "$['SpeakerId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['IO_Val']"
										},
										"sink": {
											"path": "$['IO_Val']"
										}
									},
									{
										"source": {
											"path": "$['IO_Txt']"
										},
										"sink": {
											"path": "$['IO_Txt']"
										}
									},
									{
										"source": {
											"path": "$['PayStatus']"
										},
										"sink": {
											"path": "$['PayStatus']"
										}
									},
									{
										"source": {
											"path": "$['CostType_Val']"
										},
										"sink": {
											"path": "$['CostType_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostType_Txt']"
										},
										"sink": {
											"path": "$['CostType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AmtAcc']"
										},
										"sink": {
											"path": "$['AmtAcc']"
										}
									},
									{
										"source": {
											"path": "$['AmtAct']"
										},
										"sink": {
											"path": "$['AmtAct']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_Val']"
										},
										"sink": {
											"path": "$['CostCenter_Val']"
										}
									},
									{
										"source": {
											"path": "$['CostCenter_txt']"
										},
										"sink": {
											"path": "$['CostCenter_txt']"
										}
									},
									{
										"source": {
											"path": "$['Currency']"
										},
										"sink": {
											"path": "$['Currency']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['IsElectronicInvoice']"
										},
										"sink": {
											"path": "$['IsElectronicInvoice']"
										}
									},
									{
										"source": {
											"path": "$['NonPosReason']"
										},
										"sink": {
											"path": "$['NonPosReason']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_expense"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_outside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_material",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_checkin_outside",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"path": "$['AttendeeName']"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"path": "$['OrgName']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"path": "$['SubOrgName']"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"path": "$['DtCheckin']"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"path": "$['CheckinMode']"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"path": "$['CheckinSource']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"path": "$['CheckInUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_outside"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_checkin_inside",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_expense",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_checkin_inside",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeName']"
										},
										"sink": {
											"path": "$['AttendeeName']"
										}
									},
									{
										"source": {
											"path": "$['OrgName']"
										},
										"sink": {
											"path": "$['OrgName']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName']"
										},
										"sink": {
											"path": "$['SubOrgName']"
										}
									},
									{
										"source": {
											"path": "$['DtCheckin']"
										},
										"sink": {
											"path": "$['DtCheckin']"
										}
									},
									{
										"source": {
											"path": "$['CheckinMode']"
										},
										"sink": {
											"path": "$['CheckinMode']"
										}
									},
									{
										"source": {
											"path": "$['CheckinSource']"
										},
										"sink": {
											"path": "$['CheckinSource']"
										}
									},
									{
										"source": {
											"path": "$['AttendeeType']"
										},
										"sink": {
											"path": "$['AttendeeType']"
										}
									},
									{
										"source": {
											"path": "$['CheckInUrl']"
										},
										"sink": {
											"path": "$['CheckInUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_inside"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_file",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['FileKey']"
										},
										"sink": {
											"path": "$['FileKey']"
										}
									},
									{
										"source": {
											"path": "$['FileName']"
										},
										"sink": {
											"path": "$['FileName']"
										}
									},
									{
										"source": {
											"path": "$['FileDescr']"
										},
										"sink": {
											"path": "$['FileDescr']"
										}
									},
									{
										"source": {
											"path": "$['UploadName']"
										},
										"sink": {
											"path": "$['UploadName']"
										}
									},
									{
										"source": {
											"path": "$['UploadTime']"
										},
										"sink": {
											"path": "$['UploadTime']"
										}
									},
									{
										"source": {
											"path": "$['FileType']"
										},
										"sink": {
											"path": "$['FileType']"
										}
									},
									{
										"source": {
											"path": "$['FileUrl']"
										},
										"sink": {
											"path": "$['FileUrl']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_file"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_risk",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_inside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_risk",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Stage']"
										},
										"sink": {
											"path": "$['Stage']"
										}
									},
									{
										"source": {
											"path": "$['Message']"
										},
										"sink": {
											"path": "$['Message']"
										}
									},
									{
										"source": {
											"path": "$['Comments']"
										},
										"sink": {
											"path": "$['Comments']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_risk"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_infos_iccheck",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_infos_iccheck",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Number']"
										},
										"sink": {
											"path": "$['Number']"
										}
									},
									{
										"source": {
											"path": "$['Status_Val']"
										},
										"sink": {
											"path": "$['Status_Val']"
										}
									},
									{
										"source": {
											"path": "$['Status_Txt']"
										},
										"sink": {
											"path": "$['Status_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Remark']"
										},
										"sink": {
											"path": "$['Remark']"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimDspName']"
										},
										"sink": {
											"path": "$['SatelliteClaimDspName']"
										}
									},
									{
										"source": {
											"path": "$['SatelliteClaimFirstDate']"
										},
										"sink": {
											"path": "$['SatelliteClaimFirstDate']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_infos_iccheck"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_plans",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_checkin_outside",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_plans",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['VisitPlanId']"
										},
										"sink": {
											"path": "$['VisitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Val']"
										},
										"sink": {
											"path": "$['VisitedBy_Val']"
										}
									},
									{
										"source": {
											"path": "$['VisitedBy_Txt']"
										},
										"sink": {
											"path": "$['VisitedBy_Txt']"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Val']"
										},
										"sink": {
											"path": "$['DistributedBy_Val']"
										}
									},
									{
										"source": {
											"path": "$['DistributedBy_Txt']"
										},
										"sink": {
											"path": "$['DistributedBy_Txt']"
										}
									},
									{
										"source": {
											"path": "$['VisitNumber']"
										},
										"sink": {
											"path": "$['VisitNumber']"
										}
									},
									{
										"source": {
											"path": "$['VisitType']"
										},
										"sink": {
											"path": "$['VisitType']"
										}
									},
									{
										"source": {
											"path": "$['VisitMode']"
										},
										"sink": {
											"path": "$['VisitMode']"
										}
									},
									{
										"source": {
											"path": "$['Status']"
										},
										"sink": {
											"path": "$['Status']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Score']"
										},
										"sink": {
											"path": "$['Score']"
										}
									},
									{
										"source": {
											"path": "$['ReservationStatus']"
										},
										"sink": {
											"path": "$['ReservationStatus']"
										}
									},
									{
										"source": {
											"path": "$['FirstSubmitTime']"
										},
										"sink": {
											"path": "$['FirstSubmitTime']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_plans"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_risk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['ActCode']"
										},
										"sink": {
											"path": "$['ActCode']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['applicantName']"
										},
										"sink": {
											"path": "$['applicantName']"
										}
									},
									{
										"source": {
											"path": "$['reservationStatus']"
										},
										"sink": {
											"path": "$['reservationStatus']"
										}
									},
									{
										"source": {
											"path": "$['finalResult']"
										},
										"sink": {
											"path": "$['finalResult']"
										}
									},
									{
										"source": {
											"path": "$['visitType']"
										},
										"sink": {
											"path": "$['visitType']"
										}
									},
									{
										"source": {
											"path": "$['visitPlatform']"
										},
										"sink": {
											"path": "$['visitPlatform']"
										}
									},
									{
										"source": {
											"path": "$['visitMode']"
										},
										"sink": {
											"path": "$['visitMode']"
										}
									},
									{
										"source": {
											"path": "$['creatorPhone']"
										},
										"sink": {
											"path": "$['creatorPhone']"
										}
									},
									{
										"source": {
											"path": "$['applicantDistrict']"
										},
										"sink": {
											"path": "$['applicantDistrict']"
										}
									},
									{
										"source": {
											"path": "$['eventType']"
										},
										"sink": {
											"path": "$['eventType']"
										}
									},
									{
										"source": {
											"path": "$['visitedBy']"
										},
										"sink": {
											"path": "$['visitedBy']"
										}
									},
									{
										"source": {
											"path": "$['visitArea']"
										},
										"sink": {
											"path": "$['visitArea']"
										}
									},
									{
										"source": {
											"path": "$['eventMode']"
										},
										"sink": {
											"path": "$['eventMode']"
										}
									},
									{
										"source": {
											"path": "$['remark']"
										},
										"sink": {
											"path": "$['remark']"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitMode']"
										},
										"sink": {
											"path": "$['distributeVisitMode']"
										}
									},
									{
										"source": {
											"path": "$['distributeVisitType']"
										},
										"sink": {
											"path": "$['distributeVisitType']"
										}
									},
									{
										"source": {
											"path": "$['eventDate']"
										},
										"sink": {
											"path": "$['eventDate']"
										}
									},
									{
										"source": {
											"path": "$['eventPlace']"
										},
										"sink": {
											"path": "$['eventPlace']"
										}
									},
									{
										"source": {
											"path": "$['eventCity']"
										},
										"sink": {
											"path": "$['eventCity']"
										}
									},
									{
										"source": {
											"path": "$['eventBeginTime']"
										},
										"sink": {
											"path": "$['eventBeginTime']"
										}
									},
									{
										"source": {
											"path": "$['eventEndTime']"
										},
										"sink": {
											"path": "$['eventEndTime']"
										}
									},
									{
										"source": {
											"path": "$['internalSpeakerNum']"
										},
										"sink": {
											"path": "$['internalSpeakerNum']"
										}
									},
									{
										"source": {
											"path": "$['externalSpeakerNum']"
										},
										"sink": {
											"path": "$['externalSpeakerNum']"
										}
									},
									{
										"source": {
											"path": "$['internalParticipantNum']"
										},
										"sink": {
											"path": "$['internalParticipantNum']"
										}
									},
									{
										"source": {
											"path": "$['externalParticipantNum']"
										},
										"sink": {
											"path": "$['externalParticipantNum']"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormal']"
										},
										"sink": {
											"path": "$['participantAbnormal']"
										}
									},
									{
										"source": {
											"path": "$['speakerNumRatioIsOk']"
										},
										"sink": {
											"path": "$['speakerNumRatioIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerNumIsOk']"
										},
										"sink": {
											"path": "$['speakerNumIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerChanged']"
										},
										"sink": {
											"path": "$['speakerChanged']"
										}
									},
									{
										"source": {
											"path": "$['speakerCanBeIdentified']"
										},
										"sink": {
											"path": "$['speakerCanBeIdentified']"
										}
									},
									{
										"source": {
											"path": "$['speechDurationIsOk']"
										},
										"sink": {
											"path": "$['speechDurationIsOk']"
										}
									},
									{
										"source": {
											"path": "$['writtenTextIsOk']"
										},
										"sink": {
											"path": "$['writtenTextIsOk']"
										}
									},
									{
										"source": {
											"path": "$['finalResultScore']"
										},
										"sink": {
											"path": "$['finalResultScore']"
										}
									},
									{
										"source": {
											"path": "$['speakerIdentifiedScore']"
										},
										"sink": {
											"path": "$['speakerIdentifiedScore']"
										}
									},
									{
										"source": {
											"path": "$['speakerRatioIsOkScore']"
										},
										"sink": {
											"path": "$['speakerRatioIsOkScore']"
										}
									},
									{
										"source": {
											"path": "$['participantAbnormalScore']"
										},
										"sink": {
											"path": "$['participantAbnormalScore']"
										}
									},
									{
										"source": {
											"path": "$['offeredBillScore']"
										},
										"sink": {
											"path": "$['offeredBillScore']"
										}
									},
									{
										"source": {
											"path": "$['firstAuditBy']"
										},
										"sink": {
											"path": "$['firstAuditBy']"
										}
									},
									{
										"source": {
											"path": "$['firstSubmitBy']"
										},
										"sink": {
											"path": "$['firstSubmitBy']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_visit_report_speakerInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_iccheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_speakerInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['canIdentify']"
										},
										"sink": {
											"path": "$['canIdentify']"
										}
									},
									{
										"source": {
											"path": "$['canIdentifyBool']"
										},
										"sink": {
											"path": "$['canIdentifyBool']"
										}
									},
									{
										"source": {
											"path": "$['materialCode']"
										},
										"sink": {
											"path": "$['materialCode']"
										}
									},
									{
										"source": {
											"path": "$['pptIsOk']"
										},
										"sink": {
											"path": "$['pptIsOk']"
										}
									},
									{
										"source": {
											"path": "$['speakerName']"
										},
										"sink": {
											"path": "$['speakerName']"
										}
									},
									{
										"source": {
											"path": "$['speakerQualification']"
										},
										"sink": {
											"path": "$['speakerQualification']"
										}
									},
									{
										"source": {
											"path": "$['speakerType']"
										},
										"sink": {
											"path": "$['speakerType']"
										}
									},
									{
										"source": {
											"path": "$['speechTopic']"
										},
										"sink": {
											"path": "$['speechTopic']"
										}
									},
									{
										"source": {
											"path": "$['tempReplaced']"
										},
										"sink": {
											"path": "$['tempReplaced']"
										}
									},
									{
										"source": {
											"path": "$['tempReplacedBool']"
										},
										"sink": {
											"path": "$['tempReplacedBool']"
										}
									},
									{
										"source": {
											"path": "$['timeEnough']"
										},
										"sink": {
											"path": "$['timeEnough']"
										}
									},
									{
										"source": {
											"path": "$['unidentifiedReason']"
										},
										"sink": {
											"path": "$['unidentifiedReason']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_speakerInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansMealsInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_plans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansMealsInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['arrivedBeforeEnd']"
										},
										"sink": {
											"path": "$['arrivedBeforeEnd']"
										}
									},
									{
										"source": {
											"path": "$['costAmount']"
										},
										"sink": {
											"path": "$['costAmount']"
										}
									},
									{
										"source": {
											"path": "$['mealsType']"
										},
										"sink": {
											"path": "$['mealsType']"
										}
									},
									{
										"source": {
											"path": "$['mealsTypeStr']"
										},
										"sink": {
											"path": "$['mealsTypeStr']"
										}
									},
									{
										"source": {
											"path": "$['numOfMeals']"
										},
										"sink": {
											"path": "$['numOfMeals']"
										}
									},
									{
										"source": {
											"path": "$['numOfPeople']"
										},
										"sink": {
											"path": "$['numOfPeople']"
										}
									},
									{
										"source": {
											"path": "$['offeredBill']"
										},
										"sink": {
											"path": "$['offeredBill']"
										}
									},
									{
										"source": {
											"path": "$['settlementMethod']"
										},
										"sink": {
											"path": "$['settlementMethod']"
										}
									},
									{
										"source": {
											"path": "$['shopName']"
										},
										"sink": {
											"path": "$['shopName']"
										}
									},
									{
										"source": {
											"path": "$['statementAmount']"
										},
										"sink": {
											"path": "$['statementAmount']"
										}
									},
									{
										"source": {
											"path": "$['takeMode']"
										},
										"sink": {
											"path": "$['takeMode']"
										}
									},
									{
										"source": {
											"path": "$['takeModeStr']"
										},
										"sink": {
											"path": "$['takeModeStr']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansMealsInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansHotelInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansHotelInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['hotelName']"
										},
										"sink": {
											"path": "$['hotelName']"
										}
									},
									{
										"source": {
											"path": "$['accommodationNum']"
										},
										"sink": {
											"path": "$['accommodationNum']"
										}
									},
									{
										"source": {
											"path": "$['accommodationAmount']"
										},
										"sink": {
											"path": "$['accommodationAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansHotelInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPrintInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansHotelInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPrintInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['printObject']"
										},
										"sink": {
											"path": "$['printObject']"
										}
									},
									{
										"source": {
											"path": "$['printAmount']"
										},
										"sink": {
											"path": "$['printAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPrintInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPlaceInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_visit_report_speakerInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPlaceInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['eventHotelName']"
										},
										"sink": {
											"path": "$['eventHotelName']"
										}
									},
									{
										"source": {
											"path": "$['eventRoomName']"
										},
										"sink": {
											"path": "$['eventRoomName']"
										}
									},
									{
										"source": {
											"path": "$['siteRentalAmount']"
										},
										"sink": {
											"path": "$['siteRentalAmount']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPlaceInfos"
								}
							}
						]
					},
					{
						"name": "CD_event_visit_report_visitPlansPatientEducationInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPlaceInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPatientEducationInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['giftInfo']"
										},
										"sink": {
											"path": "$['giftInfo']"
										}
									},
									{
										"source": {
											"path": "$['giftNum']"
										},
										"sink": {
											"path": "$['giftNum']"
										}
									},
									{
										"source": {
											"path": "$['giftAmount']"
										},
										"sink": {
											"path": "$['giftAmount']"
										}
									},
									{
										"source": {
											"path": "$['giftVisible']"
										},
										"sink": {
											"path": "$['giftVisible']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientEducationInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansPatientBookInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansTrafficInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansPatientBookInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['bookInfo']"
										},
										"sink": {
											"path": "$['bookInfo']"
										}
									},
									{
										"source": {
											"path": "$['bookNum']"
										},
										"sink": {
											"path": "$['bookNum']"
										}
									},
									{
										"source": {
											"path": "$['bookAmount']"
										},
										"sink": {
											"path": "$['bookAmount']"
										}
									},
									{
										"source": {
											"path": "$['bookVisible']"
										},
										"sink": {
											"path": "$['bookVisible']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientBookInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_pte_report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPrintInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_pte_report",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['RowId']"
										},
										"sink": {
											"path": "$['RowId']"
										}
									},
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_ID']"
										},
										"sink": {
											"path": "$['Rpt_ID']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Name']"
										},
										"sink": {
											"path": "$['Rpt_Name']"
										}
									},
									{
										"source": {
											"path": "$['Emp_ID']"
										},
										"sink": {
											"path": "$['Emp_ID']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Purpose']"
										},
										"sink": {
											"path": "$['Rpt_Purpose']"
										}
									},
									{
										"source": {
											"path": "$['Rpe_Transaction_Amount']"
										},
										"sink": {
											"path": "$['Rpe_Transaction_Amount']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Approval_Status']"
										},
										"sink": {
											"path": "$['Rpt_Approval_Status']"
										}
									},
									{
										"source": {
											"path": "$['Rpt_Submit_Date']"
										},
										"sink": {
											"path": "$['Rpt_Submit_Date']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_pte_report"
								}
							}
						]
					},
					{
						"name": "CopyDataBackupInputEventfile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(\n'Backup/Input/EVENT/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteInputEVENTfile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataBackupInputEventfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/EVENT/PL_DATA_EVENT_REST_to_Input/DeleteInputEVENTZip"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CD_vw_vep_event_visit_report_visitPlansTrafficInfos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansMealsInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_visit_report_visitPlansTrafficInfos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['eventId']"
										},
										"sink": {
											"path": "$['eventId']"
										}
									},
									{
										"source": {
											"path": "$['visitPlanId']"
										},
										"sink": {
											"path": "$['visitPlanId']"
										}
									},
									{
										"source": {
											"path": "$['trafficShopName']"
										},
										"sink": {
											"path": "$['trafficShopName']"
										}
									},
									{
										"source": {
											"path": "$['trafficAmount']"
										},
										"sink": {
											"path": "$['trafficAmount']"
										}
									},
									{
										"source": {
											"path": "$['trafficTypeStr']"
										},
										"sink": {
											"path": "$['trafficTypeStr']"
										}
									},
									{
										"source": {
											"path": "$['createdOn']"
										},
										"sink": {
											"path": "$['createdOn']"
										}
									},
									{
										"source": {
											"path": "$['createdBy']"
										},
										"sink": {
											"path": "$['createdBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansTrafficInfos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_speaker_infos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_event_visit_report_visitPlansPatientEducationInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_speaker_infos",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"path": "$['TaskNumber']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerInfoId']"
										},
										"sink": {
											"path": "$['SpeakerInfoId']"
										}
									},
									{
										"source": {
											"path": "$['SourceId']"
										},
										"sink": {
											"path": "$['SourceId']"
										}
									},
									{
										"source": {
											"path": "$['SapId']"
										},
										"sink": {
											"path": "$['SapId']"
										}
									},
									{
										"source": {
											"path": "$['ExtId']"
										},
										"sink": {
											"path": "$['ExtId']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerName']"
										},
										"sink": {
											"path": "$['SpeakerName']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Val']"
										},
										"sink": {
											"path": "$['SpeakerType_Val']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerType_Txt']"
										},
										"sink": {
											"path": "$['SpeakerType_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Val']"
										},
										"sink": {
											"path": "$['AreaCountry_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCountry_Txt']"
										},
										"sink": {
											"path": "$['AreaCountry_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Region_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Region_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Region_Txt']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Val']"
										},
										"sink": {
											"path": "$['AreaCity_Val']"
										}
									},
									{
										"source": {
											"path": "$['AreaCity_Txt']"
										},
										"sink": {
											"path": "$['AreaCity_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Val']"
										},
										"sink": {
											"path": "$['SpeakerLevel_Val']"
										}
									},
									{
										"source": {
											"path": "$['SpeakerLevel_Txt']"
										},
										"sink": {
											"path": "$['SpeakerLevel_Txt']"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Val']"
										},
										"sink": {
											"path": "$['OrgName_Val']"
										}
									},
									{
										"source": {
											"path": "$['OrgName_Txt']"
										},
										"sink": {
											"path": "$['OrgName_Txt']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Val']"
										},
										"sink": {
											"path": "$['SubOrgName_Val']"
										}
									},
									{
										"source": {
											"path": "$['SubOrgName_Txt']"
										},
										"sink": {
											"path": "$['SubOrgName_Txt']"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Val']"
										},
										"sink": {
											"path": "$['OrgTitle_Val']"
										}
									},
									{
										"source": {
											"path": "$['OrgTitle_Txt']"
										},
										"sink": {
											"path": "$['OrgTitle_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Skill_Val']"
										},
										"sink": {
											"path": "$['Skill_Val']"
										}
									},
									{
										"source": {
											"path": "$['Skill_Txt']"
										},
										"sink": {
											"path": "$['Skill_Txt']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Val']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Val']"
										}
									},
									{
										"source": {
											"path": "$['ApprovalStatus_Txt']"
										},
										"sink": {
											"path": "$['ApprovalStatus_Txt']"
										}
									},
									{
										"source": {
											"path": "$['StatusReason']"
										},
										"sink": {
											"path": "$['StatusReason']"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Val']"
										},
										"sink": {
											"path": "$['TaskData_Val']"
										}
									},
									{
										"source": {
											"path": "$['TaskData_Txt']"
										},
										"sink": {
											"path": "$['TaskData_Txt']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_speaker_infos"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_event_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_event_visit_report_visitPlansPatientBookInfos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_event_types",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_event_types"
								}
							}
						]
					},
					{
						"name": "CD_vw_cfg_event_types_subtypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_pte_report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_cfg_event_types_subtypes",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									},
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_cfg_event_types_subtypes"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_event_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_speaker_infos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_event_status",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_event_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_event_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_status",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_expense_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_cfg_event_types_subtypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_expense_types",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_expense_types"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_reservation_status",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_reservation_status",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_reservation_status"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_finalresult",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_expense_types",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_finalresult",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_finalresult"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_modes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_event_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_modes",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_modes"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_plateform",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_reservation_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_plateform",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_plateform"
								}
							}
						]
					},
					{
						"name": "CD_vw_vep_cfg_visit_types",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_vw_vep_cfg_visit_finalresult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_cfg_visit_types",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['Val']"
										},
										"sink": {
											"path": "$['Val']"
										}
									},
									{
										"source": {
											"path": "$['Txt']"
										},
										"sink": {
											"path": "$['Txt']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_cfg_visit_types"
								}
							}
						]
					},
					{
						"name": "Copy data_vw_vep_event_tasks",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data_vw_vep_event_infos_speaker_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-code": "vw_vep_event_tasks",
									"patch": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['EventId']"
										},
										"sink": {
											"path": "$['EventId']"
										}
									},
									{
										"source": {
											"path": "$['TaskId']"
										},
										"sink": {
											"path": "$['TaskId']"
										}
									},
									{
										"source": {
											"path": "$['TaskNumber']"
										},
										"sink": {
											"path": "$['TaskNumber']"
										}
									},
									{
										"source": {
											"path": "$['ActionId']"
										},
										"sink": {
											"path": "$['ActionId']"
										}
									},
									{
										"source": {
											"path": "$['ActName']"
										},
										"sink": {
											"path": "$['ActName']"
										}
									},
									{
										"source": {
											"path": "$['NodeId']"
										},
										"sink": {
											"path": "$['NodeId']"
										}
									},
									{
										"source": {
											"path": "$['NodeName']"
										},
										"sink": {
											"path": "$['NodeName']"
										}
									},
									{
										"source": {
											"path": "$['DtCreated']"
										},
										"sink": {
											"path": "$['DtCreated']"
										}
									},
									{
										"source": {
											"path": "$['DtDone']"
										},
										"sink": {
											"path": "$['DtDone']"
										}
									},
									{
										"source": {
											"path": "$['UserId']"
										},
										"sink": {
											"path": "$['UserId']"
										}
									},
									{
										"source": {
											"path": "$['Mobile']"
										},
										"sink": {
											"path": "$['Mobile']"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"path": "$['Email']"
										}
									},
									{
										"source": {
											"path": "$['ActDescr']"
										},
										"sink": {
											"path": "$['ActDescr']"
										}
									},
									{
										"source": {
											"path": "$['CreatedOn']"
										},
										"sink": {
											"path": "$['CreatedOn']"
										}
									},
									{
										"source": {
											"path": "$['CreatedBy']"
										},
										"sink": {
											"path": "$['CreatedBy']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedOn']"
										},
										"sink": {
											"path": "$['ModifiedOn']"
										}
									},
									{
										"source": {
											"path": "$['ModifiedBy']"
										},
										"sink": {
											"path": "$['ModifiedBy']"
										}
									},
									{
										"source": {
											"path": "$['IsDeleted']"
										},
										"sink": {
											"path": "$['IsDeleted']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_REST_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_JSON_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/EVENT",
									"pFileName": "vw_vep_event_tasks"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:33:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_Event')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_JSON_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DATA_EVENT_REST_to_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_REST_to_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_REST_to_Input02",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_REST_to_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_REST_to_Input02",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_Input_to_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_REST_to_Input02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Input_to_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg cfg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg cfg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_Event_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_Event_Format_To_Stg cfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:41:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_REST_to_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_REST_to_Input02')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Input_to_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg cfg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_SFTP_To_Itg_Initializatioon')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DATA_EVENT_Input_to_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_REST_to_Input02_Initialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Input_to_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_Event_Format_To_Stg cfg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_Input_to_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Event_Format_To_Stg cfg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_Event_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_Event_Format_To_Stg cfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_REST_to_Input02_Initialization",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_EVENT_REST_to_Input_Initialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_REST_to_Input02_Initialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_EVENT_REST_to_Input_Initialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_REST_to_Input_Initialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:43:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Input_to_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Event_Format_To_Stg cfg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_Stg_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_REST_to_Input02_Initialization')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_REST_to_Input_Initialization')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_EVENT_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_update_event_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_event_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:40:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Event_Format_To_Stg cfg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydatacfg_event_typesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_event_types",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_event_types.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_event_types"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_event_types_subtypesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_event_types_subtypes",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_cfg_event_types_subtypes.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_event_types_subtypes"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_event_statusParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_event_status",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_event_status.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_event_status"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_statusParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_status",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_status.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_status"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_expense_typesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_expense_types",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_expense_types.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_expense_types"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_expense_types_subtypesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_expense_types_subtypes",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_expense_types_subtypes.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_expense_types_subtypes"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_reservation_statusParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_reservation_status",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_reservation_status.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_reservation_status"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_finalresultParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_finalresult",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_finalresult.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_finalresult"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_modesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_modes",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_modes.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_modes"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_plateformParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_plateform",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_plateform.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_plateform"
								}
							}
						]
					},
					{
						"name": "Copydatacfg_visit_typesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_cfg_visit_types",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Val",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									},
									"pFileName": "vw_vep_cfg_visit_types.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_cfg_visit_types"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pFolderName": {
						"type": "string",
						"defaultValue": "Format/EVENT"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:38:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Event_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydata_event_infos_attendeetypeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_attendeetype",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeTypeId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeTypeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeQty",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AttendeeQty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_attendeetype.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_attendeetype"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_sponsorParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_sponsor",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrganizerDspName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrganizerDspName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrganizerNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrganizerNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrganizerMobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrganizerMobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrganizerEmail",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrganizerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_sponsor.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_sponsor"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_speakerParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_speaker",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stage",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Stage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmtAcc",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AmtAcc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AmtAct",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 18,
											"precision": 38
										},
										"sink": {
											"name": "AmtAct",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AttendStatus",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AttendStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CostCenter_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostCenter_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CostCenter_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostCenter_txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WbsCode_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Wbscode_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WbsCode_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Wbscode_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "InternalOrder_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "InternalOrder_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "InternalOrder_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "InternalOrder_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_speaker.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_speaker"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_session_textParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_session_text",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SessionId",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SessionId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SessionText",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SessionText",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_session_text.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_session_text"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_speaker_productParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_speaker_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Product_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Product_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Product_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Product_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_product.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_speaker_product"
								}
							}
						]
					},
					{
						"name": "Copydata_event_infos_speaker_materialParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_speaker_material",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MatNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MatNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LectureMaterials_Url",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LectureMaterials_Url",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_speaker_material.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_speaker_material"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_checkin_outsideParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_checkin_outside",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubOrgName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubOrgName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DtCheckin",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DtCheckin",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CheckinMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckinMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CheckinSource",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckinSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CheckInUrl",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckInUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_outside.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_checkin_outside"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_checkin_insideParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_checkin_inside",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubOrgName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubOrgName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DtCheckin",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DtCheckin",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CheckinMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckinMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CheckinSource",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckinSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CheckInUrl",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CheckInUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_checkin_inside.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_checkin_inside"
								}
							}
						]
					},
					{
						"name": "Copydata_event_infos_attendeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_attendee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeId",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeId",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AttendeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Org",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Org",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubOrg",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubOrg",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_attendee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_attendee"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_fileParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_file",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FileKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FileKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FileDescr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FileDescr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UploadName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadTime",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "UploadTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FileType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FileType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FileUrl",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FileUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_file.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_file"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_riskParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_risk",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stage",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Stage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Message",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Message",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comments",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_risk.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_risk"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_tasksParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_tasks",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TaskId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TaskId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TaskNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TaskNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActionId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActionId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NodeId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NodeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NodeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NodeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DtCreated",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DtCreated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DtDone",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "DtDone",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "UserId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UserId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActDescr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActDescr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_tasks.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_tasks"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_iccheckParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_iccheck",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Status_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Status_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Remark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SatelliteClaimDspName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SatelliteClaimDspName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SatelliteClaimFirstDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SatelliteClaimFirstDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_iccheck.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_iccheck"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_visit_plansParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_plans",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitedBy_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitedBy_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitedBy_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitedBy_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DistributedBy_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DistributedBy_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DistributedBy_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DistributedBy_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VisitMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "VisitMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovalStatus_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ApprovalStatus_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovalStatus_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovalStatus_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Score",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Score",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ReservationStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ReservationStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstSubmitTime",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FirstSubmitTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_plans.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_plans"
								}
							}
						]
					},
					{
						"name": "Copydata_event_visit_report_speakerInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_speakerInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "canIdentify",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "canIdentify",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tempReplaced",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "tempReplaced",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "timeEnough",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "timeEnough",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speechTopic",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speechTopic",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pptIsOk",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "pptIsOk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "materialCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "materialCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerQualification",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerQualification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "unidentifiedReason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "unidentifiedReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "canIdentifyBool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "canIdentifyBool",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tempReplacedBool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "tempReplacedBool",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_speakerInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_speakerInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visit_report_visitPlansMealsInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansMealsInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "mealsType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "mealsType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "mealsTypeStr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "mealsTypeStr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "takeMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "takeMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "takeModeStr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "takeModeStr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "shopName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "shopName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "settlementMethod",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "settlementMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "costAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "costAmount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "statementAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "statementAmount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "offeredBill",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "offeredBill",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "arrivedBeforeEnd",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "arrivedBeforeEnd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "numOfPeople",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "numOfPeople",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "numOfMeals",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "numOfMeals",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansMealsInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansMealsInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visit_report_visitPlansHotelInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansHotelInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hotelName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "hotelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "accommodationNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "accommodationNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "accommodationAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "accommodationAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansHotelInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansHotelInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visit_report_visitPlansPlaceInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansPlaceInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventHotelName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventHotelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventRoomName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventRoomName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "siteRentalAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "siteRentalAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPlaceInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansPlaceInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visit_report_visitPlansPrintInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansPrintInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "printObject",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "printObject",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "printAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "printAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPrintInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansPrintInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visitPlansPatientEducationInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansPatientEducationInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "giftInfo",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "giftInfo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "giftNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "giftNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "giftAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "giftAmount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "giftVisible",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "giftVisible",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientEducationInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansPatientEducationInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_visitPlansPatientBookInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansPatientBookInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "bookInfo",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "bookInfo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "bookNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "bookNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "bookAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "bookAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "bookVisible",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "bookVisible",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansPatientBookInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansPatientBookInfos"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_pte_reportParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_pte_report",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RowId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RowId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rpt_ID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpt_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rpt_Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpt_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Emp_ID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Emp_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rpt_Purpose",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpt_Purpose",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rpe_Transaction_Amount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpe_Transaction_Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Rpt_Approval_Status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpt_Approval_Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rpt_Submit_Date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rpt_Submit_Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_pte_report.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_pte_report"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_speaker_infosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_speaker_infos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TaskNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TaskNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerInfoId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerInfoId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SourceId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SourceId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SapId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SapId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerType_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "SpeakerType_Val",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SpeakerType_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerType_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCountry_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCountry_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCountry_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCountry_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Region_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Region_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Region_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Region_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerLevel_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "SpeakerLevel_Val",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SpeakerLevel_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerLevel_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgName_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgName_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgName_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgName_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubOrgName_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubOrgName_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubOrgName_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubOrgName_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgTitle_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgTitle_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrgTitle_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OrgTitle_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skill_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Skill_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skill_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Skill_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovalStatus_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ApprovalStatus_Val",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovalStatus_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovalStatus_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StatusReason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "StatusReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TaskData_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TaskData_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TaskData_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TaskData_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_speaker_infos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_speaker_infos"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_infos_expenseParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_expense",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExpenseId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExpenseId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SpeakerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IO_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IO_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IO_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IO_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayStatus",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PayStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CostType_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostType_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CostType_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostType_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AmtAcc",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AmtAcc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AmtAct",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 18,
											"precision": 38
										},
										"sink": {
											"name": "AmtAct",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CostCenter_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostCenter_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CostCenter_txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CostCenter_txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Currency",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Currency",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Remark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsElectronicInvoice",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsElectronicInvoice",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NonPosReason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NonPosReason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_expense.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_expense"
								}
							}
						]
					},
					{
						"name": "Copydata_vw_vep_event_visit_reportParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerRatioIsOkScore",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerRatioIsOkScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitMode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitMode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "externalParticipantNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "externalParticipantNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerNumRatioIsOk",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerNumRatioIsOk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerIdentifiedScore",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerIdentifiedScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventEndTime",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventEndTime",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventBeginTime",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventBeginTime",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reservationStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "reservationStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "internalSpeakerNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "internalSpeakerNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "finalResultScore",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "finalResultScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "applicantName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "applicantName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "writtenTextIsOk",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "writtenTextIsOk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speechDurationIsOk",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speechDurationIsOk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "applicantDistrict",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "applicantDistrict",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "remark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "creatorPhone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "creatorPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "participantAbnormal",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "participantAbnormal",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "firstSubmitBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "firstSubmitBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerCanBeIdentified",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerCanBeIdentified",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "externalSpeakerNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "externalSpeakerNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerNumIsOk",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerNumIsOk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventPlace",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventPlace",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "speakerChanged",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "speakerChanged",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "internalParticipantNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "internalParticipantNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "participantAbnormalScore",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "participantAbnormalScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlatform",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlatform",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventCity",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "eventCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitArea",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "offeredBillScore",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "offeredBillScore",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "finalResult",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "finalResult",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report"
								}
							}
						]
					},
					{
						"name": "Copydata_visit_visitPlansTrafficInfosParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_visit_report_visitPlansTrafficInfos",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "eventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visitPlanId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "trafficTypeStr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "trafficType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "trafficShopName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "trafficShopName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "trafficAmount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "trafficAmount",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "createdOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "createdBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_visit_report_visitPlansTrafficInfos.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_visit_report_visitPlansTrafficInfos"
								}
							}
						]
					},
					{
						"name": "Copydatavw_vep_event_infos_basicParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pFolderName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_event_infos_basic",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventNum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventNum",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventType_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventType_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventType_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventType_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubEventType_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubEventType_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubEventType_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SubEventType_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventForm_Val",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EventForm_Val",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EventForm_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventForm_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DtStart",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DtStart",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DtEnd",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DtEnd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCountry_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCountry_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCountry_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCountry_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Region_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Region_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Region_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Region_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaCity_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AreaCity_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventAddr",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventAddr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventStatus_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventStatus_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EventStatus_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EventStatus_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sponsor",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Sponsor",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Remark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DspName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DspName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeaderEmail",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "leaderEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DmName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DmName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "rmName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RmName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "rmCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RmCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_isNoPlan",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_isNoPlan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_department_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_department_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_department_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_department_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_hospital_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_hospital_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_hospital_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_hospital_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_chainStore_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_chainStore_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_chainStore_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_chainStore_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_drugStore_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_drugStore_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_drugStore_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_drugStore_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_product_Val",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_product_Val",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtData_product_Txt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExtData_product_Txt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "CreatedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ModifiedOn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/EVENT",
									"pFileName": "vw_vep_event_infos_basic.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_event_infos_basic"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Event_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataEventFmt2Stg"
					},
					"pFolderName": {
						"type": "string",
						"defaultValue": "Input/EVENT/"
					},
					"pSinkFolderName": {
						"type": "string",
						"defaultValue": "Format/EVENT/"
					}
				},
				"folder": {
					"name": "Event"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:38:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FITS_Adjustment_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataInternetDrugstoreAdjustmentToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_internet_drugstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "account_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "account_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "english_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "english_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "strength_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "strength_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "package_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "package_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "project_start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_start_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "project_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "project_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cdate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "deductionflag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deductionflag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "quarter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "quarter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "transactionMonth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "transactionMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Adjustment/FITS",
									"pFileName": "biz_internet_drugstore.txt"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_internet_drugstore"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_FITS_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataFITSFmt2Stg"
					}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:46:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FITS_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataAccountSalesTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_account_sales_target",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Period"
										},
										"sink": {
											"name": "Period"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "AccountID"
										},
										"sink": {
											"name": "AccountID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "Amount"
										},
										"sink": {
											"name": "Amount"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/AccountSalesTarget",
									"pFileName": "AccountSalesTarget.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_account_sales_target"
								}
							}
						]
					},
					{
						"name": "CopydataSummaryParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_batch1_summary",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "File_Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "COUNT",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/Summary",
									"pFileName": "Summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_batch1_summary"
								}
							}
						]
					},
					{
						"name": "CopydataInternetDrugstoreParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_internet_drugstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"name": "account_code"
										},
										"sink": {
											"name": "account_code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "english_name"
										}
									},
									{
										"source": {
											"name": "strength_code"
										},
										"sink": {
											"name": "strength_code"
										}
									},
									{
										"source": {
											"name": "package_code"
										},
										"sink": {
											"name": "package_code"
										}
									},
									{
										"source": {
											"name": "project_start_date"
										},
										"sink": {
											"name": "project_start_date"
										}
									},
									{
										"source": {
											"name": "project_type"
										},
										"sink": {
											"name": "project_type"
										}
									},
									{
										"source": {
											"name": "cdate"
										},
										"sink": {
											"name": "cdate"
										}
									},
									{
										"source": {
											"name": "deductionflag"
										},
										"sink": {
											"name": "deductionflag"
										}
									},
									{
										"source": {
											"name": "quarter"
										},
										"sink": {
											"name": "quarter"
										}
									},
									{
										"source": {
											"name": "transactionMonth"
										},
										"sink": {
											"name": "transactionMonth"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/InternetDrugstore",
									"pFileName": "InternetDrugstore.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_internet_drugstore"
								}
							}
						]
					},
					{
						"name": "CopydataSysQuarterParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_sys_quarter",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "quarter_name"
										},
										"sink": {
											"name": "quarter_name"
										}
									},
									{
										"source": {
											"name": "start_date"
										},
										"sink": {
											"name": "start_date"
										}
									},
									{
										"source": {
											"name": "end_date"
										},
										"sink": {
											"name": "end_date"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "status"
										}
									},
									{
										"source": {
											"name": "del_flag"
										},
										"sink": {
											"name": "del_flag"
										}
									},
									{
										"source": {
											"name": "create_by"
										},
										"sink": {
											"name": "create_by"
										}
									},
									{
										"source": {
											"name": "create_time"
										},
										"sink": {
											"name": "create_time"
										}
									},
									{
										"source": {
											"name": "update_by"
										},
										"sink": {
											"name": "update_by"
										}
									},
									{
										"source": {
											"name": "update_time"
										},
										"sink": {
											"name": "update_time"
										}
									},
									{
										"source": {
											"name": "enable_date"
										},
										"sink": {
											"name": "enable_date"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"name": "is_default"
										},
										"sink": {
											"name": "is_default"
										}
									},
									{
										"source": {
											"name": "is_TRA"
										},
										"sink": {
											"name": "is_TRA"
										}
									},
									{
										"source": {
											"name": "last_quarter"
										},
										"sink": {
											"name": "last_quarter"
										}
									},
									{
										"source": {
											"name": "next_mde_quarter_date"
										},
										"sink": {
											"name": "next_mde_quarter_date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/SysQuarter",
									"pFileName": "SysQuarter.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_sys_quarter"
								}
							}
						]
					},
					{
						"name": "CopydataTogetherHospitalDrugstoreParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_together_hospital_drugstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Month"
										},
										"sink": {
											"name": "Month"
										}
									},
									{
										"source": {
											"name": "HospitalCode"
										},
										"sink": {
											"name": "HospitalCode"
										}
									},
									{
										"source": {
											"name": "DrugstoreCode"
										},
										"sink": {
											"name": "DrugstoreCode"
										}
									},
									{
										"source": {
											"name": "StrengthCode"
										},
										"sink": {
											"name": "StrengthCode"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "package_code"
										},
										"sink": {
											"name": "package_code"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/TogetherHospitalDrugstore",
									"pFileName": "TogetherHospitalDrugstore.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_together_hospital_drugstore"
								}
							}
						]
					},
					{
						"name": "CopydataKAMSalesTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_kam_sales_target",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "ChainStoreID"
										},
										"sink": {
											"name": "ChainStoreID"
										}
									},
									{
										"source": {
											"name": "ChainStoreName"
										},
										"sink": {
											"name": "ChainStoreName"
										}
									},
									{
										"source": {
											"name": "ChainStoreTarget"
										},
										"sink": {
											"name": "ChainStoreTarget"
										}
									},
									{
										"source": {
											"name": "DrugStoreTarget"
										},
										"sink": {
											"name": "DrugStoreTarget"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/KAMSalesTarget",
									"pFileName": "KAMSalesTarget.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_kam_sales_target"
								}
							}
						]
					},
					{
						"name": "CopydataPositionSalesTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_position_sales_target",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Period"
										},
										"sink": {
											"name": "Period"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Amount"
										},
										"sink": {
											"name": "Amount"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/PositionSalesTarget",
									"pFileName": "PositionSalesTarget.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_position_sales_target"
								}
							}
						]
					},
					{
						"name": "CopydataPositionTypeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_fits_position_type",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "IsSalesForce"
										},
										"sink": {
											"name": "IsSalesForce"
										}
									},
									{
										"source": {
											"name": "IsDelegate"
										},
										"sink": {
											"name": "IsDelegate"
										}
									},
									{
										"source": {
											"name": "Level"
										},
										"sink": {
											"name": "Level"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/PositionType",
									"pFileName": "PositionType.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_fits_position_type"
								}
							}
						]
					},
					{
						"name": "Exec_sp_Check_FITS_stg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopydataPositionTypeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataPositionSalesTargetParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataKAMSalesTargetParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataTogetherHospitalDrugstoreParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataSysQuarterParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataInternetDrugstoreParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataSummaryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopydataAccountSalesTargetParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_inmarket_stg_summary]",
							"storedProcedureParameters": {
								"ModuleName": {
									"value": "FITS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_FITS_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataFITSFmt2Stg"
					}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:49:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FITS_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnzipFormatFITS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterBatch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/FITS/",
									"pFileName": {
										"value": "@activity('FilterBatch1').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/FITStoLAKE_Batch1"
								}
							}
						]
					},
					{
						"name": "FilterBatch1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputFITSFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputFITSFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Batch1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputFITSFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/FITS/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterAccountSalesTarget",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'AccountSalesTarget')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetFormatFITSBatch1Floder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatFITS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Csv_Folder_Comma",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/FITStoLAKE_Batch1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FilterSummary",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Summary')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterInternet_Drugstore",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Internet_Drugstore')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterKAMSalesTarget",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'KAMSalesTarget')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPositionSalesTarget",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'PositionSalesTarget')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPositionType",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'PositionType')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSys_Quarter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Sys_Quarter')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHospitalDrugstore",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatFITSBatch1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatFITSBatch1Floder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'HospitalDrugstore')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteFormatFITSBatch1Floder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "IfHospitalDrugstore_FileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfSys_QuarterFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfPositionTypeFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfPositionSalesTargetFileExixsts",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfKAMSalesTargetFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfInternet_DrugstoreFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfSummaryFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfAccountSalesTargetExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/FITS/FITStoLAKE_Batch1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/FITS/PL_DATA_FITS_Input_To_Format/DeleteFormatFITSFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "IfAccountSalesTargetExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterAccountSalesTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterAccountSalesTarget').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataAccountSalesTargetTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterAccountSalesTarget').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/AccountSalesTarget",
												"pFileName": "AccountSalesTarget.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSummaryFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSummary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSummary').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSummaryTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterSummary').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/Summary",
												"pFileName": "Summary.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfInternet_DrugstoreFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterInternet_Drugstore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterInternet_Drugstore').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataInternetDrugstoreTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterInternet_Drugstore').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/InternetDrugstore",
												"pFileName": "InternetDrugstore.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfKAMSalesTargetFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAMSalesTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAMSalesTarget').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAMSalesTargetTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterKAMSalesTarget').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/KAMSalesTarget",
												"pFileName": "KAMSalesTarget.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPositionSalesTargetFileExixsts",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionSalesTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionSalesTarget').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionSalesTargetTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterPositionSalesTarget').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/PositionSalesTarget",
												"pFileName": "PositionSalesTarget.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPositionTypeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionType').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionTypeTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterPositionType').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/PositionType",
												"pFileName": "PositionType.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSys_QuarterFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSys_Quarter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSys_Quarter').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSysQuarterTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterSys_Quarter').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/SysQuarter",
												"pFileName": "SysQuarter.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfHospitalDrugstore_FileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHospitalDrugstore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHospitalDrugstore').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTogetherHospitalDrugstoreTxtToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/FITStoLAKE_Batch1",
												"pFileName": {
													"value": "@activity('FilterHospitalDrugstore').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/FITS/TogetherHospitalDrugstore",
												"pFileName": "TogetherHospitalDrugstore.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_Folder_Comma')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FITS_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilFITSFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterBatch1Zip').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_FITS_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "FITS2DataLake/"
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfBatch1ZipExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterBatch1Zip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterBatch1Zip').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minute",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "DeleteInputFITSZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputFITS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/FITS/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_SFTP_To_Input/DeleteInputMDMZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataSFTPToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputFITSZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterBatch1Zip').output.Value[0].name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/FITS"
														}
													}
												]
											},
											{
												"name": "DeleteSftpFITSZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataSFTPToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterBatch1Zip').output.Value[0].name",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/FITS/SFTP2Datalake"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataBackupInputFITS",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/FITS/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/FITS/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "FilterBatch1Zip",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_FITS_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_FITS_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'_Batch1_')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "FITS2Datalake"
					}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:48:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FITS_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_FITS_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_FITS_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFolderName": "FITS2Datalake"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_FITS_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_FITS_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_FITS_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_FITS_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_FITS_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_FITS_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_FITS_Format_To_Stg",
								"pActivity": "CopyDataFITSFmt2Stg"
							}
						}
					},
					{
						"name": "QueryFITSSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_FITS_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfFITSSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryFITSSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryFITSSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "FITS Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "FITS File row count not matched with summary",
										"errorCode": "ERROR0002"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_FITS_Stg_To_Itg",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_TRAN_SPRC_FITS_Stg_To_Itg",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "FITS"
					}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:52:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_FITS_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_FITS_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_FITS_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_FITS_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_GYCX_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataGYCXFactParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_gycx_fact",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/GYCX/gycx_fact",
									"pFileName": "gycx_fact.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_gycx_fact"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_GYCX_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataGYCXFmt2Stg"
					}
				},
				"folder": {
					"name": "GYCX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:59:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_GYCX_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterGYCXFactFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatGYCXFact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatGYCXFact').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pGYCXFact)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfGYCXFactFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterGYCXFactFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterGYCXFactFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataGYCXFactExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Province",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CITY",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "YEAR",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXYear",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MONTH",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXMonth",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HOSPITAL_CODE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXHospitalCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MOLE_NAME",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXMoleculeName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PRODUCT_NAME",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PACK_DES",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PACK_NUMBER",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "VALUE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STANDARD_UNIT",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "APP2_COD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXForm",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "APP1_COD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXAdministrationRoute",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CORP_NAME",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "GYCXCorprationName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/GYCX/Unzip",
												"pFileName": {
													"value": "@activity('FilterGYCXFactFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/GYCX/gycx_fact",
												"pFileName": "gycx_fact.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GetInputGYCXFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/GYCX/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterGYCX",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputGYCXFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputGYCXFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'GYCX.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UnzipFormatGYCX",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterGYCX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/GYCX/",
									"pFileName": {
										"value": "@activity('FilterGYCX').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/GYCX/Unzip"
								}
							}
						]
					},
					{
						"name": "GetFormatGYCXFact",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatGYCX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Csv_Folder_Comma",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/GYCX/Unzip"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatGYCXUnzipFloder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "IfGYCXFactFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/GYCX/Unzip"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/GYCX/PL_DATA_GYCX_Input_To_Format/DeleteFormatGYCXFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/GYCX"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/GYCX"
					},
					"pGYCXFact": {
						"type": "string",
						"defaultValue": "GYCX_Fact"
					}
				},
				"folder": {
					"name": "GYCX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:59:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_Folder_Comma')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_GYCX_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilGYCXFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterGYCX_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_GYCX_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfGYCXFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterGYCX_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterGYCX_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputGYCX",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/GYCX/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/GYCX/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputGYCXZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputGYCX",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/GYCX/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/GYCX/PL_DATA_GYCX_SFTP_To_Input/DeleteInputGYCXZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataGYCXSftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputGYCXZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/GYCX"
														}
													}
												]
											},
											{
												"name": "DeleteSftpGYCXZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataGYCXSftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/GYCXPL_DATA_GYCX_SFTP_To_Input/DeleteSftpGYCXZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterGYCX_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_GYCX_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_GYCX_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'GYCX_Summary')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/GYCX/"
					}
				},
				"folder": {
					"name": "GYCX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:58:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_GYCX_SFTP_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_GYCX_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_GYCX_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_GYCX_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_GYCX_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_GYCX_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/GYCX",
								"pFormatFolderName": "Format/GYCX",
								"pGYCXFact": "GYCX_Fact"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_GYCX_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_GYCX_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_GYCX_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_GYCX_Format_To_Stg",
								"pActivity": "CopyDataGYCXFmt2Stg"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "GYCX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:00:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_GYCX_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_GYCX_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_GYCX_Format_To_Stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_Adjustment_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataHCRM_Quarter_MappingExcelToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_dim_quarter_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "quarter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedPerson",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "modified_person",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "modified_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Excel_File",
								"type": "DatasetReference",
								"parameters": {
									"pPathName": {
										"value": "@pipeline().parameters.pInputFolderName",
										"type": "Expression"
									},
									"pFileName": "hcrm_quarter_mapping.xlsx",
									"pSheetName": "sheet1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_dim_quarter_mapping"
								}
							}
						]
					},
					{
						"name": "itg_sp_hcrm_dim_quarter_mapping",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopydataHCRM_Quarter_MappingExcelToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_hcrm_dim_quarter_mapping]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_HCRM_Adjustment_To_Itg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataAdjustment2Stg"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Adjustment/HCRM"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:05:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydatafact_callParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_call_m",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "activity_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ampm",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ampm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visit_time_stage_content",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "visit_time_stage_content",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_grade",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_grade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_target",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_target",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "feedback",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "feedback",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "library_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "library_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "library_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "library_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prod_feedback",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "prod_feedback",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prod_call_key_message",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "prod_call_key_message",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "prod_call_target",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "prod_call_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "next_call_target",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "next_call_target",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "action_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "action_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "activity_status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invalid_reason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "invalid_reason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ref_6",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ref_cli_inst",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_cli_inst",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_stamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "create_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_stamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "modify_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_call",
									"pFileName": "hcrm_fact_call.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_call_m"
								}
							}
						]
					},
					{
						"name": "Copydatadim_dla_metadataORCToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OrcSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_dim_dla_metadata_f ",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "subject"
										},
										"sink": {
											"name": "subject",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "file_name"
										},
										"sink": {
											"name": "file_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "update_type"
										},
										"sink": {
											"name": "update_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "volume"
										},
										"sink": {
											"name": "volume",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "last_update_stamp"
										},
										"sink": {
											"name": "last_update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "update_stamp"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Orc",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_dim_dla_metadata",
									"pFileName": "hcrm_dim_dla_metadata_f.orc"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_dim_dla_metadata_f "
								}
							}
						]
					},
					{
						"name": "Copydatafact_coach_surParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_coach_sur_m",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ref_day",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_day",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coaching_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "coaching_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coaching_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "coaching_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ampm",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ampm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_level",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_level",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "underling_territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "underling_territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "underling_territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "underling_territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "underling_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "underling_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "underling_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "underling_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "coaching_summary",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "coaching_summary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "coaching_status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "coaching_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_valid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_valid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "invalid_reason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "invalid_reason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_socre",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_socre",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "survey_answer_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_answer_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "coaching_objective",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "coaching_objective",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "create_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "modify_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_coach_sur",
									"pFileName": "hcrm_fact_coach_sur.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_coach_sur_m"
								}
							}
						]
					},
					{
						"name": "Copydatafact_daily_hdParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_daily_hd_m",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ref_4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "activity_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ampm",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ampm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "halfday_type_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "halfday_type_group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "halfday_type_group_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "halfday_type_group_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "halfday_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "halfday_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_no_stf",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_no_stf",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "remark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "remark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "create_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "modify_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "tot_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "tot_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_daily_hd",
									"pFileName": "hcrm_fact_daily_hd.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_daily_hd_m"
								}
							}
						]
					},
					{
						"name": "Copydatafact_lbr_share_presentParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_lbr_share_present_m",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "share_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "share_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "dept_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_priority",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_priority",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "library_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "library_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "library_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "library_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "present_key",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "present_key",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "open_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "open_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "close_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "close_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "duration_seconds",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "duration_seconds",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "action_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "action_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_lbr_share_present",
									"pFileName": "hcrm_fact_lbr_share_present.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_lbr_share_present_m"
								}
							}
						]
					},
					{
						"name": "Copydatafact_sampleParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_sample_f",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "sample_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sample_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "receiving_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "receiving_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "address_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sku_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sku_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sku_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sku_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sku_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sku_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "apply_num",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "apply_num",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "consignee_mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "consignee_mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "photo_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "photo_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_sign",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_sign",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "apply_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "apply_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sample_status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sample_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "create_stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "modify_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "modify_stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "order_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "order_status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "order_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sample_order_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sample_order_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "logistics_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "logistics_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sign_for_date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sign_for_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "imports_photo_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "imports_photo_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "imports_is_sign",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "imports_is_sign",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "approval_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "approval_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "receipt_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "receipt_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sample_code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sample_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_sample",
									"pFileName": "hcrm_fact_sample.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_sample_f"
								}
							}
						]
					},
					{
						"name": "Copydatafact_suv_answerParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_fact_suv_answer_f",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "key_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "key_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "activity_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "staff_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "action_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "action_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "survey_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "answer_score",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "answer_score",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "question_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "question_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "question_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "question_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "answer_value",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "answer_value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "create_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "create_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "modify_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "modify_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_fact_suv_answer",
									"pFileName": "hcrm_fact_suv_answer.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_fact_suv_answer_f"
								}
							}
						]
					},
					{
						"name": "Exec_sp_Check_HCRM_stg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copydatafact_callParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatadim_dla_metadataORCToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatafact_coach_surParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatafact_daily_hdParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatafact_lbr_share_presentParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatafact_sampleParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatafact_suv_answerParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatadim_rlt_ty_instParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_HCRM_stg_summary]",
							"storedProcedureParameters": {
								"ModuleName": {
									"value": "HCRM",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copydatadim_rlt_ty_instParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_hcrm_dim_rlt_ty_inst_prod_cli_m",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dt",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "mth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "territory_id_vt",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "institution_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_target_client",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_target_client",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "client_grade",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "client_grade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_new",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_new",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "is_change",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "is_change",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "union_key",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "union_key",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "update_stamp",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/hcrm_dim_rlt_ty_inst",
									"pFileName": "hcrm_dim_rlt_ty_inst.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_hcrm_dim_rlt_ty_inst_prod_cli_m"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_HCRM_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataHCRMFmt2Stg"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:03:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Orc')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_Input_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatHCRMInputFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatHCRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/Unzip1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterHCRMfact_suv_answer",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_suv_answer')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHCRMfact_suv_answerExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_suv_answer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_suv_answer').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDatafact_suv_answerOrcToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "key_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "key_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "action_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "action_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "product_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "product_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "answer_score",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "answer_score",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "question_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "question_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "question_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "question_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "answer_value",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "answer_value",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1",
												"pFileName": "@activity('FilterHCRMfact_suv_answer').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_suv_answer",
												"pFileName": "hcrm_fact_suv_answer.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterHCRMdim_rlt_ty_inst",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'dim_rlt_ty_inst')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHCRMdim_rlt_ty_instFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMdim_rlt_ty_inst",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMdim_rlt_ty_inst').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRMdim_rlt_ty_instOrcToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "product_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_target_client",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_target_client",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_grade",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_grade",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_new",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_new",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_change",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_change",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "union_key",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "union_key",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "DateTimeOffset",
														"physicalType": "TIMESTAMP"
													},
													"sink": {
														"name": "update_stamp",
														"type": "DateTimeOffset",
														"physicalType": "INT_96"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": "@activity('FilterHCRMdim_rlt_ty_inst').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_dim_rlt_ty_inst",
												"pFileName": "hcrm_dim_rlt_ty_inst.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterHCRMfact_sample",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_sample')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHCRMfact_sampleExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_sample",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_sample').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_fact_sampleOrcToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "sample_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sample_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "receiving_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "receiving_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "address_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "address_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sku_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sku_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sku_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sku_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sku_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sku_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "apply_num",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "apply_num",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "consignee_mobile",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "consignee_mobile",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "photo_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "photo_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_sign",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_sign",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "apply_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "apply_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sample_status",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sample_status",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "order_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "order_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "order_status",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "order_status",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sample_order_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sample_order_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "logistics_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "logistics_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sign_for_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sign_for_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "imports_photo_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "imports_photo_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "imports_is_sign",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "imports_is_sign",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "approval_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "approval_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "receipt_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "receipt_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sample_code",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "sample_code",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": "@activity('FilterHCRMfact_sample').output.Value[0].name "
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_sample",
												"pFileName": "hcrm_fact_sample.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterHCRMfact_lbr_share_present",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_lbr_share_present')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHCRMfact_daily_hd",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_daily_hd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UnzipFormatHCRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterHCRMzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/HCRM/",
									"pFileName": {
										"value": "@activity('FilterHCRMzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/Unzip1/"
								}
							}
						]
					},
					{
						"name": "FilterHCRMzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputHCRMFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputHCRMFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'HCRMtoDatalake')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputHCRMFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatHCRMUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/HCRM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatHCRMUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/HCRM/Unzip1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "china-commercial/Backup/Log/HCRM/PL_DATA_HCRM_Input_To_Format/DeleteFormatHCRMUnzipFolder",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterHCRMfact_coach_sur",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_coach_sur')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHCRMfact_lbr_share_presentExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_lbr_share_present",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_lbr_share_present').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_fact_lbr_share_presentOrcToParquet_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "share_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "share_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dept_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "dept_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dept_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "dept_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_priority",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_priority",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "library_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "library_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "library_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "library_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "present_key",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "present_key",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "open_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "open_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "close_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "close_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "duration_seconds",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "duration_seconds",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "action_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "action_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": "@activity('FilterHCRMfact_lbr_share_present').output.Value[0].name "
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_lbr_share_present",
												"pFileName": "hcrm_fact_lbr_share_present.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterHCRMfact_call",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'fact_call')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHCRMdim_dla_metadata",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatHCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatHCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'dim_dla_metadata')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHCRMfact_fact_daily_hdExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_daily_hd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_daily_hd').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_fact_daily_hdOrcToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "activity_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ampm",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ampm",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "halfday_type_group",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "halfday_type_group",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "halfday_type_group_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "halfday_type_group_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "halfday_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "halfday_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_no_stf",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_no_stf",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "remark",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "remark",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "tot_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "tot_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": "@activity('FilterHCRMfact_daily_hd').output.Value[0].name "
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_daily_hd",
												"pFileName": "hcrm_fact_daily_hd.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfHCRMfact_coach_surExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_coach_sur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_coach_sur').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_fact_coach_surOrcToParquet_copy1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ref_day",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_day",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "coaching_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "coaching_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "coaching_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "coaching_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ampm",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ampm",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_level",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_level",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "underling_territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "underling_territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "underling_territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "underling_territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "underling_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "underling_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "underling_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "underling_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "coaching_summary",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "coaching_summary",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "coaching_status",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "coaching_status",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_valid",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_valid",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "invalid_reason",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "invalid_reason",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_socre",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_socre",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_answer_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "survey_answer_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "coaching_objective",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "coaching_objective",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "create_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "modify_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": "@activity('FilterHCRMfact_coach_sur').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_coach_sur",
												"pFileName": "hcrm_fact_coach_sur.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfHCRMdim_dla_metadata_Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMdim_dla_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMdim_dla_metadata').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_dim_dla_metadataOrcToORC",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "OrcSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "OrcWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "subject",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "subject",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "file_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "file_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "volume",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "volume",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "last_update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "last_update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1",
												"pFileName": "@activity('FilterHCRMdim_dla_metadata').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_dim_dla_metadata",
												"pFileName": "hcrm_dim_dla_metadata_f.orc"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfHCRMfact_callExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHCRMfact_call",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHCRMfact_call').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHCRM_fact_callOrcToParquet_copy1_copy3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OrcSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "dt",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT"
													},
													"sink": {
														"name": "mth",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "activity_date",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ampm",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ampm",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "visit_time_stage_content",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "visit_time_stage_content",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "staff_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "territory_id_vt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dept_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "dept_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "client_grade",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "client_grade",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_target",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "is_target",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "feedback",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "feedback",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "product_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "product_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "library_name",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "library_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "library_id",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "library_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "prod_feedback",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "prod_feedback",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "prod_call_key_message",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "prod_call_key_message",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "prod_call_target",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "prod_call_target",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "next_call_target",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "next_call_target",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "action_type",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "action_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "activity_status",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "activity_status",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "invalid_reason",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "invalid_reason",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_4",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ref_6",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_6",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ref_cli_inst",
														"type": "String",
														"physicalType": "STRING"
													},
													"sink": {
														"name": "ref_cli_inst",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "create_stamp",
														"type": "DateTimeOffset",
														"physicalType": "TIMESTAMP"
													},
													"sink": {
														"name": "create_stamp",
														"type": "DateTimeOffset",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "modify_stamp",
														"type": "DateTimeOffset",
														"physicalType": "TIMESTAMP"
													},
													"sink": {
														"name": "modify_stamp",
														"type": "DateTimeOffset",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "DateTimeOffset",
														"physicalType": "TIMESTAMP"
													},
													"sink": {
														"name": "update_stamp",
														"type": "DateTimeOffset",
														"physicalType": "INT_96"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Orc",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterHCRMfact_call').output.Value[0].name ",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/HCRM/hcrm_fact_call",
												"pFileName": "hcrm_fact_call.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/HCRM"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/HCRM"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:02:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Orc')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_Input_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_HCRM_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_Input_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_HCRM_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_HCRM_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_RCRM_Format_To_Stg",
								"pActivity": "CopyDataRCRMFmt2Stg"
							}
						}
					},
					{
						"name": "QueryHCRMSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_HCRM_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfFITSSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryHCRMSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryHCRMSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "RCRM Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RCRM File row count not matched with summary",
										"errorCode": "ERROR0002"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_HCRM_Stg_To_Itg",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_HCRM_Stg_To_Itg",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "HCRM"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-29T05:44:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Input_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_HCRM_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DATA_HCRM_SFTP_to_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_Input_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_HCRM_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_HCRM_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_RCRM_Format_To_Stg",
								"pActivity": "CopyDataRCRMFmt2Stg"
							}
						}
					},
					{
						"name": "QueryHCRMSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_HCRM_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfFITSSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryHCRMSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryHCRMSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "RCRM Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RCRM File row count not matched with summary",
										"errorCode": "ERROR0002"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_HCRM_Stg_To_Itg",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_HCRM_Stg_To_Itg",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "PL_DATA_HCRM_SFTP_to_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_SFTP_to_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "HCRM"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:04:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Input_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_SFTP_to_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_SFTP_to_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterHCRMzip').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_HCRM_File",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "DeleteInputHCRMfile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FilterHCRMzip",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_HCRM_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_HCRM_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'HCRMtoDatalake')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IfvisitExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterHCRMzip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterHCRMzip').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minute_copy2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 30
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataHCRMzipSFTPToInput",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"maxConcurrentConnections": 5,
															"recursive": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterHCRMzip').output.Value[0].name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/HCRM"
														}
													}
												]
											},
											{
												"name": "DeleteSftpHCRM",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataHCRMzipSFTPToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterHCRMzip').output.Value[0].name",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/HCRM/PL_DATA_HCRM_SFTP_To_Input/DeleteSftpHCRMZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false,
														"disableChunking": false
													}
												}
											}
										]
									}
								},
								{
									"name": "CopyDataBackupInputHCRMfile",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/HCRM/"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat(\n'Backup/Input/HCRM/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteInputHCRMfile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataBackupInputHCRMfile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/HCRM/"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/HCRM/PL_DATA_HCRM_SFTP_To_Input/DeleteInputHCRMZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "HCRM2DataLake/"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:02:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_HCRM_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_hcrm_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_hcrm_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_RCRM_Stg_To_itg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "SpRCRMstg2itg"
					}
				},
				"folder": {
					"name": "HCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:04:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Check_Geography')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryIMSGeographyMappingCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  stg.check_ims_geography_mapping",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfIMSGeographyMappingNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryIMSGeographyMappingCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryIMSGeographyMappingCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataGeographyMappingStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "\nSELECT \nims_city_code\n,ims_city_name\n,ims_city_en\n,province_code\n,province_name\n,city_code\n,city_name\n,SG\nFROM(\nSELECT \ndistinct \nims_city_code\n,ims_city_name\n,ims_city_en\n,province_code\n,province_name\n,city_code\n,city_name\n,SG\nFROM stg.check_ims_geography_mapping\nUNION ALL\nSELECT \ndistinct \nIMSCityCode   ims_city_code\n,IMSCityName  ims_city_name\n,IMSCityEN\t  ims_city_en\n,ProvinceCode province_code\n,ProvinceName province_name\n,CityCode\t  city_code\n,CityName\t  city_name\n,SG\t\t\t  SG\nFROM stg.stg_ims_geography_mapping\n) GM\n\norder by province_code,ims_city_name",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/IMS/IMS_Viatris_geography_mapping/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('IMS_Viatris_geography_mapping_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:10:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Check_Map_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryIMSMapMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT COUNT(1)  as cnt FROM  itg.itg_ims_map_market \nWHERE  IMSStandardBrandName IS NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfIMSMapMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryIMSMapMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryIMSMapMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataMapMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "SELECT \nDISTINCT \nIMSMarketName                  Market\n,IMSMoleculeCompositionName\t   moleculecomposition\n,IMSProductName\t\t\t\t   product\n,IMSCorporationName\t\t\t   corpration\n,IMSManufacturerName\t\t   manufacturer\n,IMSTherapeuticClass4Name\t   TereputiceClassIV\n,IMSStrengthName\t\t\t   strength\n,IMSNewformcodeiName\t\t   newformcodei\n,IMSNewformcodeiiName\t\t   newformcodeii\n,IMSStandardCorporationName\t   standard_corp_name\n,IMSStandardManufacturerName   standard_manufacturer_name\n,IMSStandardBrandName\t\t   standard_brand_name\n,IMSStandardizedRateByDot\t   standardized_rate_by_DOT\n,IMSCoreMarket\t\t\t\t   core_market\nFROM(\nSELECT \nIMSMarketName                  \n,IMSMoleculeCompositionName\t   \n,IMSProductName\t\t\t\t   \n,IMSCorporationName\t\t\t   \n,IMSManufacturerName\t\t   \n,IMSTherapeuticClass4Name\t   \n,IMSStrengthName\t\t\t   \n,IMSNewformcodeiName\t\t   \n,IMSNewformcodeiiName\t\t   \n,IMSStandardCorporationName\t   \n,IMSStandardManufacturerName   \n,IMSStandardBrandName\t\t   \n,IMSStandardizedRateByDot\t   \n,IMSCoreMarket\t\t\t\t   \nfrom itg.itg_ims_map_market\nunion all\nSELECT \nIMSMarketName                  \n,IMSMoleculeCompositionName\t   \n,IMSProductName\t\t\t\t   \n,IMSCorporationName\t\t\t   \n,IMSManufacturerName\t\t   \n,IMSTherapeuticClass4Name\t   \n,IMSStrengthName\t\t\t   \n,IMSNewformcodeiName\t\t   \n,IMSNewformcodeiiName\t\t   \n,IMSStandardCorporationName\t   \n,IMSStandardManufacturerName   \n,IMSStandardBrandName\t\t   \n,IMSStandardizedRateByDot\t   \n,IMSCoreMarket\t\t\t\t   \nfrom stg.stg_ims_map_market\n) AA\nORDER BY  IMSStandardBrandName DESC\n,IMSMarketName                \n,IMSMoleculeCompositionName\t \n,IMSProductName\t\t\t\t \n,IMSCorporationName\t\t\t \n,IMSManufacturerName\t\t \n,IMSTherapeuticClass4Name\t \n,IMSStrengthName\t\t\t \n,IMSNewformcodeiName\t\t \n,IMSNewformcodeiiName\t\t ",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "moleculecomposition",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "moleculecomposition",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "product",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "product",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "corpration",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "corpration",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "manufacturer",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "manufacturer",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "TereputiceClassIV",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TereputiceClassIV",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "strength",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "strength",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "newformcodei",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "newformcodei",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "newformcodeii",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "newformcodeii",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "standard_corp_name",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "standard_corp_name",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "standard_manufacturer_name",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "standard_manufacturer_name",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "standard_brand_name",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "standard_brand_name",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 30
													},
													"sink": {
														"name": "standardized_rate_by_DOT",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/IMS/IMS_MAP_MARKET/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('IMS_MAP_MARKET_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:10:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Check_Market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "QueryIMSMarketCheckResult",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select \nCOUNT(1) as cnt \nfrom stg.check_ims_map_market;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IfIMSMarketNotNeedFill",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryIMSMarketCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('QueryIMSMarketCheckResult').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyDataIMSMarketStgToFeedback",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select \ndistinct \nMarket\t            Market\n,moleculecomposition\tmoleculecomposition\n,TereputiceClassIV\tTereputiceClassIV\n,newformcodei\t    newformcodei\n,newformcodeii\t    newformcodeii\n,strength\t        strength\n,[Index]             standardized_rate_by_DOT\n,core_market         core_market\nfrom stg.check_ims_map_market;",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_GB2312",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "@concat('Log/Feedback/IMS/IMS_Viatris_BAI_Market/',formatDateTime(addhours(utcnow(),8),'yyyyMMdd'),'/')",
												"pFileName": "@concat('IMS_Viatris_BAI_Market_',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss'),'.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:11:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_GB2312')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataIMSFmt2StgIMSGeoMap",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_geography_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityEN",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityEN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SG",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_geography_mapping",
									"pFileName": "ims_geography_mapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_geography_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSMarketProd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_market_by_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationName ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrength",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardizedRateByDot",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_market/ims_market_by_product",
									"pFileName": "ims_market_by_product.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_market_by_product"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSMarketMole",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_market_by_molecule",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrength",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStrength",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardizedRateByDot",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_market/ims_market_by_molecule",
									"pFileName": "ims_market_by_molecule.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_market_by_molecule"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSMapMarket",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_map_market",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMarketName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStrengthName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewformcodeiName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewformcodeiName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewformcodeiiName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewformcodeiiName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardCorporationName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardManufacturerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardBrandName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardBrandName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStandardizedRateByDot",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardizedRateByDot",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCoreMarket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_map_market",
									"pFileName": "ims_map_market.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_map_market"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSCity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_max_city_include_ims",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_max_city_include_ims",
									"pFileName": "ims_max_city_include_ims.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_max_city_include_ims"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMAXCity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_max_city_exclude_max",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAXCityID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MAXCityID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAXCityName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MAXCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_max_city_exclude_max",
									"pFileName": "ims_max_city_exclude_max.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_max_city_exclude_max"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSVBP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_vbpwinner_by_city_by_month",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProvinceName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculecompositionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculecompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSDosage",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSDosage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSRound",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSRound",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSVBPWinnerMark",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSVBPWinnerMark",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStartDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStartDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSEndDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSEndDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_vbpwinner_by_city_by_month",
									"pFileName": "ims_vbpwinner_by_city_by_month.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_vbpwinner_by_city_by_month"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgIMSFact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_fact",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_fact",
									"pFileName": "ims_fact.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_fact"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgAtcRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_therapeutic_class_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass1Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass1Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass1Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass1Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass2Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass2Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass2Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass2Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass3Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass3Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass3Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass3Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_therapeutic_class_reference",
									"pFileName": "ims_therapeutic_class_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_therapeutic_class_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgChannelRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_channel_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSChannelName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSChannelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_channel_reference",
									"pFileName": "ims_channel_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_channel_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgCorpLkp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_corporation_lookup",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSOwnership",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSOwnership",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSINTManufacturer",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSINTManufacturer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_corporation_lookup",
									"pFileName": "ims_corporation_lookup.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_corporation_lookup"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgCorpRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_corporation_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_corporation_reference",
									"pFileName": "ims_corporation_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_corporation_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMarketLkp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_market_lookup",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGeneOrigin",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSGeneOrigin",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSRxFlag",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSRxFlag",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSEDL",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSEDL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSBIO",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSBIO",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPAED",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPAED",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTCMEX",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTCMEX",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNRDL",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNRDL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGQCE",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSGQCE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_market_lookup",
									"pFileName": "ims_market_lookup.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_market_lookup"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMnftypeRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_manufacturer_type_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerTypeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerTypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_manufacturer_type_reference",
									"pFileName": "ims_manufacturer_type_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_manufacturer_type_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMnfRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_manufacturer_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_manufacturer_reference",
									"pFileName": "ims_manufacturer_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_manufacturer_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMolCompLkp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_molecule_composition_lookup",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeCompositionID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_molecule_composition_lookup",
									"pFileName": "ims_molecule_composition_lookup.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_molecule_composition_lookup"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMolCompRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_molecule_composition_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeCompositionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_molecule_composition_reference",
									"pFileName": "ims_molecule_composition_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_molecule_composition_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMolLkp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_molecule_lookup",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_molecule_lookup",
									"pFileName": "ims_molecule_lookup.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_molecule_lookup"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgMolRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_molecule_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMoleculeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMoleculeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_molecule_reference",
									"pFileName": "ims_molecule_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_molecule_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgNfc1Ref",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_newformcode1_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode1Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_newformcode1_reference",
									"pFileName": "ims_newformcode1_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_newformcode1_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgNfc2Ref",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_newformcode2_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode2Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_newformcode2_reference",
									"pFileName": "ims_newformcode2_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_newformcode2_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgNfc12Ref",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_newformcode12_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode12Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode12Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_newformcode12_reference",
									"pFileName": "ims_newformcode12_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_newformcode12_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgNfc123Ref",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_newformcode123_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode123Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode123Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_newformcode123_reference",
									"pFileName": "ims_newformcode123_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_newformcode123_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgNfc23Ref",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_newformcode23_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode23Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode23Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_newformcode23_reference",
									"pFileName": "ims_newformcode23_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_newformcode23_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgPeriodRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_period_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPeriodName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPeriodName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_period_reference",
									"pFileName": "ims_period_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_period_reference"
								}
							}
						]
					},
					{
						"name": "CopyDataIMSFmt2StgProdRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_ims_product_reference",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCorporationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSManufacturerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSTherapeuticClass4Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode1Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode12Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode123Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode2Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSNewFormCode23Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerProductDesc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSIntegerProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductDesc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSStrengthDesc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStrengthDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerStrengthDesc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSIntegerStrengthDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackageNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSIntegerPackageNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageVolume",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackageVolume",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSIntegerPackageVolume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSIntegerPackage",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSIntegerPackage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPackageLaunchDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPackageLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSMarketTypeDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSMarketTypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPRESDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPRESDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSGENProductDesc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSGENProductDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProtectionDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProtectionDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSCompanyDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCompanyDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSProductLaunchDate",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSProductLaunchDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/ims_product_reference",
									"pFileName": "ims_product_reference.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_ims_product_reference"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_IMS_Format_To_Stg"
					},
					"ActivityName": {
						"type": "string",
						"defaultValue": "CopyDataIMSFmt2Stg"
					}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:09:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Input_To_Format1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatIMSUnzipFolder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatIMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterIMSGeoMapFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSGeoMap)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterIMSMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSMarket)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterIMSMapMarketFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSMapMarket)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterIMSMaxCityFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSMaxCity)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterIMSVBPFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSVBP)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterIMSFactFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pIMSFact)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterAtcRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pAtcRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfIMSGeoMapFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSGeoMapFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSGeoMapFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSGeoMapExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ims_city_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ims_city_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ims_city_en",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityEN",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "province_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "CityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SG",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SG",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSGeoMapFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_geography_mapping",
												"pFileName": "ims_geography_mapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfIMSMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSMarketProdExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "moleculecomposition",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeCompositionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "corpration",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "manufacturer",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TereputiceClassIV",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "strength",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodei",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodeii",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "IMS-product"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_market/ims_market_by_product",
												"pFileName": "ims_market_by_product.parquet"
											}
										}
									]
								},
								{
									"name": "CopyDataIMSMarketMoleExcelToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataIMSMarketProdExcelToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "moleculecomposition",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeCompositionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TereputiceClassIV",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodei",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode1",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodeii",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode2",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "strength",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStrength",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "IMS-mole"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_market/ims_market_by_molecule",
												"pFileName": "ims_market_by_molecule.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfIMSMapMarketFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSMapMarketFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSMapMarketFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSMapMarketExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMarketName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "moleculecomposition",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeCompositionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "corpration",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "manufacturer",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TereputiceClassIV",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "strength",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStrengthName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodei",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewformcodeiName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "newformcodeii",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewformcodeiiName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standard_corp_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardCorporationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standard_manufacturer_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standard_brand_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardBrandName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "standardized_rate_by_DOT",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardizedRateByDot",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "core_market",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCoreMarket",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSMapMarketFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_map_market",
												"pFileName": "ims_map_market.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfIMSMaxCityFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSMaxCityFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSMaxCityFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSCityExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "geography_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "geography_cn",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSMaxCityFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "IMS保留城市"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_max_city_include_ims",
												"pFileName": "ims_max_city_include_ims.parquet"
											}
										}
									]
								},
								{
									"name": "CopyDataMaxCityExcelToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataIMSCityExcelToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "geography_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MAXCityID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "geography_cn",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MAXCityName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSMaxCityFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "MAX排除城市"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_max_city_exclude_max",
												"pFileName": "ims_max_city_exclude_max.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfIMSVBPFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSVBPFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSVBPFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSVBPExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "province",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProvinceName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "city",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCityName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "moleculecomposition",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculecompositionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "corporation",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "manufacturer",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dosage",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSDosage",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Round",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSRound",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "vbp_winner_mark",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSVBPWinnerMark",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Start Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStartDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "End Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSEndDate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSVBPFile').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_vbpwinner_by_city_by_month",
												"pFileName": "ims_vbpwinner_by_city_by_month.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfIMSFactFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterIMSFactFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterIMSFactFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataIMSFactCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Geography_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSGeographyID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Channel_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSChannelID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Pack_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Period_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPeriodCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "UN",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCountingUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LC",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LCD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSValueUsd",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterIMSFactFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_fact",
												"pFileName": "ims_fact.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfAtcRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterAtcRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterAtcRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataAtcRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ATC4_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC1_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass1Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC1_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass1Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC2_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass2Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC2_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass2Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC3_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass3Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC3_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass3Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC4_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterAtcRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_therapeutic_class_reference",
												"pFileName": "ims_therapeutic_class_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatIMS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterIMSzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/",
									"pFileName": {
										"value": "@activity('FilterIMSzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip1/"
								}
							}
						]
					},
					{
						"name": "FilterIMSzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputIMSFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputIMSFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'IMS.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputIMSFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatIMSUnzip1Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatIMSUnzip1Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/IMS/PL_DATA_FIMS_Input_To_Format/DeleteFormatIMSFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterChannelRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pChannelRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfChannelRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterChannelRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterChannelRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataChannelRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Channel_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSChannelID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Channel_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSChannelName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterChannelRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_channel_reference",
												"pFileName": "ims_channel_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterCorpLkpFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pCorpLkp)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfCorpLkpFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCorpLkpFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCorpLkpFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCorpLkpCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "MNF_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Corp_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Ownership",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSOwnership",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INTMNF",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSINTManufacturer",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip1/",
												"pFileName": {
													"value": "@activity('FilterCorpLkpFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_corporation_lookup",
												"pFileName": "ims_corporation_lookup.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/IMS"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/IMS"
					},
					"pIMSMarket": {
						"type": "string",
						"defaultValue": "IMS_Viatris_BAI_Market"
					},
					"pIMSMapMarket": {
						"type": "string",
						"defaultValue": "IMS_MAP_MARKET"
					},
					"pIMSGeoMap": {
						"type": "string",
						"defaultValue": "IMS_Viatris_geography_mapping"
					},
					"pIMSMaxCity": {
						"type": "string",
						"defaultValue": "IMS_MAX_CITY"
					},
					"pIMSVBP": {
						"type": "string",
						"defaultValue": "IMS_VBP_Winner_by_City_by_Month"
					},
					"pIMSFact": {
						"type": "string",
						"defaultValue": "cn_IMS_Sales_Fdata"
					},
					"pMAXFact": {
						"type": "string",
						"defaultValue": "MAX_Fact"
					},
					"pAtcRef": {
						"type": "string",
						"defaultValue": "cn_atc_ref"
					},
					"pChannelRef": {
						"type": "string",
						"defaultValue": "cn_channel_ref"
					},
					"pCorpLkp": {
						"type": "string",
						"defaultValue": "cn_corp_lkp"
					},
					"pCorpRef": {
						"type": "string",
						"defaultValue": "cn_corp_ref"
					},
					"pMarketLkp": {
						"type": "string",
						"defaultValue": "cn_market_lkp"
					},
					"pMnftypeRef": {
						"type": "string",
						"defaultValue": "cn_mnftype_ref"
					},
					"pMnfRef": {
						"type": "string",
						"defaultValue": "cn_mnf_ref"
					},
					"pMolCompLkp": {
						"type": "string",
						"defaultValue": "cn_mol_comp_lkp"
					},
					"pMolCompRef": {
						"type": "string",
						"defaultValue": "cn_mol_comp_ref"
					},
					"pMolLkp": {
						"type": "string",
						"defaultValue": "cn_mol_lkp"
					},
					"pMolRef": {
						"type": "string",
						"defaultValue": "cn_mol_ref"
					},
					"pNfc1Ref": {
						"type": "string",
						"defaultValue": "cn_nfc1_ref"
					},
					"pNfc2Ref": {
						"type": "string",
						"defaultValue": "cn_nfc2_ref"
					},
					"pNfc12Ref": {
						"type": "string",
						"defaultValue": "cn_nfc12_ref"
					},
					"pNfc23Ref": {
						"type": "string",
						"defaultValue": "cn_nfc23_ref"
					},
					"pNfc123Ref": {
						"type": "string",
						"defaultValue": "cn_nfc123_ref"
					},
					"pPeriodRef": {
						"type": "string",
						"defaultValue": "cn_period_ref"
					},
					"pProdRef": {
						"type": "string",
						"defaultValue": "cn_prod_ref"
					}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:07:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Input_To_Format2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatIMSUnzipFolder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatIMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip2/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterCorpRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pCorpRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMarketLkpFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMarketLkp)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMnftypeRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMnftypeRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMnfRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMnfRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMolCompLkpFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMolCompLkp)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMolCompRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMolCompRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterMolLkpFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMolLkp)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfCorpRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterCorpRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterCorpRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCorpRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Corp_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Corp_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterCorpRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_corporation_reference",
												"pFileName": "ims_corporation_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMarketLkpFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMarketLkpFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMarketLkpFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMarketLkpCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Pack_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Gene_Orig",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSGeneOrigin",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Rx_Flag",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSRxFlag",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EDL",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSEDL",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "BIO",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSBIO",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAED",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPAED",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TCMEX",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTCMEX",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NRDL",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNRDL",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "GQCE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSGQCE",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMarketLkpFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_market_lookup",
												"pFileName": "ims_market_lookup.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMnftypeRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMnftypeRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMnftypeRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMnftypeRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "MNF_TYPE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerType",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MnfType_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerTypeName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMnftypeRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_manufacturer_type_reference",
												"pFileName": "ims_manufacturer_type_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMnfRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMnfRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMnfRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMnfRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "MNF_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Mnf_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MNF_TYPE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerType",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMnfRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_manufacturer_reference",
												"pFileName": "ims_manufacturer_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMolCompLkpFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMolCompLkpFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMolCompLkpFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMolCompLkpCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Pack_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MoleComp_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeCompositionID",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMolCompLkpFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_molecule_composition_lookup",
												"pFileName": "ims_molecule_composition_lookup.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMolCompRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMolCompRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMolCompRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMolCompRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Molecule_Id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MoleComp_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeCompositionName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMolCompRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_molecule_composition_reference",
												"pFileName": "ims_molecule_composition_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfMolLkpFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMolLkpFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMolLkpFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMolLkpCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Pack_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Molecule_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeID",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMolLkpFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_molecule_lookup",
												"pFileName": "ims_molecule_lookup.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatIMS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterIMSzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/",
									"pFileName": {
										"value": "@activity('FilterIMSzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip2/"
								}
							}
						]
					},
					{
						"name": "FilterIMSzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputIMSFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputIMSFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'IMS.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputIMSFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatIMSUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatIMSUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip2/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/IMS/PL_DATA_FIMS_Input_To_Format/DeleteFormatIMSFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterMolRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMolRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfMolRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMolRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMolRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMolRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Molecule_Id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Molecule_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMoleculeName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterMolRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_molecule_reference",
												"pFileName": "ims_molecule_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterNfc1RefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pNfc1Ref)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfNfc1RefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNfc1RefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNfc1RefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNfc1RefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "NFC1_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode1Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode1Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip2/",
												"pFileName": {
													"value": "@activity('FilterNfc1RefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_newformcode1_reference",
												"pFileName": "ims_newformcode1_reference.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/IMS"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/IMS"
					},
					"pIMSMarket": {
						"type": "string",
						"defaultValue": "IMS_Viatris_BAI_Market"
					},
					"pIMSMapMarket": {
						"type": "string",
						"defaultValue": "IMS_MAP_MARKET"
					},
					"pIMSGeoMap": {
						"type": "string",
						"defaultValue": "IMS_Viatris_geography_mapping"
					},
					"pIMSMaxCity": {
						"type": "string",
						"defaultValue": "IMS_MAX_CITY"
					},
					"pIMSVBP": {
						"type": "string",
						"defaultValue": "IMS_VBP_Winner_by_City_by_Month"
					},
					"pIMSFact": {
						"type": "string",
						"defaultValue": "cn_IMS_Sales_Fdata"
					},
					"pMAXFact": {
						"type": "string",
						"defaultValue": "MAX_Fact"
					},
					"pAtcRef": {
						"type": "string",
						"defaultValue": "cn_atc_ref"
					},
					"pChannelRef": {
						"type": "string",
						"defaultValue": "cn_channel_ref"
					},
					"pCorpLkp": {
						"type": "string",
						"defaultValue": "cn_corp_lkp"
					},
					"pCorpRef": {
						"type": "string",
						"defaultValue": "cn_corp_ref"
					},
					"pMarketLkp": {
						"type": "string",
						"defaultValue": "cn_market_lkp"
					},
					"pMnftypeRef": {
						"type": "string",
						"defaultValue": "cn_mnftype_ref"
					},
					"pMnfRef": {
						"type": "string",
						"defaultValue": "cn_mnf_ref"
					},
					"pMolCompLkp": {
						"type": "string",
						"defaultValue": "cn_mol_comp_lkp"
					},
					"pMolCompRef": {
						"type": "string",
						"defaultValue": "cn_mol_comp_ref"
					},
					"pMolLkp": {
						"type": "string",
						"defaultValue": "cn_mol_lkp"
					},
					"pMolRef": {
						"type": "string",
						"defaultValue": "cn_mol_ref"
					},
					"pNfc1Ref": {
						"type": "string",
						"defaultValue": "cn_nfc1_ref"
					},
					"pNfc2Ref": {
						"type": "string",
						"defaultValue": "cn_nfc2_ref"
					},
					"pNfc12Ref": {
						"type": "string",
						"defaultValue": "cn_nfc12_ref"
					},
					"pNfc23Ref": {
						"type": "string",
						"defaultValue": "cn_nfc23_ref"
					},
					"pNfc123Ref": {
						"type": "string",
						"defaultValue": "cn_nfc123_ref"
					},
					"pPeriodRef": {
						"type": "string",
						"defaultValue": "cn_period_ref"
					},
					"pProdRef": {
						"type": "string",
						"defaultValue": "cn_prod_ref"
					}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:08:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Input_To_Format3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatIMSUnzipFolder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatIMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip3/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterNfc2RefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pNfc2Ref)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNfc12RefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pNfc12Ref)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNfc123RefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pNfc123Ref)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNfc23RefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pNfc23Ref)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPeriodRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pPeriodRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterProdRefFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatIMSUnzipFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatIMSUnzipFolder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pProdRef)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfNfc2RefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNfc2RefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNfc2RefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNfc2RefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "NFC2_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode2Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode2Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterNfc2RefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_newformcode2_reference",
												"pFileName": "ims_newformcode2_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfNfc12RefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNfc12RefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNfc12RefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNfc12RefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "NFC12_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode12Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC12",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode12Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterNfc12RefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_newformcode12_reference",
												"pFileName": "ims_newformcode12_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfNfc123RefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNfc123RefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNfc123RefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNfc123RefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "NFC123_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode123Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC123",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode123Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterNfc123RefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_newformcode123_reference",
												"pFileName": "ims_newformcode123_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfNfc23RefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNfc23RefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNfc23RefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNfc23RefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "NFC23_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode23Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC23",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode23Name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterNfc23RefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_newformcode23_reference",
												"pFileName": "ims_newformcode23_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfPeriodRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPeriodRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPeriodRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPeriodRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Period_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPeriodCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Period_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPeriodName",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterPeriodRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_period_reference",
												"pFileName": "ims_period_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfProdRefFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterProdRefFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterProdRefFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataProdRefCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Pack_Id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Corp_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCorporationID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MNF_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSManufacturerID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ATC4_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSTherapeuticClass4Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC1_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode1Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC12_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode12Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC123_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode123Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC2_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode2Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "NFC23_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSNewFormCode23Code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IntPrd_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSIntegerProductDesc",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Prd_desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProductDesc",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Str_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStrengthDesc",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IntStr_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSIntegerStrengthDesc",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Pck_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PckSize_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IntSize_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSIntegerPackageNumber",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PckVol_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageVolume",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IntVol_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSIntegerPackageVolume",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "IntPck_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSIntegerPackage",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PckLaunchDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPackageLaunchDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MKT-TYPE_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSMarketTypeDescription",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PRES_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPRESDescription",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "GEN_PRD_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSGENProductDesc",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PROTECTION_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProtectionDescription",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COMP_Desc",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCompanyDescription",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PrdLaunchDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSProductLaunchDate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/Unzip3/",
												"pFileName": {
													"value": "@activity('FilterProdRefFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/IMS/ims_product_reference",
												"pFileName": "ims_product_reference.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatIMS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterIMSzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/",
									"pFileName": {
										"value": "@activity('FilterIMSzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip3/"
								}
							}
						]
					},
					{
						"name": "FilterIMSzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputIMSFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputIMSFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'IMS.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputIMSFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatIMSUnzip3Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/IMS/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatIMSUnzip3Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/IMS/Unzip3/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/IMS/PL_DATA_FIMS_Input_To_Format/DeleteFormatIMSFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/IMS"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/IMS"
					},
					"pIMSMarket": {
						"type": "string",
						"defaultValue": "IMS_Viatris_BAI_Market"
					},
					"pIMSMapMarket": {
						"type": "string",
						"defaultValue": "IMS_MAP_MARKET"
					},
					"pIMSGeoMap": {
						"type": "string",
						"defaultValue": "IMS_Viatris_geography_mapping"
					},
					"pIMSMaxCity": {
						"type": "string",
						"defaultValue": "IMS_MAX_CITY"
					},
					"pIMSVBP": {
						"type": "string",
						"defaultValue": "IMS_VBP_Winner_by_City_by_Month"
					},
					"pIMSFact": {
						"type": "string",
						"defaultValue": "cn_IMS_Sales_Fdata"
					},
					"pMAXFact": {
						"type": "string",
						"defaultValue": "MAX_Fact"
					},
					"pAtcRef": {
						"type": "string",
						"defaultValue": "cn_atc_ref"
					},
					"pChannelRef": {
						"type": "string",
						"defaultValue": "cn_channel_ref"
					},
					"pCorpLkp": {
						"type": "string",
						"defaultValue": "cn_corp_lkp"
					},
					"pCorpRef": {
						"type": "string",
						"defaultValue": "cn_corp_ref"
					},
					"pMarketLkp": {
						"type": "string",
						"defaultValue": "cn_market_lkp"
					},
					"pMnftypeRef": {
						"type": "string",
						"defaultValue": "cn_mnftype_ref"
					},
					"pMnfRef": {
						"type": "string",
						"defaultValue": "cn_mnf_ref"
					},
					"pMolCompLkp": {
						"type": "string",
						"defaultValue": "cn_mol_comp_lkp"
					},
					"pMolCompRef": {
						"type": "string",
						"defaultValue": "cn_mol_comp_ref"
					},
					"pMolLkp": {
						"type": "string",
						"defaultValue": "cn_mol_lkp"
					},
					"pMolRef": {
						"type": "string",
						"defaultValue": "cn_mol_ref"
					},
					"pNfc1Ref": {
						"type": "string",
						"defaultValue": "cn_nfc1_ref"
					},
					"pNfc2Ref": {
						"type": "string",
						"defaultValue": "cn_nfc2_ref"
					},
					"pNfc12Ref": {
						"type": "string",
						"defaultValue": "cn_nfc12_ref"
					},
					"pNfc23Ref": {
						"type": "string",
						"defaultValue": "cn_nfc23_ref"
					},
					"pNfc123Ref": {
						"type": "string",
						"defaultValue": "cn_nfc123_ref"
					},
					"pPeriodRef": {
						"type": "string",
						"defaultValue": "cn_period_ref"
					},
					"pProdRef": {
						"type": "string",
						"defaultValue": "cn_prod_ref"
					}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:08:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilIMSFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterIMS_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_IMS_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfIMSFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterIMS_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterIMS_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputIMS",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/IMS/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/IMS/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputIMSZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputIMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/IMS/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/IMS/PL_DATA_IMS_SFTP_To_Input/DeleteInputIMSZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataIMSSftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputIMSZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/IMS"
														}
													}
												]
											},
											{
												"name": "DeleteSftpIMSZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataIMSSftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/IMS/PL_DATA_IMS_SFTP_To_Input/DeleteSftpIMSZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterIMS_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_IMS_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_IMS_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'IMS_Summary')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/IMS/"
					}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:07:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_SFTP_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_IMS_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFolder": "DataLake/Interface/Inbound/IMS/"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_IMS_Input_To_Format1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_Input_To_Format1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/IMS",
								"pFormatFolderName": "Format/IMS",
								"pIMSMarket": "IMS_Viatris_BAI_Market",
								"pIMSMapMarket": "IMS_MAP_MARKET",
								"pIMSGeoMap": "IMS_Viatris_geography_mapping",
								"pIMSMaxCity": "IMS_MAX_CITY",
								"pIMSVBP": "IMS_VBP_Winner_by_City_by_Month",
								"pIMSFact": "cn_IMS_Sales_Fdata",
								"pMAXFact": "MAX_Fact",
								"pAtcRef": "cn_atc_ref",
								"pChannelRef": "cn_channel_ref",
								"pCorpLkp": "cn_corp_lkp",
								"pCorpRef": "cn_corp_ref",
								"pMarketLkp": "cn_market_lkp",
								"pMnftypeRef": "cn_mnftype_ref",
								"pMnfRef": "cn_mnf_ref",
								"pMolCompLkp": "cn_mol_comp_lkp",
								"pMolCompRef": "cn_mol_comp_ref",
								"pMolLkp": "cn_mol_lkp",
								"pMolRef": "cn_mol_ref",
								"pNfc1Ref": "cn_nfc1_ref",
								"pNfc2Ref": "cn_nfc2_ref",
								"pNfc12Ref": "cn_nfc12_ref",
								"pNfc23Ref": "cn_nfc23_ref",
								"pNfc123Ref": "cn_nfc123_ref",
								"pPeriodRef": "cn_period_ref",
								"pProdRef": "cn_prod_ref"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_IMS_Input_To_Format2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_Input_To_Format2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_IMS_Input_To_Format3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_Input_To_Format3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePL_DATA_IMS_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_Input_To_Format1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_IMS_Input_To_Format2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_IMS_Input_To_Format3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:12:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Input_To_Format1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Input_To_Format2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Input_To_Format3')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Format_To_Stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_IMS_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_check_stg_ims_data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_stg_ims_data]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_IMS",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp_check_stg_ims_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT   count(1) as cnt\nFROM [stg].[data_check]\nWHERE CheckCode in ('1','2','3')\n  AND CheckFlag='1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(0,activity('Lookup_IMS').output.firstRow.cnt)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute_PL_DATA_IMS_Check_Geography",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Execute_PL_DATA_IMS_Check_Market",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_IMS_Check_Geography",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Execute_PL_DATA_IMS_Check_Market",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_IMS_Check_Market",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Sp_ims_stg2itg",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Sp_ims_itg_fact_min_max_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_ims_stg2itg]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Sp_itg_ims_max_fact",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Sp_ims_stg2itg",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_itg_ims_max_fact]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Sp_itg_ims_map_market",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Sp_itg_ims_max_fact",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_itg_ims_map_market]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Sp_ims_itg_fact_min_max_month",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[itg].[sp_ims_itg_fact_min_max_month]"
									},
									"linkedServiceName": {
										"referenceName": "LS_ASYN_ChinaDataLake",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute_PL_DATA_IMS_Check_Map_Market",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Sp_itg_ims_map_market",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_IMS_Check_Map_Market",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "IMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:14:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Check_Geography')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Check_Market')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Check_Map_Market')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MAX_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataMAXFmt2StgMAXFact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.ActivityName",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_max_fact",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAXGeographyID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MAXGeographyID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAXChannelID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MAXChannelID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAXPackageID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MAXPackageID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSPeriodCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IMSUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSCountingUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSCountingUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSStandardUnit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSStandardUnit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValue",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "IMSValueUsd",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "IMSValueUsd",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 30
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MAX/max_fact",
									"pFileName": "max_fact.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_max_fact"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_MAX_Format_To_Stg"
					},
					"ActivityName": {
						"type": "string",
						"defaultValue": "CopyDataMAXFmt2Stg"
					}
				},
				"folder": {
					"name": "MAX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:24:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MAX_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterMAXFactFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatMAXFact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatMAXFact').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.pMAXFact)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfMAXFactFile",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMAXFactFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMAXFactFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMAXFactExcelToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Geography_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MAXGeographyID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Channel_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MAXChannelID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Pack_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MAXPackageID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Period_Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSPeriodCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "UN",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSCountingUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SU",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSStandardUnit",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LC",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LCD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IMSValueUsd",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MAX/Unzip",
												"pFileName": {
													"value": "@activity('FilterMAXFactFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MAX/max_fact",
												"pFileName": "max_fact.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatDCS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterMAX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MAX/",
									"pFileName": {
										"value": "@activity('FilterMAX').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MAX/Unzip"
								}
							}
						]
					},
					{
						"name": "FilterMAX",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMAXFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMAXFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'MAX')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputMAXFloder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MAX/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "GetFormatMAXFact",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatDCS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Csv_Folder_Comma",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MAX/Unzip"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatMAXBatch2Floder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "IfMAXFactFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MAX/Unzip"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/MAX/PL_DATA_MAX_Input_To_Format/DeleteFormatMAXFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MAX"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MAX"
					},
					"pMAXFact": {
						"type": "string",
						"defaultValue": "MAX"
					}
				},
				"folder": {
					"name": "MAX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:24:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_Folder_Comma')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MAX_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilIMSFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterMAX_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_MAX_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfMAXFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterMAX_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterMAX_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minutes",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputMAX",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MAX/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/MAX/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputMAXZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputMAX",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MAX/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/MAX/PL_DATA_MAX_SFTP_To_Input/DeleteInputMAXZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataMAXSftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputMAXZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MAX"
														}
													}
												]
											},
											{
												"name": "DeleteSftpMAXZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataMAXSftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolder",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/MAX/PL_DATA_MAX_SFTP_To_Input/DeleteSftpMAXZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterMAX_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_MAX_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_MAX_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'MAX_Summary')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolder": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/MAX/"
					}
				},
				"folder": {
					"name": "MAX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:23:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MAX_SFTP_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_MAX_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MAX_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFloder": "DataLake/Interface/Inbound/MAX/"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_MAX_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_MAX_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MAX_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MAX",
								"pFormatFolderName": "Format/MAX",
								"pMAXFact": "MAX"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_MAX_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_MAX_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MAX_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PipelineName": "PL_DATA_MAX_Format_To_Stg",
								"ActivityName": "CopyDataMAXFmt2Stg"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "MAX"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:25:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MAX_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MAX_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MAX_Format_To_Stg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataAccountParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_account",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "Enname"
										},
										"sink": {
											"name": "Enname"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "Level"
										},
										"sink": {
											"name": "Level"
										}
									},
									{
										"source": {
											"name": "Category"
										},
										"sink": {
											"name": "Category"
										}
									},
									{
										"source": {
											"name": "Attribute1"
										},
										"sink": {
											"name": "Attribute1"
										}
									},
									{
										"source": {
											"name": "Attribute2"
										},
										"sink": {
											"name": "Attribute2"
										}
									},
									{
										"source": {
											"name": "Attribute3"
										},
										"sink": {
											"name": "Attribute3"
										}
									},
									{
										"source": {
											"name": "Attribute4"
										},
										"sink": {
											"name": "Attribute4"
										}
									},
									{
										"source": {
											"name": "Attribute5"
										},
										"sink": {
											"name": "Attribute5"
										}
									},
									{
										"source": {
											"name": "Property"
										},
										"sink": {
											"name": "Property"
										}
									},
									{
										"source": {
											"name": "ProvinceId"
										},
										"sink": {
											"name": "ProvinceId"
										}
									},
									{
										"source": {
											"name": "CityId"
										},
										"sink": {
											"name": "CityId"
										}
									},
									{
										"source": {
											"name": "AreaId"
										},
										"sink": {
											"name": "AreaId"
										}
									},
									{
										"source": {
											"name": "Address"
										},
										"sink": {
											"name": "Address"
										}
									},
									{
										"source": {
											"name": "Postcode"
										},
										"sink": {
											"name": "Postcode"
										}
									},
									{
										"source": {
											"name": "MobileIphone"
										},
										"sink": {
											"name": "MobileIphone"
										}
									},
									{
										"source": {
											"name": "Email"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"name": "Website"
										},
										"sink": {
											"name": "Website"
										}
									},
									{
										"source": {
											"name": "Lat"
										},
										"sink": {
											"name": "Lat"
										}
									},
									{
										"source": {
											"name": "Lng"
										},
										"sink": {
											"name": "Lng"
										}
									},
									{
										"source": {
											"name": "BedNumber"
										},
										"sink": {
											"name": "BedNumber"
										}
									},
									{
										"source": {
											"name": "OutpatientNumber"
										},
										"sink": {
											"name": "OutpatientNumber"
										}
									},
									{
										"source": {
											"name": "CardNumber"
										},
										"sink": {
											"name": "CardNumber"
										}
									},
									{
										"source": {
											"name": "IndustrialCode"
										},
										"sink": {
											"name": "IndustrialCode"
										}
									},
									{
										"source": {
											"name": "RegisterCode"
										},
										"sink": {
											"name": "RegisterCode"
										}
									},
									{
										"source": {
											"name": "RegisterName"
										},
										"sink": {
											"name": "RegisterName"
										}
									},
									{
										"source": {
											"name": "FrameworkCode"
										},
										"sink": {
											"name": "FrameworkCode"
										}
									},
									{
										"source": {
											"name": "CreditCode"
										},
										"sink": {
											"name": "CreditCode"
										}
									},
									{
										"source": {
											"name": "PotentialLevel"
										},
										"sink": {
											"name": "PotentialLevel"
										}
									},
									{
										"source": {
											"name": "IsCoreHospital"
										},
										"sink": {
											"name": "IsCoreHospital"
										}
									},
									{
										"source": {
											"name": "IsKa"
										},
										"sink": {
											"name": "IsKa"
										}
									},
									{
										"source": {
											"name": "IsInternetHospital"
										},
										"sink": {
											"name": "IsInternetHospital"
										}
									},
									{
										"source": {
											"name": "IsValidate"
										},
										"sink": {
											"name": "IsValidate"
										}
									},
									{
										"source": {
											"name": "IsDelete"
										},
										"sink": {
											"name": "IsDelete"
										}
									},
									{
										"source": {
											"name": "RegisterDate"
										},
										"sink": {
											"name": "RegisterDate"
										}
									},
									{
										"source": {
											"name": "CloseReason"
										},
										"sink": {
											"name": "CloseReason"
										}
									},
									{
										"source": {
											"name": "CloseDate"
										},
										"sink": {
											"name": "CloseDate"
										}
									},
									{
										"source": {
											"name": "Remarks"
										},
										"sink": {
											"name": "Remarks"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "DrugstoreProperties"
										},
										"sink": {
											"name": "DrugstoreProperties"
										}
									},
									{
										"source": {
											"name": "DrugstoreKaType"
										},
										"sink": {
											"name": "DrugstoreKaType"
										}
									},
									{
										"source": {
											"name": "DrugstoreKaName"
										},
										"sink": {
											"name": "DrugstoreKaName"
										}
									},
									{
										"source": {
											"name": "IsTerritory"
										},
										"sink": {
											"name": "IsTerritory"
										}
									},
									{
										"source": {
											"name": "IsKaTerritory"
										},
										"sink": {
											"name": "IsKaTerritory"
										}
									},
									{
										"source": {
											"name": "MappingCode"
										},
										"sink": {
											"name": "MappingCode"
										}
									},
									{
										"source": {
											"name": "MappingName"
										},
										"sink": {
											"name": "MappingName"
										}
									},
									{
										"source": {
											"name": "FormerName"
										},
										"sink": {
											"name": "FormerName"
										}
									},
									{
										"source": {
											"name": "FlowDirectionName"
										},
										"sink": {
											"name": "FlowDirectionName"
										}
									},
									{
										"source": {
											"name": "InTerritoryFirstQuarter"
										},
										"sink": {
											"name": "InTerritoryFirstQuarter"
										}
									},
									{
										"source": {
											"name": "ErpCode"
										},
										"sink": {
											"name": "ErpCode"
										}
									},
									{
										"source": {
											"name": "ErpCode1"
										},
										"sink": {
											"name": "ErpCode1"
										}
									},
									{
										"source": {
											"name": "ErpCode2"
										},
										"sink": {
											"name": "ErpCode2"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Account/",
									"pFileName": "Account.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_account"
								}
							}
						]
					},
					{
						"name": "CopyDataAccountMergeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_account_merge",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "WinnerId"
										},
										"sink": {
											"name": "WinnerId"
										}
									},
									{
										"source": {
											"name": "LoseId"
										},
										"sink": {
											"name": "LoseId"
										}
									},
									{
										"source": {
											"name": "MergeType"
										},
										"sink": {
											"name": "MergeType"
										}
									},
									{
										"source": {
											"name": "Remarks"
										},
										"sink": {
											"name": "Remarks"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/AccountMerge/",
									"pFileName": "AccountMerge.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_account_merge"
								}
							}
						]
					},
					{
						"name": "CopyDataAccountStrengthWeightParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_account_strength_weight",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "AccountID"
										},
										"sink": {
											"name": "AccountID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "Weight"
										},
										"sink": {
											"name": "Weight"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/AccountStrengthWeight/",
									"pFileName": "AccountStrengthWeight.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_account_strength_weight"
								}
							}
						]
					},
					{
						"name": "CopyDataDoctorParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_doctor",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "NamePinyin"
										},
										"sink": {
											"name": "NamePinyin"
										}
									},
									{
										"source": {
											"name": "Gender"
										},
										"sink": {
											"name": "Gender"
										}
									},
									{
										"source": {
											"name": "MedicalTitle"
										},
										"sink": {
											"name": "MedicalTitle"
										}
									},
									{
										"source": {
											"name": "AdminTitle"
										},
										"sink": {
											"name": "AdminTitle"
										}
									},
									{
										"source": {
											"name": "WorkPhone"
										},
										"sink": {
											"name": "WorkPhone"
										}
									},
									{
										"source": {
											"name": "OutpatientNumber"
										},
										"sink": {
											"name": "OutpatientNumber"
										}
									},
									{
										"source": {
											"name": "BedNumber"
										},
										"sink": {
											"name": "BedNumber"
										}
									},
									{
										"source": {
											"name": "MobilePhone"
										},
										"sink": {
											"name": "MobilePhone"
										}
									},
									{
										"source": {
											"name": "Email"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"name": "PracticeCertificateNo"
										},
										"sink": {
											"name": "PracticeCertificateNo"
										}
									},
									{
										"source": {
											"name": "IsLockIdentity"
										},
										"sink": {
											"name": "IsLockIdentity"
										}
									},
									{
										"source": {
											"name": "IsDuplicationName"
										},
										"sink": {
											"name": "IsDuplicationName"
										}
									},
									{
										"source": {
											"name": "SpeakersId"
										},
										"sink": {
											"name": "SpeakersId"
										}
									},
									{
										"source": {
											"name": "SpeakersType"
										},
										"sink": {
											"name": "SpeakersType"
										}
									},
									{
										"source": {
											"name": "SpeakersLevel"
										},
										"sink": {
											"name": "SpeakersLevel"
										}
									},
									{
										"source": {
											"name": "SpeakersStatus"
										},
										"sink": {
											"name": "SpeakersStatus"
										}
									},
									{
										"source": {
											"name": "TsepId"
										},
										"sink": {
											"name": "TsepId"
										}
									},
									{
										"source": {
											"name": "CrmRequestId"
										},
										"sink": {
											"name": "CrmRequestId"
										}
									},
									{
										"source": {
											"name": "DataSources"
										},
										"sink": {
											"name": "DataSources"
										}
									},
									{
										"source": {
											"name": "MobileValidated"
										},
										"sink": {
											"name": "MobileValidated"
										}
									},
									{
										"source": {
											"name": "MobileValidatedTime"
										},
										"sink": {
											"name": "MobileValidatedTime"
										}
									},
									{
										"source": {
											"name": "HcpValidated"
										},
										"sink": {
											"name": "HcpValidated"
										}
									},
									{
										"source": {
											"name": "HcpValidatedTime"
										},
										"sink": {
											"name": "HcpValidatedTime"
										}
									},
									{
										"source": {
											"name": "LoseCause"
										},
										"sink": {
											"name": "LoseCause"
										}
									},
									{
										"source": {
											"name": "Remarks"
										},
										"sink": {
											"name": "Remarks"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Doctor/",
									"pFileName": "Doctor.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_doctor"
								}
							}
						]
					},
					{
						"name": "CopyDataDrugstoreTypeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_drugstore_type",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "DrugstoreId"
										},
										"sink": {
											"name": "DrugstoreId"
										}
									},
									{
										"source": {
											"name": "DrugstoreType"
										},
										"sink": {
											"name": "DrugstoreType"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/DrugstoreType/",
									"pFileName": "DrugstoreType.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_drugstore_type"
								}
							}
						]
					},
					{
						"name": "CopyDataEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "SystemId"
										},
										"sink": {
											"name": "SystemId"
										}
									},
									{
										"source": {
											"name": "ViatrisId"
										},
										"sink": {
											"name": "ViatrisId"
										}
									},
									{
										"source": {
											"name": "CnName"
										},
										"sink": {
											"name": "CnName"
										}
									},
									{
										"source": {
											"name": "EnName"
										},
										"sink": {
											"name": "EnName"
										}
									},
									{
										"source": {
											"name": "ProvinceId"
										},
										"sink": {
											"name": "ProvinceId"
										}
									},
									{
										"source": {
											"name": "CityId"
										},
										"sink": {
											"name": "CityId"
										}
									},
									{
										"source": {
											"name": "Gender"
										},
										"sink": {
											"name": "Gender"
										}
									},
									{
										"source": {
											"name": "NtId"
										},
										"sink": {
											"name": "NtId"
										}
									},
									{
										"source": {
											"name": "MId"
										},
										"sink": {
											"name": "MId"
										}
									},
									{
										"source": {
											"name": "PositionTItle"
										},
										"sink": {
											"name": "PositionTItle"
										}
									},
									{
										"source": {
											"name": "OuCode"
										},
										"sink": {
											"name": "OuCode"
										}
									},
									{
										"source": {
											"name": "OuName"
										},
										"sink": {
											"name": "OuName"
										}
									},
									{
										"source": {
											"name": "HireDate"
										},
										"sink": {
											"name": "HireDate"
										}
									},
									{
										"source": {
											"name": "OriginalHireDate"
										},
										"sink": {
											"name": "OriginalHireDate"
										}
									},
									{
										"source": {
											"name": "ContinuesServiceDate"
										},
										"sink": {
											"name": "ContinuesServiceDate"
										}
									},
									{
										"source": {
											"name": "DepartureDate"
										},
										"sink": {
											"name": "DepartureDate"
										}
									},
									{
										"source": {
											"name": "LastTransferDate"
										},
										"sink": {
											"name": "LastTransferDate"
										}
									},
									{
										"source": {
											"name": "DirectorViatrisId"
										},
										"sink": {
											"name": "DirectorViatrisId"
										}
									},
									{
										"source": {
											"name": "DirectorOuName"
										},
										"sink": {
											"name": "DirectorOuName"
										}
									},
									{
										"source": {
											"name": "DirectorOuCode"
										},
										"sink": {
											"name": "DirectorOuCode"
										}
									},
									{
										"source": {
											"name": "DirectorName"
										},
										"sink": {
											"name": "DirectorName"
										}
									},
									{
										"source": {
											"name": "DirectorEnname"
										},
										"sink": {
											"name": "DirectorEnname"
										}
									},
									{
										"source": {
											"name": "Email"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"name": "EmployeeType"
										},
										"sink": {
											"name": "EmployeeType"
										}
									},
									{
										"source": {
											"name": "VirtualDirectorViatrisId"
										},
										"sink": {
											"name": "VirtualDirectorViatrisId"
										}
									},
									{
										"source": {
											"name": "VirtualDirectorName"
										},
										"sink": {
											"name": "VirtualDirectorName"
										}
									},
									{
										"source": {
											"name": "VirtualDirectorEnname"
										},
										"sink": {
											"name": "VirtualDirectorEnname"
										}
									},
									{
										"source": {
											"name": "CompanyName"
										},
										"sink": {
											"name": "CompanyName"
										}
									},
									{
										"source": {
											"name": "EmployeeStatus"
										},
										"sink": {
											"name": "EmployeeStatus"
										}
									},
									{
										"source": {
											"name": "MobilePhone"
										},
										"sink": {
											"name": "MobilePhone"
										}
									},
									{
										"source": {
											"name": "ContactNumber"
										},
										"sink": {
											"name": "ContactNumber"
										}
									},
									{
										"source": {
											"name": "CostCenterCode"
										},
										"sink": {
											"name": "CostCenterCode"
										}
									},
									{
										"source": {
											"name": "CostCenterName"
										},
										"sink": {
											"name": "CostCenterName"
										}
									},
									{
										"source": {
											"name": "Remarks"
										},
										"sink": {
											"name": "Remarks"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Employee/",
									"pFileName": "Employee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataGEOParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_geo",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Pycode"
										},
										"sink": {
											"name": "Pycode"
										}
									},
									{
										"source": {
											"name": "Pyabbr"
										},
										"sink": {
											"name": "Pyabbr"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "Category"
										},
										"sink": {
											"name": "Category"
										}
									},
									{
										"source": {
											"name": "StandardCode"
										},
										"sink": {
											"name": "StandardCode"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/GEO/",
									"pFileName": "GEO.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_geo"
								}
							}
						]
					},
					{
						"name": "CopyDataHOKAPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_hoka_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "NAME"
										},
										"sink": {
											"name": "NAME"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "PositionType"
										},
										"sink": {
											"name": "PositionType"
										}
									},
									{
										"source": {
											"name": "BusinessType"
										},
										"sink": {
											"name": "BusinessType"
										}
									},
									{
										"source": {
											"name": "ProvinceID"
										},
										"sink": {
											"name": "ProvinceID"
										}
									},
									{
										"source": {
											"name": "CityID"
										},
										"sink": {
											"name": "CityID"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/HOKAPosition/",
									"pFileName": "HOKAPosition.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_hoka_position"
								}
							}
						]
					},
					{
						"name": "CopyDataHOKAPositionAccountParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_hoka_position_account",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "AccountID"
										},
										"sink": {
											"name": "AccountID"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/HOKAPositionAccount/",
									"pFileName": "HOKAPositionAccount.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_hoka_position_account"
								}
							}
						]
					},
					{
						"name": "CopyDataHOKAPositionEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_hoka_position_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "EmployeeID"
										},
										"sink": {
											"name": "EmployeeID"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/HOKAPositionEmployee/",
									"pFileName": "HOKAPositionEmployee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_hoka_position_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataHOKAPositionPortfolioParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_hoka_position_portfolio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "PortfolioID"
										},
										"sink": {
											"name": "PortfolioID"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/HOKAPositionPortfolio/",
									"pFileName": "HOKAPositionPortfolio.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_hoka_position_portfolio"
								}
							}
						]
					},
					{
						"name": "CopyDataHospitalDrugstoreParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_hospital_drugstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Month"
										},
										"sink": {
											"name": "Month"
										}
									},
									{
										"source": {
											"name": "HospitalID"
										},
										"sink": {
											"name": "HospitalID"
										}
									},
									{
										"source": {
											"name": "DrugstoreID"
										},
										"sink": {
											"name": "DrugstoreID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "Weight"
										},
										"sink": {
											"name": "Weight"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "SeqId"
										},
										"sink": {
											"name": "SeqId"
										}
									},
									{
										"source": {
											"name": "RelationType"
										},
										"sink": {
											"name": "RelationType"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/HospitalDrugstore/",
									"pFileName": "HospitalDrugstore.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_hospital_drugstore"
								}
							}
						]
					},
					{
						"name": "CopyDataKADrugstoreChainstoreParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_ka_drugstore_chainstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Accountcode"
										},
										"sink": {
											"name": "Accountcode"
										}
									},
									{
										"source": {
											"name": "Mappingcode"
										},
										"sink": {
											"name": "Mappingcode"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/KADrugstoreChainstore/",
									"pFileName": "KADrugstoreChainstore.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_ka_drugstore_chainstore"
								}
							}
						]
					},
					{
						"name": "CopyDataKAPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_ka_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "ChineseName"
										},
										"sink": {
											"name": "ChineseName"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "ParentID"
										},
										"sink": {
											"name": "ParentID"
										}
									},
									{
										"source": {
											"name": "PositionType"
										},
										"sink": {
											"name": "PositionType"
										}
									},
									{
										"source": {
											"name": "Note"
										},
										"sink": {
											"name": "Note"
										}
									},
									{
										"source": {
											"name": "BusinessType"
										},
										"sink": {
											"name": "BusinessType"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ProvinceID"
										},
										"sink": {
											"name": "ProvinceID"
										}
									},
									{
										"source": {
											"name": "CityID"
										},
										"sink": {
											"name": "CityID"
										}
									},
									{
										"source": {
											"name": "RelatedPositionCategory"
										},
										"sink": {
											"name": "RelatedPositionCategory"
										}
									},
									{
										"source": {
											"name": "RelatedPositionID"
										},
										"sink": {
											"name": "RelatedPositionID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/KAPosition/",
									"pFileName": "KAPosition.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_ka_position"
								}
							}
						]
					},
					{
						"name": "CopyDataKAPositionAccountParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_ka_position_account",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "AccountID"
										},
										"sink": {
											"name": "AccountID"
										}
									},
									{
										"source": {
											"name": "KAPositionID"
										},
										"sink": {
											"name": "KAPositionID"
										}
									},
									{
										"source": {
											"name": "KAPositionCategory"
										},
										"sink": {
											"name": "KAPositionCategory"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "MappingCodeID"
										},
										"sink": {
											"name": "MappingCodeID"
										}
									},
									{
										"source": {
											"name": "DrugstorePortfolioClass"
										},
										"sink": {
											"name": "DrugstorePortfolioClass"
										}
									},
									{
										"source": {
											"name": "DrugstoreKAType"
										},
										"sink": {
											"name": "DrugstoreKAType"
										}
									},
									{
										"source": {
											"name": "DrugstoreKAName"
										},
										"sink": {
											"name": "DrugstoreKAName"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/KAPositionAccount/",
									"pFileName": "KAPositionAccount.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_ka_position_account"
								}
							}
						]
					},
					{
						"name": "CopyDataKAPositionEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_ka_position_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "EmployeeID"
										},
										"sink": {
											"name": "EmployeeID"
										}
									},
									{
										"source": {
											"name": "KAPositionID"
										},
										"sink": {
											"name": "KAPositionID"
										}
									},
									{
										"source": {
											"name": "IsDelegate"
										},
										"sink": {
											"name": "IsDelegate"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/KAPositionEmployee/",
									"pFileName": "KAPositionEmployee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_ka_position_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataKAPositionPortfolioParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_ka_position_portfolio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PortfolioID"
										},
										"sink": {
											"name": "PortfolioID"
										}
									},
									{
										"source": {
											"name": "KAPositionID"
										},
										"sink": {
											"name": "KAPositionID"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/KAPositionPortfolio/",
									"pFileName": "KAPositionPortfolio.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_ka_position_portfolio"
								}
							}
						]
					},
					{
						"name": "CopyDataLOVItemParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_lov_item",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "Value"
										},
										"sink": {
											"name": "Value"
										}
									},
									{
										"source": {
											"name": "Description"
										},
										"sink": {
											"name": "Description"
										}
									},
									{
										"source": {
											"name": "Sequence"
										},
										"sink": {
											"name": "Sequence"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/LOVItem/",
									"pFileName": "LOVItem.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_lov_item"
								}
							}
						]
					},
					{
						"name": "CopyDataNEKAPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_neka_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "ChineseName"
										},
										"sink": {
											"name": "ChineseName"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "ParentID"
										},
										"sink": {
											"name": "ParentID"
										}
									},
									{
										"source": {
											"name": "PositionType"
										},
										"sink": {
											"name": "PositionType"
										}
									},
									{
										"source": {
											"name": "Note"
										},
										"sink": {
											"name": "Note"
										}
									},
									{
										"source": {
											"name": "BusinessType"
										},
										"sink": {
											"name": "BusinessType"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/NEKAPosition/",
									"pFileName": "NEKAPosition.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_neka_position"
								}
							}
						]
					},
					{
						"name": "CopyDataNEKAPositionEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_neka_position_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "EmployeeID"
										},
										"sink": {
											"name": "EmployeeID"
										}
									},
									{
										"source": {
											"name": "NKAPositionID"
										},
										"sink": {
											"name": "NKAPositionID"
										}
									},
									{
										"source": {
											"name": "IsDelegate"
										},
										"sink": {
											"name": "IsDelegate"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/NEKAPositionEmployee/",
									"pFileName": "NEKAPositionEmployee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_neka_position_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataNKAMKATypeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_nka_mka_type",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "NKAMPosition"
										},
										"sink": {
											"name": "NKAMPosition"
										}
									},
									{
										"source": {
											"name": "DrugstoreKAType"
										},
										"sink": {
											"name": "DrugstoreKAType"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/NKAMKAType/",
									"pFileName": "NKAMKAType.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_nka_mka_type"
								}
							}
						]
					},
					{
						"name": "CopyDataPackageParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_package",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "ProductId"
										},
										"sink": {
											"name": "ProductId"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "Enname"
										},
										"sink": {
											"name": "Enname"
										}
									},
									{
										"source": {
											"name": "Description"
										},
										"sink": {
											"name": "Description"
										}
									},
									{
										"source": {
											"name": "Abbreviation"
										},
										"sink": {
											"name": "Abbreviation"
										}
									},
									{
										"source": {
											"name": "LegalEntityCode"
										},
										"sink": {
											"name": "LegalEntityCode"
										}
									},
									{
										"source": {
											"name": "LegalEntityName"
										},
										"sink": {
											"name": "LegalEntityName"
										}
									},
									{
										"source": {
											"name": "Unit"
										},
										"sink": {
											"name": "Unit"
										}
									},
									{
										"source": {
											"name": "CalcPrice"
										},
										"sink": {
											"name": "CalcPrice"
										}
									},
									{
										"source": {
											"name": "RetailPrice"
										},
										"sink": {
											"name": "RetailPrice"
										}
									},
									{
										"source": {
											"name": "CostPrice"
										},
										"sink": {
											"name": "CostPrice"
										}
									},
									{
										"source": {
											"name": "MaxPrice"
										},
										"sink": {
											"name": "MaxPrice"
										}
									},
									{
										"source": {
											"name": "GoodType"
										},
										"sink": {
											"name": "GoodType"
										}
									},
									{
										"source": {
											"name": "Sheltlife"
										},
										"sink": {
											"name": "Sheltlife"
										}
									},
									{
										"source": {
											"name": "IsSell"
										},
										"sink": {
											"name": "IsSell"
										}
									},
									{
										"source": {
											"name": "IsVbp"
										},
										"sink": {
											"name": "IsVbp"
										}
									},
									{
										"source": {
											"name": "IsSample"
										},
										"sink": {
											"name": "IsSample"
										}
									},
									{
										"source": {
											"name": "ErpCode1"
										},
										"sink": {
											"name": "ErpCode1"
										}
									},
									{
										"source": {
											"name": "ErpCode2"
										},
										"sink": {
											"name": "ErpCode2"
										}
									},
									{
										"source": {
											"name": "SalesOrg"
										},
										"sink": {
											"name": "SalesOrg"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Package/",
									"pFileName": "Package.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_package"
								}
							}
						]
					},
					{
						"name": "CopyDataPortfolioParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_portfolio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Portfolio/",
									"pFileName": "Portfolio.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_portfolio"
								}
							}
						]
					},
					{
						"name": "CopyDataPortfolioStrengthParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_portfolio_strength",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PortfolioID"
										},
										"sink": {
											"name": "PortfolioID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/PortfolioStrength/",
									"pFileName": "PortfolioStrength.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_portfolio_strength"
								}
							}
						]
					},
					{
						"name": "CopyDataPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "NAME"
										},
										"sink": {
											"name": "NAME"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "PositionType"
										},
										"sink": {
											"name": "PositionType"
										}
									},
									{
										"source": {
											"name": "BusinessType"
										},
										"sink": {
											"name": "BusinessType"
										}
									},
									{
										"source": {
											"name": "ProvinceID"
										},
										"sink": {
											"name": "ProvinceID"
										}
									},
									{
										"source": {
											"name": "CityID"
										},
										"sink": {
											"name": "CityID"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "AccountPositionType"
										},
										"sink": {
											"name": "AccountPositionType"
										}
									},
									{
										"source": {
											"name": "PositionAttribute"
										},
										"sink": {
											"name": "PositionAttribute"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Position/",
									"pFileName": "Position.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_position"
								}
							}
						]
					},
					{
						"name": "CopyDataPositionAccountParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_position_account",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "AccountID"
										},
										"sink": {
											"name": "AccountID"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "DrugstorePortfolioClass"
										},
										"sink": {
											"name": "DrugstorePortfolioClass"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/PositionAccount/",
									"pFileName": "PositionAccount.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_position_account"
								}
							}
						]
					},
					{
						"name": "CopyDataPositionEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_position_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "EmployeeID"
										},
										"sink": {
											"name": "EmployeeID"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/PositionEmployee/",
									"pFileName": "PositionEmployee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_position_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataPositionPortfolioParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_position_portfolio",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "PortfolioID"
										},
										"sink": {
											"name": "PortfolioID"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/PositionPortfolio/",
									"pFileName": "PositionPortfolio.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_position_portfolio"
								}
							}
						]
					},
					{
						"name": "CopyDataProductParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_product",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "ProductCode"
										},
										"sink": {
											"name": "ProductCode"
										}
									},
									{
										"source": {
											"name": "TherapeuticAreaId"
										},
										"sink": {
											"name": "TherapeuticAreaId"
										}
									},
									{
										"source": {
											"name": "ProductName"
										},
										"sink": {
											"name": "ProductName"
										}
									},
									{
										"source": {
											"name": "ProductEnname"
										},
										"sink": {
											"name": "ProductEnname"
										}
									},
									{
										"source": {
											"name": "Description"
										},
										"sink": {
											"name": "Description"
										}
									},
									{
										"source": {
											"name": "ErpCode1"
										},
										"sink": {
											"name": "ErpCode1"
										}
									},
									{
										"source": {
											"name": "ErpCode2"
										},
										"sink": {
											"name": "ErpCode2"
										}
									},
									{
										"source": {
											"name": "IsSell"
										},
										"sink": {
											"name": "IsSell"
										}
									},
									{
										"source": {
											"name": "Bases"
										},
										"sink": {
											"name": "Bases"
										}
									},
									{
										"source": {
											"name": "ChemicalName"
										},
										"sink": {
											"name": "ChemicalName"
										}
									},
									{
										"source": {
											"name": "ChemicalComponent"
										},
										"sink": {
											"name": "ChemicalComponent"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Product/",
									"pFileName": "Product.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_product"
								}
							}
						]
					},
					{
						"name": "CopyDataProductPriceStructParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_product_price_struct",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "SkuCode"
										},
										"sink": {
											"name": "SkuCode"
										}
									},
									{
										"source": {
											"name": "SkuName"
										},
										"sink": {
											"name": "SkuName"
										}
									},
									{
										"source": {
											"name": "SkuEnname"
										},
										"sink": {
											"name": "SkuEnname"
										}
									},
									{
										"source": {
											"name": "ChannelType"
										},
										"sink": {
											"name": "ChannelType"
										}
									},
									{
										"source": {
											"name": "Province"
										},
										"sink": {
											"name": "Province"
										}
									},
									{
										"source": {
											"name": "CalcPrice"
										},
										"sink": {
											"name": "CalcPrice"
										}
									},
									{
										"source": {
											"name": "StartDate"
										},
										"sink": {
											"name": "StartDate"
										}
									},
									{
										"source": {
											"name": "EndDate"
										},
										"sink": {
											"name": "EndDate"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/ProductPriceStruct/",
									"pFileName": "ProductPriceStruct.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_product_price_struct"
								}
							}
						]
					},
					{
						"name": "CopyDataRPMPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_rpm_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "NAME"
										},
										"sink": {
											"name": "NAME"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "PositionType"
										},
										"sink": {
											"name": "PositionType"
										}
									},
									{
										"source": {
											"name": "BusinessType"
										},
										"sink": {
											"name": "BusinessType"
										}
									},
									{
										"source": {
											"name": "ProvinceID"
										},
										"sink": {
											"name": "ProvinceID"
										}
									},
									{
										"source": {
											"name": "CityID"
										},
										"sink": {
											"name": "CityID"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "AccountPositionType"
										},
										"sink": {
											"name": "AccountPositionType"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/RPMPosition/",
									"pFileName": "RPMPosition.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_rpm_position"
								}
							}
						]
					},
					{
						"name": "CopyDataRPMPositionEmployeeParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_rpm_position_employee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "ActionFlag"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "PositionID"
										},
										"sink": {
											"name": "PositionID"
										}
									},
									{
										"source": {
											"name": "EmployeeID"
										},
										"sink": {
											"name": "EmployeeID"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/RPMPositionEmployee/",
									"pFileName": "RPMPositionEmployee.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_rpm_position_employee"
								}
							}
						]
					},
					{
						"name": "CopyDataSpeakerParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_speaker",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "Level"
										},
										"sink": {
											"name": "Level"
										}
									},
									{
										"source": {
											"name": "SpeakerStatus"
										},
										"sink": {
											"name": "SpeakerStatus"
										}
									},
									{
										"source": {
											"name": "ClientId"
										},
										"sink": {
											"name": "ClientId"
										}
									},
									{
										"source": {
											"name": "ProvinceId"
										},
										"sink": {
											"name": "ProvinceId"
										}
									},
									{
										"source": {
											"name": "CityId"
										},
										"sink": {
											"name": "CityId"
										}
									},
									{
										"source": {
											"name": "MedicalTitle"
										},
										"sink": {
											"name": "MedicalTitle"
										}
									},
									{
										"source": {
											"name": "Speciality"
										},
										"sink": {
											"name": "Speciality"
										}
									},
									{
										"source": {
											"name": "Email"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"name": "IsHcpSpeaker"
										},
										"sink": {
											"name": "IsHcpSpeaker"
										}
									},
									{
										"source": {
											"name": "FailureReason"
										},
										"sink": {
											"name": "FailureReason"
										}
									},
									{
										"source": {
											"name": "RequestBy"
										},
										"sink": {
											"name": "RequestBy"
										}
									},
									{
										"source": {
											"name": "ReqeustDate"
										},
										"sink": {
											"name": "ReqeustDate"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Speaker/",
									"pFileName": "Speaker.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_speaker"
								}
							}
						]
					},
					{
						"name": "CopyDataStrengthParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_strength",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ActionFlag"
										}
									},
									{
										"source": {
											"name": "ProductID"
										},
										"sink": {
											"name": "ProductID"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "EnglishName"
										},
										"sink": {
											"name": "EnglishName"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Strength/",
									"pFileName": "Strength.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_strength"
								}
							}
						]
					},
					{
						"name": "CopyDataStrengthPackageParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_strength_package",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACTIONFLAG"
										},
										"sink": {
											"name": "ACTIONFLAG"
										}
									},
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "StrengthID"
										},
										"sink": {
											"name": "StrengthID"
										}
									},
									{
										"source": {
											"name": "PackageID"
										},
										"sink": {
											"name": "PackageID"
										}
									},
									{
										"source": {
											"name": "Quarter"
										},
										"sink": {
											"name": "Quarter"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "RecordStatus"
										},
										"sink": {
											"name": "RecordStatus"
										}
									},
									{
										"source": {
											"name": "Remark"
										},
										"sink": {
											"name": "Remark"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/StrengthPackage/",
									"pFileName": "StrengthPackage.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_strength_package"
								}
							}
						]
					},
					{
						"name": "CopyDataTherapeuticAreaParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_therapeutic_area",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id"
										},
										"sink": {
											"name": "Id"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "Enname"
										},
										"sink": {
											"name": "Enname"
										}
									},
									{
										"source": {
											"name": "Description"
										},
										"sink": {
											"name": "Description"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/TherapeuticArea/",
									"pFileName": "TherapeuticArea.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_therapeutic_area"
								}
							}
						]
					},
					{
						"name": "CopyDataTitleParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_title",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "Name"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"name": "ParentId"
										},
										"sink": {
											"name": "ParentId"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type"
										}
									},
									{
										"source": {
											"name": "Sequence"
										},
										"sink": {
											"name": "Sequence"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "Code"
										},
										"sink": {
											"name": "Code"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Title/",
									"pFileName": "Title.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_title"
								}
							}
						]
					},
					{
						"name": "CopyDataWorkplaceParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_workplace",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"name": "ClientId"
										},
										"sink": {
											"name": "ClientId"
										}
									},
									{
										"source": {
											"name": "AccountId"
										},
										"sink": {
											"name": "AccountId"
										}
									},
									{
										"source": {
											"name": "StandardDept"
										},
										"sink": {
											"name": "StandardDept"
										}
									},
									{
										"source": {
											"name": "DeptName"
										},
										"sink": {
											"name": "DeptName"
										}
									},
									{
										"source": {
											"name": "IsMain"
										},
										"sink": {
											"name": "IsMain"
										}
									},
									{
										"source": {
											"name": "Remarks"
										},
										"sink": {
											"name": "Remarks"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"name": "CreatedBy"
										},
										"sink": {
											"name": "CreatedBy"
										}
									},
									{
										"source": {
											"name": "CreatedOn"
										},
										"sink": {
											"name": "CreatedOn"
										}
									},
									{
										"source": {
											"name": "ModifiedBy"
										},
										"sink": {
											"name": "ModifiedBy"
										}
									},
									{
										"source": {
											"name": "ModifiedOn"
										},
										"sink": {
											"name": "ModifiedOn"
										}
									},
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/Workplace/",
									"pFileName": "Workplace.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_workplace"
								}
							}
						]
					},
					{
						"name": "CopyDataSummaryParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_mdm_summary",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FILE_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "COUNT",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/MDM/MDM_Summary/",
									"pFileName": "MDM_Summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_mdm_summary"
								}
							}
						]
					},
					{
						"name": "Exec_sp_Check_MDM_stg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataAccountParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataAccountMergeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataAccountStrengthWeightParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataDoctorParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataDrugstoreTypeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataGEOParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataHOKAPositionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataHOKAPositionAccountParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataHOKAPositionEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataHOKAPositionPortfolioParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataHospitalDrugstoreParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataKADrugstoreChainstoreParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataKAPositionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataKAPositionAccountParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataKAPositionEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataKAPositionPortfolioParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataLOVItemParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataNEKAPositionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataNEKAPositionEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataNKAMKATypeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPackageParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPortfolioParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPortfolioStrengthParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPositionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPositionAccountParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPositionEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataPositionPortfolioParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataProductParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataProductPriceStructParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataRPMPositionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataRPMPositionEmployeeParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataSpeakerParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataStrengthParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataStrengthPackageParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataTherapeuticAreaParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataTitleParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataWorkplaceParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyDataSummaryParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_inmarket_stg_summary]",
							"storedProcedureParameters": {
								"ModuleName": {
									"value": "MDM",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_MDM_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataMDMFmt2Stg"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:51:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterAccountFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Account_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterAccountMergeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'AccountMerge_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterAccountStrengthWeightFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'AccountStrengthWeight_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDoctorFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Doctor_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterDrugstoreTypeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'DrugstoreType_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Employee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterGEOFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'GEO_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfAccountFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterAccountFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterAccountFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataAccountUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterAccountFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Account/",
												"pFileName": "Account.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataAccountTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataAccountUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Account/",
												"pFileName": "Account.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Account/",
												"pFileName": "Account.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileAccount",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataAccountTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Account/",
												"pFileName": "Account.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfGEOFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterGEOFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterGEOFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataGEOUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterGEOFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/GEO/",
												"pFileName": "GEO.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataGEOTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataGEOUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/GEO/",
												"pFileName": "GEO.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/GEO/",
												"pFileName": "GEO.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileGEO",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataGEOTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/GEO/",
												"pFileName": "GEO.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Employee/",
												"pFileName": "Employee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe_special",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Employee/",
												"pFileName": "Employee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Employee/",
												"pFileName": "Employee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Employee/",
												"pFileName": "Employee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfAccountMergeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterAccountMergeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterAccountMergeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataAccountMergeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterAccountMergeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountMerge/",
												"pFileName": "AccountMerge.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataAccountMergeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataAccountMergeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountMerge/",
												"pFileName": "AccountMerge.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountMerge/",
												"pFileName": "AccountMerge.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileAccountAccountMerge",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataAccountMergeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountMerge/",
												"pFileName": "AccountMerge.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfDrugstoreTypeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDrugstoreTypeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDrugstoreTypeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDrugstoreTypeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterDrugstoreTypeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/DrugstoreType/",
												"pFileName": "DrugstoreType.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataDrugstoreTypeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataDrugstoreTypeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/DrugstoreType/",
												"pFileName": "DrugstoreType.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/DrugstoreType/",
												"pFileName": "DrugstoreType.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileDrugstoreType",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataDrugstoreTypeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/DrugstoreType/",
												"pFileName": "DrugstoreType.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfDoctorFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterDoctorFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterDoctorFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataDoctorUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterDoctorFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Doctor/",
												"pFileName": "Doctor.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataDoctorTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataDoctorUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Doctor/",
												"pFileName": "Doctor.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Doctor/",
												"pFileName": "Doctor.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileDoctor",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataDoctorTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Doctor/",
												"pFileName": "Doctor.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfAccountStrengthWeightFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterAccountStrengthWeightFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterAccountStrengthWeightFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataAccountStrengthWeightUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterAccountStrengthWeightFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountStrengthWeight/",
												"pFileName": "AccountStrengthWeight.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataAccountStrengthWeightTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataAccountStrengthWeightUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountStrengthWeight/",
												"pFileName": "AccountStrengthWeight.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountStrengthWeight/",
												"pFileName": "AccountStrengthWeight.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileAccountStrengthWeight",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataAccountStrengthWeightTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/AccountStrengthWeight/",
												"pFileName": "AccountStrengthWeight.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:46:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe_special')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterHOKAPositionAccountFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'HOKAPositionAccount_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHOKAPositionEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'HOKAPositionEmployee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHOKAPositionPortfolioFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'HOKAPositionPortfolio_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterHospitalDrugstoreFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'HospitalDrugstore_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterKADrugstoreChainstoreFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'KADrugstoreChainstore_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterKAPositionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'KAPosition_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterKAPositionAccountFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'KAPositionAccount_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfHOKAPositionAccountFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHOKAPositionAccountFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHOKAPositionAccountFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHOKAPositionAccountUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterHOKAPositionAccountFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionAccount/",
												"pFileName": "HOKAPositionAccount.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataHOKAPositionAccountTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionAccountUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionAccount/",
												"pFileName": "HOKAPositionAccount.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionAccount/",
												"pFileName": "HOKAPositionAccount.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileHOKAPositionAccount",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionAccountTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionAccount/",
												"pFileName": "HOKAPositionAccount.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfHOKAPositionEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHOKAPositionEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHOKAPositionEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHOKAPositionEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterHOKAPositionEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionEmployee/",
												"pFileName": "HOKAPositionEmployee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataHOKAPositionEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionEmployee/",
												"pFileName": "HOKAPositionEmployee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionEmployee/",
												"pFileName": "HOKAPositionEmployee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileHOKAPositionEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionEmployee/",
												"pFileName": "HOKAPositionEmployee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfHOKAPositionPortfolioFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHOKAPositionPortfolioFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHOKAPositionPortfolioFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHOKAPositionPortfolioUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterHOKAPositionPortfolioFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionPortfolio/",
												"pFileName": "HOKAPositionPortfolio.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataHOKAPositionPortfolioTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionPortfolioUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionPortfolio/",
												"pFileName": "HOKAPositionPortfolio.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionPortfolio/",
												"pFileName": "HOKAPositionPortfolio.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileHOKAPositionPortfolio",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionPortfolioTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPositionPortfolio/",
												"pFileName": "HOKAPositionPortfolio.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfHospitalDrugstoreFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHospitalDrugstoreFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHospitalDrugstoreFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHospitalDrugstoreUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterHospitalDrugstoreFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HospitalDrugstore/",
												"pFileName": "HospitalDrugstore.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataHospitalDrugstoreTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataHospitalDrugstoreUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HospitalDrugstore/",
												"pFileName": "HospitalDrugstore.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HospitalDrugstore/",
												"pFileName": "HospitalDrugstore.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileHospitalDrugstore",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataHospitalDrugstoreTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HospitalDrugstore/",
												"pFileName": "HospitalDrugstore.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfKADrugstoreChainstoreFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKADrugstoreChainstoreFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKADrugstoreChainstoreFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKADrugstoreChainstoreUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterKADrugstoreChainstoreFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KADrugstoreChainstore/",
												"pFileName": "KADrugstoreChainstore.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataKADrugstoreChainstoreTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataKADrugstoreChainstoreUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KADrugstoreChainstore/",
												"pFileName": "KADrugstoreChainstore.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KADrugstoreChainstore/",
												"pFileName": "KADrugstoreChainstore.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileKADrugstoreChainstore",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataKADrugstoreChainstoreTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KADrugstoreChainstore/",
												"pFileName": "KADrugstoreChainstore.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfKAPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAPositionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAPositionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAPositionUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterKAPositionFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPosition/",
												"pFileName": "KAPosition.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataKAPositionTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPosition/",
												"pFileName": "KAPosition.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPosition/",
												"pFileName": "KAPosition.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileKAPosition",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPosition/",
												"pFileName": "KAPosition.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfKAPositionAccountFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAPositionAccountFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAPositionAccountFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAPositionAccountUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterKAPositionAccountFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionAccount/",
												"pFileName": "KAPositionAccount.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataKAPositionAccountTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionAccountUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionAccount/",
												"pFileName": "KAPositionAccount.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionAccount/",
												"pFileName": "KAPositionAccount.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileKAPositionAccount",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionAccountTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionAccount/",
												"pFileName": "KAPositionAccount.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:47:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterKAPositionPortfolioFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'KAPositionPortfolio_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterLOVItemFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'LOVItem_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNEKAPositionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'NEKAPosition_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNEKAPositionEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'NEKAPositionEmployee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterNKAMKATypeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'NKAMKAType_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPackageFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Package_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPortfolioFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Portfolio_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfKAPositionPortfolioFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAPositionPortfolioFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAPositionPortfolioFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAPositionPortfolioUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterKAPositionPortfolioFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionPortfolio/",
												"pFileName": "KAPositionPortfolio.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataKAPositionPortfolioTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionPortfolioUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionPortfolio/",
												"pFileName": "KAPositionPortfolio.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionPortfolio/",
												"pFileName": "KAPositionPortfolio.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileKAPositionPortfolio",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionPortfolioTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionPortfolio/",
												"pFileName": "KAPositionPortfolio.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfLOVItemFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterLOVItemFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterLOVItemFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataLOVItemUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterLOVItemFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/LOVItem/",
												"pFileName": "LOVItem.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataLOVItemTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataLOVItemUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/LOVItem/",
												"pFileName": "LOVItem.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/LOVItem/",
												"pFileName": "LOVItem.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileLOVItem",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataLOVItemTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/LOVItem/",
												"pFileName": "LOVItem.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfNEKAPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNEKAPositionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNEKAPositionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNEKAPositionUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterNEKAPositionFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPosition/",
												"pFileName": "NEKAPosition.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataNEKAPositionTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataNEKAPositionUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPosition/",
												"pFileName": "NEKAPosition.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPosition/",
												"pFileName": "NEKAPosition.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileNEKAPosition",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataNEKAPositionTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPosition/",
												"pFileName": "NEKAPosition.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfNEKAPositionEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNEKAPositionEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNEKAPositionEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNEKAPositionEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterNEKAPositionEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPositionEmployee/",
												"pFileName": "NEKAPositionEmployee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataNEKAPositionEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataNEKAPositionEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPositionEmployee/",
												"pFileName": "NEKAPositionEmployee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPositionEmployee/",
												"pFileName": "NEKAPositionEmployee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileNEKAPositionEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataNEKAPositionEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NEKAPositionEmployee/",
												"pFileName": "NEKAPositionEmployee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfNKAMKATypeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterNKAMKATypeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterNKAMKATypeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataNKAMKATypeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterNKAMKATypeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NKAMKAType/",
												"pFileName": "NKAMKAType.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataNKAMKATypeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataNKAMKATypeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NKAMKAType/",
												"pFileName": "NKAMKAType.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NKAMKAType/",
												"pFileName": "NKAMKAType.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileNKAMKAType",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataNKAMKATypeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/NKAMKAType/",
												"pFileName": "NKAMKAType.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfPackageFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPackageFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPackageFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPackageUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPackageFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Package/",
												"pFileName": "Package.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPackageTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPackageUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Package/",
												"pFileName": "Package.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Package/",
												"pFileName": "Package.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePackage",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPackageTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Package/",
												"pFileName": "Package.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfPortfolioFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPortfolioFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPortfolioFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPortfolioUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPortfolioFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Portfolio/",
												"pFileName": "Portfolio.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPortfolioTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPortfolioUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Portfolio/",
												"pFileName": "Portfolio.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Portfolio/",
												"pFileName": "Portfolio.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePortfolio",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPortfolioTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Portfolio/",
												"pFileName": "Portfolio.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:48:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterPositionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Position_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPositionAccountFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'PositionAccount_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPositionEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'PositionEmployee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterPositionPortfolioFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'PositionPortfolio_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterProductFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Product_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterProductPriceStructFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'ProductPriceStructure_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterRPMPositionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'RPMPosition_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPositionFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Position/",
												"pFileName": "Position.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPositionTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPositionUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Position/",
												"pFileName": "Position.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Position/",
												"pFileName": "Position.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePosition",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPositionTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Position/",
												"pFileName": "Position.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfPositionAccountFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionAccountFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionAccountFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionAccountUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPositionAccountFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionAccount/",
												"pFileName": "PositionAccount.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPositionAccountTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPositionAccountUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionAccount/",
												"pFileName": "PositionAccount.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionAccount/",
												"pFileName": "PositionAccount.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePositionAccount",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPositionAccountTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionAccount/",
												"pFileName": "PositionAccount.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfPositionEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPositionEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionEmployee/",
												"pFileName": "PositionEmployee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPositionEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPositionEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionEmployee/",
												"pFileName": "PositionEmployee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionEmployee/",
												"pFileName": "PositionEmployee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePositionEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPositionEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionEmployee/",
												"pFileName": "PositionEmployee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfPositionPortfolioFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPositionPortfolioFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPositionPortfolioFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPositionPortfolioUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPositionPortfolioFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionPortfolio/",
												"pFileName": "PositionPortfolio.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPositionPortfolioTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPositionPortfolioUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionPortfolio/",
												"pFileName": "PositionPortfolio.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionPortfolio/",
												"pFileName": "PositionPortfolio.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePositionPortfolio",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPositionPortfolioTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PositionPortfolio/",
												"pFileName": "PositionPortfolio.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfProductFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterProductFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterProductFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataProductUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterProductFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Product/",
												"pFileName": "Product.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataProductTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataProductUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Product/",
												"pFileName": "Product.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Product/",
												"pFileName": "Product.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileProduct",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataProductTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Product/",
												"pFileName": "Product.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfProductPriceStructFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterProductPriceStructFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterProductPriceStructFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataProductPriceStructUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterProductPriceStructFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/ProductPriceStruct/",
												"pFileName": "ProductPriceStruct.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataProductPriceStructTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataProductPriceStructUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/ProductPriceStruct/",
												"pFileName": "ProductPriceStruct.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/ProductPriceStruct/",
												"pFileName": "ProductPriceStruct.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileProductPriceStruct",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataProductPriceStructTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/ProductPriceStruct/",
												"pFileName": "ProductPriceStruct.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfRPMPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRPMPositionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRPMPositionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRPMPositionUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterRPMPositionFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPosition/",
												"pFileName": "RPMPosition.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataRPMPositionTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataRPMPositionUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPosition/",
												"pFileName": "RPMPosition.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPosition/",
												"pFileName": "RPMPosition.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileRPMPosition",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataRPMPositionTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPosition/",
												"pFileName": "RPMPosition.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:49:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FilterMDM_SummaryFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'MDM_Summary_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSpeakerFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Speaker_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterStrengthFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Strength_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterStrengthPackageFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'StrengthPackage_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterTherapeuticAreaFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'TherapeuticArea_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterTitleFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Title_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterWorkplaceFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'Workplace_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfMDM_SummaryFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterMDM_SummaryFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterMDM_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataMDM_SummaryUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterMDM_SummaryFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/MDM_Summary/",
												"pFileName": "MDM_Summary.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfWorkplaceFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterWorkplaceFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterWorkplaceFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataWorkplaceUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterWorkplaceFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Workplace/",
												"pFileName": "Workplace.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataWorkplaceTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataWorkplaceUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Workplace/",
												"pFileName": "Workplace.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Workplace/",
												"pFileName": "Workplace.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileWorkplace",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataWorkplaceTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Workplace/",
												"pFileName": "Workplace.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfSpeakerFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSpeakerFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSpeakerFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSpeakerUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterSpeakerFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Speaker/",
												"pFileName": "Speaker.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataSpeakerTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataSpeakerUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Speaker/",
												"pFileName": "Speaker.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Speaker/",
												"pFileName": "Speaker.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileSpeaker",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataSpeakerTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Speaker/",
												"pFileName": "Speaker.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfStrengthFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterStrengthFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterStrengthFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataStrengthUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterStrengthFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Strength/",
												"pFileName": "Strength.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataStrengthTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataStrengthUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Strength/",
												"pFileName": "Strength.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Strength/",
												"pFileName": "Strength.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileStrength",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataStrengthTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Strength/",
												"pFileName": "Strength.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfStrengthPackageFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterStrengthPackageFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterStrengthPackageFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataStrengthPackageUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterStrengthPackageFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/StrengthPackage/",
												"pFileName": "StrengthPackage.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataStrengthPackageTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataStrengthPackageUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/StrengthPackage/",
												"pFileName": "StrengthPackage.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/StrengthPackage/",
												"pFileName": "StrengthPackage.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileStrengthPackage",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataStrengthPackageTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/StrengthPackage/",
												"pFileName": "StrengthPackage.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfTherapeuticAreaFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterTherapeuticAreaFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterTherapeuticAreaFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTherapeuticAreaUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterTherapeuticAreaFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/TherapeuticArea/",
												"pFileName": "TherapeuticArea.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataTherapeuticAreaTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataTherapeuticAreaUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/TherapeuticArea/",
												"pFileName": "TherapeuticArea.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/TherapeuticArea/",
												"pFileName": "TherapeuticArea.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileTherapeuticArea",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataTherapeuticAreaTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/TherapeuticArea/",
												"pFileName": "TherapeuticArea.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "IfTitleFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterTitleFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterTitleFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataTitleUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterTitleFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Title/",
												"pFileName": "Title.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataTitleTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataTitleUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Title/",
												"pFileName": "Title.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Title/",
												"pFileName": "Title.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileTitle",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataTitleTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/Title/",
												"pFileName": "Title.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:50:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_Input_To_Format6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetInputMDMZipFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/MDM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterHOKAPositionFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'HOKAPosition_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHOKAPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterHOKAPositionFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterHOKAPositionFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataHOKAPositionUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterHOKAPositionFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPosition/",
												"pFileName": "HOKAPosition.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataHOKAPositionTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPosition/",
												"pFileName": "HOKAPosition.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPosition/",
												"pFileName": "HOKAPosition.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileHOKAPosition",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataHOKAPositionTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/HOKAPosition/",
												"pFileName": "HOKAPosition.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterKAPositionEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'KAPositionEmployee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfKAPositionEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAPositionEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAPositionEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAPositionEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterKAPositionEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionEmployee/",
												"pFileName": "KAPositionEmployee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataKAPositionEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionEmployee/",
												"pFileName": "KAPositionEmployee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionEmployee/",
												"pFileName": "KAPositionEmployee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileKAPositionEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataKAPositionEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/KAPositionEmployee/",
												"pFileName": "KAPositionEmployee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterPortfolioStrengthFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'PortfolioStrength_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfPortfolioStrengthFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPortfolioStrengthFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPortfolioStrengthFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPortfolioStrengthUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterPortfolioStrengthFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PortfolioStrength/",
												"pFileName": "PortfolioStrength.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataPortfolioStrengthTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataPortfolioStrengthUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PortfolioStrength/",
												"pFileName": "PortfolioStrength.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PortfolioStrength/",
												"pFileName": "PortfolioStrength.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFilePortfolioStrength",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataPortfolioStrengthTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/PortfolioStrength/",
												"pFileName": "PortfolioStrength.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterRPMPositionEmployeeFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputMDMZipFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputMDMZipFile').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'RPMPositionEmployee_')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRPMPositionEmployeeFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRPMPositionEmployeeFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRPMPositionEmployeeFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRPMPositionEmployeeUnZip",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_File_Zip",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/MDM/",
												"pFileName": {
													"value": "@activity('FilterRPMPositionEmployeeFile').output.Value[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPositionEmployee/",
												"pFileName": "RPMPositionEmployee.txt"
											}
										}
									]
								},
								{
									"name": "CopyDataRPMPositionEmployeeTxtToParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyDataRPMPositionEmployeeUnZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPositionEmployee/",
												"pFileName": "RPMPositionEmployee.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPositionEmployee/",
												"pFileName": "RPMPositionEmployee.parquet"
											}
										}
									]
								},
								{
									"name": "DeleteFormatMDMUnZipFileRPMPositionEmployee",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataRPMPositionEmployeeTxtToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/MDM/RPMPositionEmployee/",
												"pFileName": "RPMPositionEmployee.txt"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_Input_To_Format/DeleteFormatMDMZipFile"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "Input/MDM"
					},
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "Format/MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:50:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UntilMDMFileExists",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterMDM_SummaryFile').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_MDM_File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "MDM2DataLake/"
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "IfMDMFileExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterMDM_SummaryFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greaterOrEquals(activity('FilterMDM_SummaryFile').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataBackupInputMDM",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MDM/"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@concat(\n'Backup/Input/MDM/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "DeleteInputMDMZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataBackupInputMDM",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MDM/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_SFTP_To_Input/DeleteInputMDMZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											},
											{
												"name": "CopyDataSftpToInput",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "DeleteInputMDMZip",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"maxConcurrentConnections": 5,
															"recursive": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFloder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/MDM"
														}
													}
												]
											},
											{
												"name": "DeleteSftpMDMZip",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataSftpToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "MDM2DataLake/"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/MDM/PL_DATA_MDM_SFTP_To_Input/DeleteSftpMDMZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "FilterMDM_SummaryFile",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_MDM_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_MDM_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@startswith(item().name,'MDM_Summary_')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFloder": {
						"type": "string",
						"defaultValue": "MDM2DataLake/"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:44:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_MDM_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineSFTP2Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFloder": "MDM2DataLake/"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSFTP2Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format5",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "ExecutePipelineFormat2Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_MDM_Format_To_Stg",
								"pActivity": "CopyDataMDMFmt2Stg"
							}
						}
					},
					{
						"name": "ExecutePipelineInput2Format6",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineInput2Format5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_Input_To_Format6",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pInputFolderName": "Input/MDM",
								"pFormatFolderName": "Format/MDM"
							}
						}
					},
					{
						"name": "QueryMDMSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ExecutePipelineFormat2Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfMDMSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryMDMSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryMDMSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "MDM Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "MDM File row count not matched with summary",
										"errorCode": "ERROR0003"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_MDM_Stg_To_Itg",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_TRAN_SPRC_MDM_Stg_To_Itg",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "MDM"
					}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:53:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format3')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format4')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format5')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_Input_To_Format6')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_MDM_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Manual_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataKAHospitalVPSMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_ka_hospital_vps_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/KAHospitalVPSMapping",
									"pFileName": "KAHospitalVPSMapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_ka_hospital_vps_mapping"
								}
							}
						]
					},
					{
						"name": "CopyDataFullYearTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_full_year_target ",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/FullYearTarget",
									"pFileName": "FullYearTarget.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_full_year_target"
								}
							}
						]
					},
					{
						"name": "CopyDataKAHospitalAccessTargetParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_ka_hospital_access_target",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/KAHospitalAccessTarget",
									"pFileName": "KAHospitalAccessTarget.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_ka_hospital_access_target"
								}
							}
						]
					},
					{
						"name": "CopyDataKAHospitalAccessParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_ka_hospital_access",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/KAHospitalAccess",
									"pFileName": "KAHospitalAccess.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_ka_hospital_access"
								}
							}
						]
					},
					{
						"name": "CopyDataVPSHospitalPotentialParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_vps_hospital_potential",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/VPSHospitalPotential",
									"pFileName": "VPSHospitalPotential.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_vps_hospital_potential"
								}
							}
						]
					},
					{
						"name": "CopyDataSmallChainstoreParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_small_chainstore",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/SmallChainstore",
									"pFileName": "SmallChainstore.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_small_chainstore"
								}
							}
						]
					},
					{
						"name": "CopyDataPermissionByPersonParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_permission_by_person",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/PermissionByPerson",
									"pFileName": "PermissionByPerson.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_permission_by_person"
								}
							}
						]
					},
					{
						"name": "CopyDataPermissionByPositionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_permission_by_position",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/PermissionByPosition",
									"pFileName": "PermissionByPosition.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_permission_by_position"
								}
							}
						]
					},
					{
						"name": "HistoryMaxSalesParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_history_max_sales",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/HistoryMaxSales",
									"pFileName": "HistoryMaxSales.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_history_max_sales"
								}
							}
						]
					},
					{
						"name": "KAHospitalVPSFillInMappingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_manual_ka_hospital_vps_fill_in_mapping",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/KAHospitalVPSFillInMapping",
									"pFileName": "KAHospitalVPSFillInMapping.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_manual_ka_hospital_vps_fill_in_mapping"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_Manual_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataManualFmt2Stg"
					}
				},
				"folder": {
					"name": "Manual"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:18:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Manual_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnzipFormatManual",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterManualFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/Manual/",
									"pFileName": {
										"value": "@activity('FilterManualFile').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/Unzip/"
								}
							}
						]
					},
					{
						"name": "FilterManualFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputManualFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputManualFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Manual')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputManualFloder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/Manual/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterKAHospitalVPSMapping",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'KA医院的分型Mapping')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetFormatManualUnzipFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatManual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Csv_Folder_Comma",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/Unzip/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FilterFullYearTarget",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'全年指标线下表')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteFormatManualUnzipFloder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "IfKAHospitalVPSMappingFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfFullYearTargetFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfKAHospitalAccessTargetFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfKAHospitalCountFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfVPSHospitalPotentialFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfSmallChainstoreFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfPermissionByPersonFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfPermissionByPositionFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfHistoryMaxSalesFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "IfKAHospitalVPSMappingFileExists1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/Manual/Unzip"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": "china-commercial/Backup/Log/DCS/PL_DATA_Manual_Input_To_Format/DeleteFormatManualFolder"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterKAHospitalAccessTarget",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'KA医院准入目标')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfKAHospitalAccessTargetFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAHospitalAccessTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAHospitalAccessTarget').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAHospitalAccessTargetXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "对应销售分中国"
													},
													"sink": {
														"name": "su"
													}
												},
												{
													"source": {
														"name": "KA大区"
													},
													"sink": {
														"name": "ka_region"
													}
												},
												{
													"source": {
														"name": "RKA"
													},
													"sink": {
														"name": "rka"
													}
												},
												{
													"source": {
														"name": "KA"
													},
													"sink": {
														"name": "ka"
													}
												},
												{
													"source": {
														"name": "医院代码"
													},
													"sink": {
														"name": "hospital_code"
													}
												},
												{
													"source": {
														"name": "医院名称"
													},
													"sink": {
														"name": "hospital_name"
													}
												},
												{
													"source": {
														"name": "省份"
													},
													"sink": {
														"name": "province"
													}
												},
												{
													"source": {
														"name": "城市"
													},
													"sink": {
														"name": "city"
													}
												},
												{
													"source": {
														"name": "产品代码"
													},
													"sink": {
														"name": "product_code"
													}
												},
												{
													"source": {
														"name": "产品名称"
													},
													"sink": {
														"name": "product_name"
													}
												},
												{
													"source": {
														"name": "是否准入"
													},
													"sink": {
														"name": "is_access"
													}
												},
												{
													"source": {
														"name": "备注"
													},
													"sink": {
														"name": "comment"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterKAHospitalAccessTarget').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/KAHospitalAccessTarget",
												"pFileName": "KAHospitalAccessTarget.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfKAHospitalVPSMappingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAHospitalVPSMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAHospitalVPSMapping').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAhospitalMappingXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "BrandCode"
													},
													"sink": {
														"name": "ProductCode"
													}
												},
												{
													"source": {
														"name": "AccountCode"
													},
													"sink": {
														"name": "AccountCode"
													}
												},
												{
													"source": {
														"name": "BrandName"
													},
													"sink": {
														"name": "ProductName"
													}
												},
												{
													"source": {
														"name": "月度保存率Base"
													},
													"sink": {
														"name": "MonthlyRetentionRate"
													}
												},
												{
													"source": {
														"name": "医院VPS 分型"
													},
													"sink": {
														"name": "VPSClassification"
													}
												},
												{
													"source": {
														"name": "vbp中标产品承诺量"
													},
													"sink": {
														"name": "VBPWinnerTarget"
													}
												},
												{
													"source": {
														"name": "vbp中标产品使用进度"
													},
													"sink": {
														"name": "VBPWinnerUsage"
													}
												},
												{
													"source": {
														"name": "未中选产品使用比例打分"
													},
													"sink": {
														"name": "VBPLoserUseRatioScore"
													}
												},
												{
													"source": {
														"name": "中选产品指标分解打分"
													},
													"sink": {
														"name": "VBPWinnerIndexDecompositionScore"
													}
												},
												{
													"source": {
														"name": "同品类管控打分"
													},
													"sink": {
														"name": "CategoryControlScore"
													}
												},
												{
													"source": {
														"name": "监测跟新措施"
													},
													"sink": {
														"name": "MonitorUpdateMeasureScore"
													}
												},
												{
													"source": {
														"name": "可定使用情况"
													},
													"sink": {
														"name": "CrestorUseCondition"
													}
												},
												{
													"source": {
														"name": "Quarter"
													},
													"sink": {
														"name": "Quarter"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterKAHospitalVPSMapping').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/KAHospitalVPSMapping",
												"pFileName": "KAHospitalVPSMapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfFullYearTargetFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterFullYearTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterFullYearTarget').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataFullYearTargetXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "BU"
													},
													"sink": {
														"name": "BU"
													}
												},
												{
													"source": {
														"name": "Year"
													},
													"sink": {
														"name": "Year"
													}
												},
												{
													"source": {
														"name": "产品"
													},
													"sink": {
														"name": "BrandName"
													}
												},
												{
													"source": {
														"name": "FY Target"
													},
													"sink": {
														"name": "FYTarget"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterFullYearTarget').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/FullYearTarget/",
												"pFileName": "FullYearTarget.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterKAHospitalAccess",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'KA准入统计')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterVPSHospitalPotential",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'VPS医院潜力确认')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterSmallChainstore",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'不可拆分小连锁拆分数据')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfKAHospitalCountFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAHospitalAccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAHospitalAccess').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataKAHospitalAccessXlsxToParquet_copy1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ID"
													},
													"sink": {
														"name": "ID"
													}
												},
												{
													"source": {
														"name": "开始时间"
													},
													"sink": {
														"name": "start_date"
													}
												},
												{
													"source": {
														"name": "完成时间"
													},
													"sink": {
														"name": "complete_date"
													}
												},
												{
													"source": {
														"name": "电子邮件"
													},
													"sink": {
														"name": "email"
													}
												},
												{
													"source": {
														"name": "名称"
													},
													"sink": {
														"name": "employee_name"
													}
												},
												{
													"source": {
														"name": "医院编码"
													},
													"sink": {
														"name": "hospital_code"
													}
												},
												{
													"source": {
														"name": "医院名称"
													},
													"sink": {
														"name": "hospital_name"
													}
												},
												{
													"source": {
														"name": "产品"
													},
													"sink": {
														"name": "product"
													}
												},
												{
													"source": {
														"name": "品规"
													},
													"sink": {
														"name": "package"
													}
												},
												{
													"source": {
														"name": "准入日期"
													},
													"sink": {
														"name": "access_date"
													}
												},
												{
													"source": {
														"name": "RKA+RM批准邮件"
													},
													"sink": {
														"name": "rka_rm_approve_email"
													}
												},
												{
													"source": {
														"name": "问题2"
													},
													"sink": {
														"name": "question2"
													}
												},
												{
													"source": {
														"name": "RKA+RM批准邮件2"
													},
													"sink": {
														"name": "rka_rm_approve_email2"
													}
												},
												{
													"source": {
														"name": "大区"
													},
													"sink": {
														"name": "region"
													}
												},
												{
													"source": {
														"name": "KAM/KAS姓名"
													},
													"sink": {
														"name": "kam_kas_name"
													}
												},
												{
													"source": {
														"name": "品规编码"
													},
													"sink": {
														"name": "package_code"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterKAHospitalAccess').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/KAHospitalAccess",
												"pFileName": "KAHospitalAccess.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfVPSHospitalPotentialFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterVPSHospitalPotential",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterVPSHospitalPotential').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataVPSHospitalPotentialXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "年份"
													},
													"sink": {
														"name": "year"
													}
												},
												{
													"source": {
														"name": "医院编码"
													},
													"sink": {
														"name": "hospital_code"
													}
												},
												{
													"source": {
														"name": "医院名称"
													},
													"sink": {
														"name": "hospital_name"
													}
												},
												{
													"source": {
														"name": "所在省"
													},
													"sink": {
														"name": "province"
													}
												},
												{
													"source": {
														"name": "所在城市"
													},
													"sink": {
														"name": "city"
													}
												},
												{
													"source": {
														"name": "产品编码"
													},
													"sink": {
														"name": "product_code"
													}
												},
												{
													"source": {
														"name": "产品"
													},
													"sink": {
														"name": "product_name"
													}
												},
												{
													"source": {
														"name": "潜力数据"
													},
													"sink": {
														"name": "potential_number"
													}
												},
												{
													"source": {
														"name": "贡献%"
													},
													"sink": {
														"name": "contribution"
													}
												},
												{
													"source": {
														"name": "潜力性质"
													},
													"sink": {
														"name": "potential_type"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/Unzip/",
												"pFileName": "@activity('FilterVPSHospitalPotential').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/VPSHospitalPotential",
												"pFileName": "VPSHospitalPotential.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfSmallChainstoreFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterSmallChainstore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterSmallChainstore').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataSmallChainstoreXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "版本编码"
													},
													"sink": {
														"name": "Quarter"
													}
												},
												{
													"source": {
														"name": "Region"
													},
													"sink": {
														"name": "Region"
													}
												},
												{
													"source": {
														"name": "零售连锁总店编码"
													},
													"sink": {
														"name": "ChainstoreCode"
													}
												},
												{
													"source": {
														"name": "零售连锁总店名称"
													},
													"sink": {
														"name": "ChainstoreName"
													}
												},
												{
													"source": {
														"name": "零售连锁分店编码"
													},
													"sink": {
														"name": "DrugstoreCode"
													}
												},
												{
													"source": {
														"name": "零售连锁分店名称"
													},
													"sink": {
														"name": "DrugstoreName"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterSmallChainstore').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/SmallChainstore",
												"pFileName": "SmallChainstore.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterPermissionByPerson",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'manual_permission_by_person')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfPermissionByPersonFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPermissionByPerson",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPermissionByPerson').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPermissionByPersonXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "UserCode",
														"type": "String"
													},
													"sink": {
														"name": "UserCode"
													}
												},
												{
													"source": {
														"name": "PermissionLevel",
														"type": "String"
													},
													"sink": {
														"name": "PermissionLevel"
													}
												},
												{
													"source": {
														"name": "PositionCode",
														"type": "String"
													},
													"sink": {
														"name": "PositionCode"
													}
												},
												{
													"source": {
														"name": "ProductCode",
														"type": "String"
													},
													"sink": {
														"name": "ProductCode"
													}
												},
												{
													"source": {
														"name": "Record",
														"type": "String"
													},
													"sink": {
														"name": "Record"
													}
												},
												{
													"source": {
														"name": "System",
														"type": "String"
													},
													"sink": {
														"name": "System"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterPermissionByPerson').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/PermissionByPerson",
												"pFileName": "PermissionByPerson.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterPermissionByPosition",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'manual_permission_by_position')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfPermissionByPositionFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterPermissionByPosition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterPermissionByPosition').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataPermissionByPositionXlsxToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Level",
														"type": "String"
													},
													"sink": {
														"name": "Level"
													}
												},
												{
													"source": {
														"name": "SDCode",
														"type": "String"
													},
													"sink": {
														"name": "SDCode"
													}
												},
												{
													"source": {
														"name": "BDCode",
														"type": "String"
													},
													"sink": {
														"name": "BDCode"
													}
												},
												{
													"source": {
														"name": "Company",
														"type": "String"
													},
													"sink": {
														"name": "Company"
													}
												},
												{
													"source": {
														"name": "PermissionLevel",
														"type": "String"
													},
													"sink": {
														"name": "PermissionLevel"
													}
												},
												{
													"source": {
														"name": "System",
														"type": "String"
													},
													"sink": {
														"name": "System"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": {
													"value": "@activity('FilterPermissionByPosition').output.Value[0].name",
													"type": "Expression"
												},
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/PermissionByPosition",
												"pFileName": "PermissionByPosition.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterKAHospitalVPSMapping1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'医院VPS填写')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfKAHospitalVPSMappingFileExists1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterKAHospitalVPSMapping1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterKAHospitalVPSMapping1').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "italMappingXlsxToParquet_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mth",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MTH",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sg_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SGCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sg_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SGName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sg_staff_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SGStaffID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "sg_staff_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SGStaffName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "rm_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "RmCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "rm_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "RmName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "rm_staff_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "RmStaffID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "rm_staff_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "RmStaffName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dm_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DmCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dm_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DmName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dm_staff_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DmStaffID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dm_staff_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DmStaffName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mics_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MicsCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mics_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MicsName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mics_staff_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MicsStaffID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "mics_staff_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "MicsStaffName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_line",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductLine",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "InstitutionID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "KA新大区",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "KARegionN",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "KA旧大区",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "KARegionO",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "KA名字",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "KAName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "InstitutionCode",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "institution_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "InstitutionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "answer_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AnswerID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "product_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "survey_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SurveyName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "question_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "QuestionName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "answer_value",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AnswerValue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "last_modify_date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "LastModifyDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "is_confirmed",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IsConfirmed",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "confirmed_date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ConfirmedDate",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "confirmed_territory_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ConfirmedTerritoryID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "confirmed_staff_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ConfirmedStaffID",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "confirmed_staff_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ConfirmedStaffName",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "update_stamp",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "UpdateStamp",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Quarter",
														"type": "String"
													},
													"sink": {
														"name": "Quarter"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": "@activity('FilterKAHospitalVPSMapping1').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/KAHospitalVPSFillInMapping",
												"pFileName": "KAHospitalVPSFillInMapping.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "HistoryMaxSales",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatManualUnzipFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatManualUnzipFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'历史最高季度销量')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfHistoryMaxSalesFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "HistoryMaxSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('HistoryMaxSales').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "HistoryMaxSalesParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Account Code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AccountCD",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Brand",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Product",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Max季度销量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesQuantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Max季度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Quantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "月度保存率Base",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "PreservationRate",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Excel_File",
											"type": "DatasetReference",
											"parameters": {
												"pPathName": "Format/Manual/Unzip/",
												"pFileName": "@activity('HistoryMaxSales').output.Value[0].name",
												"pSheetName": "Sheet1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/Manual/HistoryMaxSales",
												"pFileName": "HistoryMaxSales.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Manual"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:18:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder_Zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_Folder_Comma')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Excel_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Manual_SFTP_To_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSFTP_Manual_File",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_SFTP_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pFolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IfManualFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterManual_FileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterManual_FileExists').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait5Minutes",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CopyDataBackupInputManual",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/Manual/"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat(\n'Backup/Input/Manual/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteInputManualZip",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataBackupInputManual",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/Manual/"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/Manual/PL_DATA_Manual_SFTP_To_Input/DeleteInputManualZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "CopyDataManualSftpToInput",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DeleteInputManualZip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/Manual"
											}
										}
									]
								},
								{
									"name": "DeleteSftpManualZip",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataManualSftpToInput",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/Manual/PL_DATA_Manual_SFTP_To_Input/DeleteSftpManualZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterManual_FileExists",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetSFTP_Manual_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSFTP_Manual_File').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'Manual.zip')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "DataLake/Interface/Inbound/Manual/"
					}
				},
				"folder": {
					"name": "Manual"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:17:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Manual_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_Manual_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Manual_SFTP_To_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_Manual_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_Manual_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Manual_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_Manual_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_Manual_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Manual_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_Manual_Format_To_Stg",
								"pActivity": "CopyDataManualFmt2Stg"
							}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_Manual_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_Manual_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_Manual_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Manual"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:20:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Manual_SFTP_To_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Manual_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Manual_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_Manual_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_RCRM_Format_To_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydatadisplay_collectionParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_display_collection",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "account_code"
										},
										"sink": {
											"name": "account_code"
										}
									},
									{
										"source": {
											"name": "account_name"
										},
										"sink": {
											"name": "account_name"
										}
									},
									{
										"source": {
											"name": "position_code"
										},
										"sink": {
											"name": "position_code"
										}
									},
									{
										"source": {
											"name": "position_name"
										},
										"sink": {
											"name": "position_name"
										}
									},
									{
										"source": {
											"name": "employee_code"
										},
										"sink": {
											"name": "employee_code"
										}
									},
									{
										"source": {
											"name": "employee_name"
										},
										"sink": {
											"name": "employee_name"
										}
									},
									{
										"source": {
											"name": "product_family"
										},
										"sink": {
											"name": "product_family"
										}
									},
									{
										"source": {
											"name": "package_code"
										},
										"sink": {
											"name": "package_code"
										}
									},
									{
										"source": {
											"name": "package_name"
										},
										"sink": {
											"name": "package_name"
										}
									},
									{
										"source": {
											"name": "display_shelves"
										},
										"sink": {
											"name": "display_shelves"
										}
									},
									{
										"source": {
											"name": "display_side"
										},
										"sink": {
											"name": "display_side"
										}
									},
									{
										"source": {
											"name": "price"
										},
										"sink": {
											"name": "price"
										}
									},
									{
										"source": {
											"name": "create_time"
										},
										"sink": {
											"name": "create_time"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_product_collection",
									"pFileName": "rcrm_product_collection.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_display_collection"
								}
							}
						]
					},
					{
						"name": "Copydatarcrm_visitParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_visit",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"name": "account_code"
										},
										"sink": {
											"name": "account_code"
										}
									},
									{
										"source": {
											"name": "account_name"
										},
										"sink": {
											"name": "account_name"
										}
									},
									{
										"source": {
											"name": "position_code"
										},
										"sink": {
											"name": "position_code"
										}
									},
									{
										"source": {
											"name": "position_name"
										},
										"sink": {
											"name": "position_name"
										}
									},
									{
										"source": {
											"name": "employee_code"
										},
										"sink": {
											"name": "employee_code"
										}
									},
									{
										"source": {
											"name": "employee_name"
										},
										"sink": {
											"name": "employee_name"
										}
									},
									{
										"source": {
											"name": "visit_type"
										},
										"sink": {
											"name": "visit_type"
										}
									},
									{
										"source": {
											"name": "route_name"
										},
										"sink": {
											"name": "route_name"
										}
									},
									{
										"source": {
											"name": "visit_date"
										},
										"sink": {
											"name": "visit_date"
										}
									},
									{
										"source": {
											"name": "check_in_time"
										},
										"sink": {
											"name": "check_in_time"
										}
									},
									{
										"source": {
											"name": "check_out_time"
										},
										"sink": {
											"name": "check_out_time"
										}
									},
									{
										"source": {
											"name": "in_store_time"
										},
										"sink": {
											"name": "in_store_time"
										}
									},
									{
										"source": {
											"name": "travel_time"
										},
										"sink": {
											"name": "travel_time"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "longitude"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "latitude"
										}
									},
									{
										"source": {
											"name": "deviation"
										},
										"sink": {
											"name": "deviation"
										}
									},
									{
										"source": {
											"name": "reason_deviation"
										},
										"sink": {
											"name": "reason_deviation"
										}
									},
									{
										"source": {
											"name": "statue"
										},
										"sink": {
											"name": "statue"
										}
									},
									{
										"source": {
											"name": "next_reminder"
										},
										"sink": {
											"name": "next_reminder"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_visit",
									"pFileName": "rcrm_visit.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_visit"
								}
							}
						]
					},
					{
						"name": "Copydatarcrm_meetingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_meeting",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "meeting_id"
										},
										"sink": {
											"name": "meeting_id"
										}
									},
									{
										"source": {
											"name": "meeting_code"
										},
										"sink": {
											"name": "meeting_code"
										}
									},
									{
										"source": {
											"name": "drugstore_code"
										},
										"sink": {
											"name": "drugstore_code"
										}
									},
									{
										"source": {
											"name": "drugstore_name"
										},
										"sink": {
											"name": "drugstore_name"
										}
									},
									{
										"source": {
											"name": "meeting_name"
										},
										"sink": {
											"name": "meeting_name"
										}
									},
									{
										"source": {
											"name": "start_time"
										},
										"sink": {
											"name": "start_time"
										}
									},
									{
										"source": {
											"name": "end_time"
										},
										"sink": {
											"name": "end_time"
										}
									},
									{
										"source": {
											"name": "planned_number"
										},
										"sink": {
											"name": "planned_number"
										}
									},
									{
										"source": {
											"name": "actual_number"
										},
										"sink": {
											"name": "actual_number"
										}
									},
									{
										"source": {
											"name": "apply_employee_name"
										},
										"sink": {
											"name": "apply_employee_name"
										}
									},
									{
										"source": {
											"name": "apply_employee_code"
										},
										"sink": {
											"name": "apply_employee_code"
										}
									},
									{
										"source": {
											"name": "product_name"
										},
										"sink": {
											"name": "product_name"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "status"
										}
									},
									{
										"source": {
											"name": "create_time"
										},
										"sink": {
											"name": "create_time"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_meeting",
									"pFileName": "rcrm_meeting.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_meeting"
								}
							}
						]
					},
					{
						"name": "Copydatarcrm_coachingParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_coaching",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"name": "visit_id"
										},
										"sink": {
											"name": "visit_id"
										}
									},
									{
										"source": {
											"name": "account_code"
										},
										"sink": {
											"name": "account_code"
										}
									},
									{
										"source": {
											"name": "account_name"
										},
										"sink": {
											"name": "account_name"
										}
									},
									{
										"source": {
											"name": "parent_position_code"
										},
										"sink": {
											"name": "parent_position_code"
										}
									},
									{
										"source": {
											"name": "parent_position_name"
										},
										"sink": {
											"name": "parent_position_name"
										}
									},
									{
										"source": {
											"name": "parent_employee_name"
										},
										"sink": {
											"name": "parent_employee_name"
										}
									},
									{
										"source": {
											"name": "parent_employee_code"
										},
										"sink": {
											"name": "parent_employee_code"
										}
									},
									{
										"source": {
											"name": "position_code"
										},
										"sink": {
											"name": "position_code"
										}
									},
									{
										"source": {
											"name": "position_name"
										},
										"sink": {
											"name": "position_name"
										}
									},
									{
										"source": {
											"name": "employee_code"
										},
										"sink": {
											"name": "employee_code"
										}
									},
									{
										"source": {
											"name": "employee_name"
										},
										"sink": {
											"name": "employee_name"
										}
									},
									{
										"source": {
											"name": "visit_date"
										},
										"sink": {
											"name": "visit_date"
										}
									},
									{
										"source": {
											"name": "check_in_time"
										},
										"sink": {
											"name": "check_in_time"
										}
									},
									{
										"source": {
											"name": "check_out_time"
										},
										"sink": {
											"name": "check_out_time"
										}
									},
									{
										"source": {
											"name": "in_store_time"
										},
										"sink": {
											"name": "in_store_time"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "longitude"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "latitude"
										}
									},
									{
										"source": {
											"name": "deviation"
										},
										"sink": {
											"name": "deviation"
										}
									},
									{
										"source": {
											"name": "statue"
										},
										"sink": {
											"name": "statue"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_coaching",
									"pFileName": "rcrm_coaching.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_coaching"
								}
							}
						]
					},
					{
						"name": "Copydatarcrm_auxiliary_displayParquetToStg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_auxiliary_display",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity"
										}
									},
									{
										"source": {
											"name": "district_code"
										},
										"sink": {
											"name": "district_code"
										}
									},
									{
										"source": {
											"name": "district_name"
										},
										"sink": {
											"name": "district_name"
										}
									},
									{
										"source": {
											"name": "position_code"
										},
										"sink": {
											"name": "position_code"
										}
									},
									{
										"source": {
											"name": "position_name"
										},
										"sink": {
											"name": "position_name"
										}
									},
									{
										"source": {
											"name": "employee_code"
										},
										"sink": {
											"name": "employee_code"
										}
									},
									{
										"source": {
											"name": "employee_name"
										},
										"sink": {
											"name": "employee_name"
										}
									},
									{
										"source": {
											"name": "account_code"
										},
										"sink": {
											"name": "account_code"
										}
									},
									{
										"source": {
											"name": "account_name"
										},
										"sink": {
											"name": "account_name"
										}
									},
									{
										"source": {
											"name": "display_code"
										},
										"sink": {
											"name": "display_code"
										}
									},
									{
										"source": {
											"name": "display_name"
										},
										"sink": {
											"name": "display_name"
										}
									},
									{
										"source": {
											"name": "quantity"
										},
										"sink": {
											"name": "quantity"
										}
									},
									{
										"source": {
											"name": "create_time"
										},
										"sink": {
											"name": "create_time"
										}
									},
									{
										"source": {
											"name": "parent_account_code"
										},
										"sink": {
											"name": "parent_account_code"
										}
									},
									{
										"source": {
											"name": "parent_account_name"
										},
										"sink": {
											"name": "parent_account_name"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_auxiliar_display",
									"pFileName": "rcrm_auxiliar_display.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_auxiliary_display"
								}
							}
						]
					},
					{
						"name": "Exec_sp_Check_RCRM_stg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copydatadisplay_collectionParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatarcrm_visitParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatarcrm_meetingParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatarcrm_coachingParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatarcrm_auxiliary_displayParquetToStg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copydatarcrm_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[sp_check_RCRM_stg_summary]",
							"storedProcedureParameters": {
								"ModuleName": {
									"value": "RCRM",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copydatarcrm_summary",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SysCreatedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "SysModifiedDate",
										"value": {
											"value": "@addhours(utcnow(),+8)",
											"type": "Expression"
										}
									},
									{
										"name": "Pipeline",
										"value": {
											"value": "@pipeline().parameters.pPipelineName",
											"type": "Expression"
										}
									},
									{
										"name": "Activity",
										"value": {
											"value": "@pipeline().parameters.pActivity",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table stg.stg_rcrm_summary",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SysCreatedDate"
										},
										"sink": {
											"name": "SysCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SysModifiedDate"
										},
										"sink": {
											"name": "SysModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Pipeline"
										},
										"sink": {
											"name": "Pipeline",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Activity"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "File_Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "file_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COUNT",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Parquet_File",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/rcrm_summary",
									"pFileName": "rcrm_summary.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_rcrm_summary"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_RCRM_Format_To_Stg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "CopyDataRCRMFmt2Stg"
					}
				},
				"folder": {
					"name": "RCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:00:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_RCRM_Input_To_Format')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFormatRCRMInputFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "UnzipFormatRCRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/Unzip1/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterRCRMproduct_collection",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'产品采集')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMproduct_collectionExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMproduct_collection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMproduct_collection').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataproduct_collectionCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "客户代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "客户名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工编号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工姓名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品系列",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_family",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "package_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "产品名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "package_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "陈列货架",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "display_shelves",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "陈列面",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "display_side",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "单价",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "price",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "创建时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "create_time",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMproduct_collection').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_product_collection",
												"pFileName": "rcrm_product_collection.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterRCRMmeeting",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'会议记录')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMmeetingFileExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMmeeting",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMmeeting').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRCRMmeetingCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "会议编码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "meeting_id",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "会议号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "meeting_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "药店编码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "drugstore_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "药店名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "drugstore_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "会议名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "meeting_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "会议开始时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "start_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "会议结束时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "end_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "计划参会人数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "planned_number",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "实际参会人数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "actual_number",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "申请名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "apply_employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "申请员工号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "apply_employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "会议产品名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "product_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "执行状态",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "status",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "创建时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "create_time",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMmeeting').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_meeting",
												"pFileName": "rcrm_meeting.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterRCRMvisit",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'拜访记录')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMvisitExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMvisit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMvisit').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRCRMvisitCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "拜访ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "id",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "客户代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "客户名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工编号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工姓名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "拜访类型",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "visit_type",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "路线名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "route_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "拜访日期",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "visit_date",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "签到时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "check_in_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "离店时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "check_out_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "在店时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "in_store_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "路途时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "travel_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "经度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "longitude",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "纬度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "latitude",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "偏差",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "deviation",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "偏差原因",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "reason_deviation",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "状态",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "statue",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "下次提醒",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "next_reminder",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMvisit').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_visit",
												"pFileName": "rcrm_visit.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterRCRMcoaching",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'随访记录')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMcoachingExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMcoaching",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMcoaching').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataCRMcoachingCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "随访ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "id",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "拜访ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "visit_id",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "客户代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "客户名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "主管岗位代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_position_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "主管岗位名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_position_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "主管用户姓名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "主管用户代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工岗位代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工岗位名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工编号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工姓名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "随访日期",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "visit_date",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "签到时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "check_in_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "离店时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "check_out_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "在店时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "in_store_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "签到经度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "longitude",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "签到纬度",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "latitude",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "偏差",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "deviation",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "状态",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "statue",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMcoaching').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_coaching",
												"pFileName": "rcrm_coaching.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterRCRMauxiliar_display",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'辅助陈列记录')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMauxiliar_displayExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMauxiliar_display",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMauxiliar_display').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRCRMauxiliar_displayCsvToParquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "地区代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "district_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "地区名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "district_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "岗位名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "position_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工编号",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "员工姓名",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "employee_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "门店代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "门店名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "account_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "辅助陈列代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "display_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "辅助陈列名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "display_name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "数量",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "quantity",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "创建时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "create_time",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "总店代码",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_account_code",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "总店名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "parent_account_name",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMauxiliar_display').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_auxiliar_display/",
												"pFileName": "rcrm_auxiliar_display.parquet"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "UnzipFormatRCRM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FilterRCRMzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_File_Zip",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/RCRM/",
									"pFileName": {
										"value": "@activity('FilterRCRMzip').output.Value[0].name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/Unzip1/"
								}
							}
						]
					},
					{
						"name": "FilterRCRMzip",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetInputRCRMFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetInputRCRMFloder').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'rcrmtodatalake')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetInputRCRMFloder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "DeleteFormatRCRMUnzip2Floder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/RCRM/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "DeleteFormatRCRMUnzip2Floder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Format/RCRM/Unzip1/"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_ChinaDataLake",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "china-commercial/Backup/Log/RCRM/PL_DATA_RCRM_Input_To_Format/DeleteFormatRCRMUnzipFolder",
									"type": "Expression"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "FilterRCRMSummary",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFormatRCRMInputFloder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFormatRCRMInputFloder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'RcrmtoDatalake_Summary')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfRCRMSummary",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FilterRCRMSummary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('FilterRCRMSummary').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataRCRMSummary",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "文件名称",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "File_Name",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "记录条数",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "COUNT",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "数据日期",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "source_date",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "生成时间",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "create_date",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Csv_File_Pipe",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/Unzip1/",
												"pFileName": "@activity('FilterRCRMSummary').output.Value[0].name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Format/RCRM/rcrm_summary/",
												"pFileName": "rcrm_summary.parquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFormatFolderName": {
						"type": "string",
						"defaultValue": "/Format/RCRM"
					},
					"pInputFolderName": {
						"type": "string",
						"defaultValue": "/Input/RCRM"
					}
				},
				"folder": {
					"name": "RCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:58:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_File_Zip')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_RCRM_SFTP_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_DATA_RCRM_SFTP_To_Input",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_RCRM_SFTP_to_Input",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pFolderName": "RCRM2DataLake/"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_RCRM_Input_To_Format",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_RCRM_SFTP_To_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_RCRM_Input_To_Format",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_RCRM_Format_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_RCRM_Input_To_Format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_RCRM_Format_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "PL_DATA_RCRM_Format_To_Stg",
								"pActivity": "CopyDataRCRMFmt2Stg"
							}
						}
					},
					{
						"name": "QueryRCRMSummaryCheckResult",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_RCRM_Format_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COUNT(*) AS cnt FROM stg.stg_master_inmarket_summary_check_result WHERE CheckedOn = (SELECT MAX(CheckedOn) FROM stg.stg_master_inmarket_summary_check_result WHERE ModuleName = ''',pipeline().parameters.pModuleName,''') AND ModuleName = ''',pipeline().parameters.pModuleName,''' AND ISNULL(TargetRowCount,0) <> ISNULL(SourceRowCount,0)')\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "stg",
									"pTableName": "stg_master_inmarket_summary_check_result"
								}
							}
						}
					},
					{
						"name": "IfFITSSummaryMatched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "QueryRCRMSummaryCheckResult",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('QueryRCRMSummaryCheckResult').output.firstrow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "RCRM Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RCRM File row count not matched with summary",
										"errorCode": "ERROR0002"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute_PL_TRAN_SPRC_RCRM_Stg_To_Itg",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_DATA_RCRM_Stg_To_Itg",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pModuleName": {
						"type": "string",
						"defaultValue": "RCRM"
					}
				},
				"folder": {
					"name": "RCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:01:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_RCRM_SFTP_to_Input')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_RCRM_Input_To_Format')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_RCRM_Format_To_Stg')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_RCRM_Stg_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_RCRM_SFTP_to_Input')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('FilterRCRMzip').output.FilteredItemsCount,1)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetSFTP_RCRM_File",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "DeleteInputRCRMfile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_SFTP_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@pipeline().parameters.pFolderName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FilterRCRMzip",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "GetSFTP_RCRM_File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('GetSFTP_RCRM_File').output.childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name,'rcrmtodatalake')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IfvisitExists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FilterRCRMzip",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('FilterRCRMzip').output.FilteredItemsCount,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait5Minute_copy2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 300
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyDataRCRMzipSFTPToInput",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "SftpReadSettings",
															"maxConcurrentConnections": 5,
															"recursive": true,
															"deleteFilesAfterCompletion": false,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterRCRMzip').output.Value[0].name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_Binary_Folder",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": "Input/RCRM"
														}
													}
												]
											},
											{
												"name": "DeleteSftpRCRMvisit",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyDataRCRMzipSFTPToInput",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_SFTP_Binary_File",
														"type": "DatasetReference",
														"parameters": {
															"pFolderName": {
																"value": "@pipeline().parameters.pFolderName",
																"type": "Expression"
															},
															"pFileName": {
																"value": "@activity('FilterRCRMzip').output.Value[0].name",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_ADLS_ChinaDataLake",
															"type": "LinkedServiceReference"
														},
														"path": "china-commercial/Backup/Log/RCRM/PL_DATA_RCRM_SFTP_To_Input/DeleteSftpRCRMZip"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "SftpReadSettings",
														"recursive": false,
														"enablePartitionDiscovery": false,
														"disableChunking": false
													}
												}
											}
										]
									}
								},
								{
									"name": "CopyDataBackupInputRCRMfile",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/RCRM/"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat(\n'Backup/Input/RCRM/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteInputRCRMfile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataBackupInputRCRMfile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_Binary_Folder",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": "Input/RCRM/"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "LS_ADLS_ChinaDataLake",
												"type": "LinkedServiceReference"
											},
											"path": "china-commercial/Backup/Log/RCRM/PL_DATA_RCRM_SFTP_To_Input/DeleteInputRCRMZip"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pFolderName": {
						"type": "string",
						"defaultValue": "RCRM2DataLake/"
					}
				},
				"folder": {
					"name": "RCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:54:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_Folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_Binary_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_RCRM_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_rcrm_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_rcrm_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pPipelineName": {
						"type": "string",
						"defaultValue": "PL_DATA_RCRM_Stg_To_itg"
					},
					"pActivity": {
						"type": "string",
						"defaultValue": "SpRCRMstg2itg"
					}
				},
				"folder": {
					"name": "RCRM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:01:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TTH_Hospital_Month')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataTTH_Hospital_Month_txt2synapse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncatetemp_fits_export_hospital_tth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TTHDate",
											"type": "String"
										},
										"sink": {
											"name": "TTHDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "YearMonth",
											"type": "String"
										},
										"sink": {
											"name": "YearMonth",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "String"
										},
										"sink": {
											"name": "Quarter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HospitalCode",
											"type": "String"
										},
										"sink": {
											"name": "HospitalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HospitalName",
											"type": "String"
										},
										"sink": {
											"name": "HospitalName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountyCity",
											"type": "String"
										},
										"sink": {
											"name": "CountyCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Province",
											"type": "String"
										},
										"sink": {
											"name": "Province",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String"
										},
										"sink": {
											"name": "AccountType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductName",
											"type": "String"
										},
										"sink": {
											"name": "ProductName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StrengthName",
											"type": "String"
										},
										"sink": {
											"name": "StrengthName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PackageCode",
											"type": "String"
										},
										"sink": {
											"name": "PackageCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package_Name_EN",
											"type": "String"
										},
										"sink": {
											"name": "Package_Name_EN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package_Name_CN",
											"type": "String"
										},
										"sink": {
											"name": "Package_Name_CN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Portfolio",
											"type": "String"
										},
										"sink": {
											"name": "Portfolio",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BGCode",
											"type": "String"
										},
										"sink": {
											"name": "BGCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SGCode",
											"type": "String"
										},
										"sink": {
											"name": "SGCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RegionCode",
											"type": "String"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RMCode",
											"type": "String"
										},
										"sink": {
											"name": "RMCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RM",
											"type": "String"
										},
										"sink": {
											"name": "RM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistrictCode",
											"type": "String"
										},
										"sink": {
											"name": "DistrictCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "District",
											"type": "String"
										},
										"sink": {
											"name": "District",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DMCode",
											"type": "String"
										},
										"sink": {
											"name": "DMCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DM",
											"type": "String"
										},
										"sink": {
											"name": "DM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Position",
											"type": "String"
										},
										"sink": {
											"name": "Position",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MICSCode",
											"type": "String"
										},
										"sink": {
											"name": "MICSCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MICS",
											"type": "String"
										},
										"sink": {
											"name": "MICS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsAffliatedDrugStore",
											"type": "String"
										},
										"sink": {
											"name": "IsAffliatedDrugStore",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "String"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "RelationTypeName",
											"type": "String"
										},
										"sink": {
											"name": "RelationTypeName"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Csv_File_Pipe",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@pipeline().parameters.pSourceFolderName",
										"type": "Expression"
									},
									"pFileName": {
										"value": "@pipeline().parameters.pFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dbo",
									"pTableName": "temp_fits_export_hospital_tth"
								}
							}
						]
					},
					{
						"name": "Truncatetemp_fits_export_hospital_tth",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncate_table]",
							"storedProcedureParameters": {
								"schema_name": {
									"value": "dbo",
									"type": "String"
								},
								"table_name": {
									"value": "temp_fits_export_hospital_tth",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pSourceFolderName": {
						"type": "string",
						"defaultValue": "test/FITS/FITSExport/csv/20220427/"
					},
					"pFileName": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1651024154272.csv"
					},
					"pFileName2": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1641870150116.csv"
					},
					"pFileName3": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1641870156029.csv"
					}
				},
				"folder": {
					"name": "FITSDataVerification"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T02:42:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Csv_File_Pipe')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TTH_Hospital_Month_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncatetemp_fits_export_hospital_tth",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncate_table]",
							"storedProcedureParameters": {
								"schema_name": {
									"value": "dbo",
									"type": "String"
								},
								"table_name": {
									"value": "temp_fits_export_hospital_tth",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pSourceFolderName": {
						"type": "string",
						"defaultValue": "test/FITS/FITSExport/csv/20220427/"
					},
					"pFileName": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1651024154272.csv"
					},
					"pFileName2": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1641870150116.csv"
					},
					"pFileName3": {
						"type": "string",
						"defaultValue": "HOSPITAL-TTH-MONTH1641870156029.csv"
					}
				},
				"folder": {
					"name": "FITSDataVerification"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T02:42:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_CMH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CMH外部数据的JOB，手动执行",
				"activities": [
					{
						"name": "Execute_PL_DATA_CMH_SFTP_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_SFTP_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_CMH_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CMH_SFTP_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CMH_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CMH_Itg_To_Dw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CMH_Stg_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CMH_Itg_To_Dw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_CMH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CMH_Itg_To_Dw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_CMH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:05:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_SFTP_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CMH_Stg_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CMH_Itg_To_Dw')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_CMH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_CPAGYCX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CPAGYCX外部数据的JOB，手动执行",
				"activities": [
					{
						"name": "Execute_PL_DATA_CPA_SFTP_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CPA_SFTP_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_GYCX_SFTP_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_GYCX_SFTP_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_CPA_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CPA_SFTP_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_GYCX_SFTP_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CPA_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CPA_Itg_To_Dw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_CPA_Stg_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CPA_Itg_To_Dw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_CPA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CPA_Itg_To_Dw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_CPA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_SFTP_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_GYCX_SFTP_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CPA_Stg_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CPA_Itg_To_Dw')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_CPA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_DCSFITSMDM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DLK Job",
				"activities": [
					{
						"name": "Execute_PL_DATA_MDM_SFTP_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MDM_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pModuleName": "MDM"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_FITS_SFTP_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_FITS_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pModuleName": "FITS"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_DCS_SFTP_To_Itg_From_DCS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_DCS_SFTP_To_Itg_From_DCS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pModuleName": "DCS_New"
							}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_MDM_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_Manual_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_Manual_SFTP_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_Manual_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_MDM_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_FITS_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_DCS_SFTP_To_Itg_From_DCS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_Manual_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_InMarket",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_InMarket",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_Summary",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_Summary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send_Email_Success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_InMarket",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_Summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/a5b334c13f734d248e9b6d3ec5cf9469/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=P6dHa-aekdOtPlSIP6RM7TtrIUiQEEoE7VKOQJatYNw",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"@{pipeline().Pipeline} Successed!\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"Message\":\"@{pipeline().Pipeline} running success!\",\n\"Time\":\"@{addhours(utcNow(),+8)}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute_PL_DATA_CDI_SFTP_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_CDI_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_CDI_SFTP_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_BAI_DW_Synapse_To_Sqldatabase",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_InMarket",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_Summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_BAI_DW_Synapse_To_Sqldatabase",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T01:56:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MDM_SFTP_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_FITS_SFTP_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_DCS_SFTP_To_Itg_From_DCS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_Manual_SFTP_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_InMarket')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_Summary')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_CDI_SFTP_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_BAI_DW_Synapse_To_Sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_DCSFITSMDM_DM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_PL_TRAN_SPRC_DM_InMarket",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_InMarket",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_Summary",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_Summary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_BAI_DW_Synapse_To_Sqldatabase",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_InMarket",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_Summary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_BAI_DW_Synapse_To_Sqldatabase",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send_Email_Success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_InMarket",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_DM_Summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.chinaeast2.logic.azure.cn:443/workflows/a5b334c13f734d248e9b6d3ec5cf9469/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=P6dHa-aekdOtPlSIP6RM7TtrIUiQEEoE7VKOQJatYNw",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"@{pipeline().Pipeline} Successed!\",\n\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n\"PipeLineName\":\"@{pipeline().Pipeline}\",\n\"Message\":\"@{pipeline().Pipeline} running success!\",\n\"Time\":\"@{addhours(utcNow(),+8)}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:10:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_InMarket')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_Summary')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_BAI_DW_Synapse_To_Sqldatabase')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Fact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_DCSFITSMDM_DWDM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DLK手动执行的DW层DM层Job，不包含同步BAI库。适用于自动job报错后的补充，需要所有基础数据都跑到ITG",
				"activities": [
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_InMarket",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_InMarket",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_Summary",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_Summary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_CDI_DM_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_CDI_DM_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:11:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_InMarket')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_Summary')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Fact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_DCSFITSMDM_DWDM_InMarket')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DLK手动执行的DW层DM层Job，不包含同步BAI库，不包含CDI数据，适用于自动job报错后的补充，需要所有基础数据都跑到ITG",
				"activities": [
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_InMarket",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_InMarket",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_Summary",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Dim",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_TRAN_SPRC_InMarket_DW_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_Summary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:12:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Dim')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Fact')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_InMarket')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_Summary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_DMBACKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DLK DM层表备份Job",
				"activities": [
					{
						"name": "PL_TRAN_SPRC_CDI_DM_Backup",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_CDI_DM_Backup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRAN_SPRC_DM_Summary_Backup",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_Summary_Backup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRAN_SPRC_InmMarket_DM_Backup",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InmMarket_DM_Backup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:14:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_CDI_DM_Backup')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_Summary_Backup')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InmMarket_DM_Backup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_EVENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Event Job",
				"activities": [
					{
						"name": "Execute Event",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:15:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_SFTP_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_HCRM_ADJUSTMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HCRM调整的Job，手动运行，为了更新架构季度的mapping关系",
				"activities": [
					{
						"name": "PL_DATA_HCRM_Adjustment_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_Adjustment_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:16:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_Adjustment_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_HCRM_EVENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HCRM&EVENT Job，定时运行，凌晨4点半",
				"activities": [
					{
						"name": "Execute HCRM",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_HCRM_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Event",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_EVENT_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:17:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_HCRM_SFTP_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_EVENT_SFTP_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_IMSMAX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IMSMAX外部数据的JOB，手动执行",
				"activities": [
					{
						"name": "Execute_PL_DATA_IMS_SFTP_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_SFTP_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_MAX_SFTP_To_Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_MAX_SFTP_To_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_DATA_IMS_Stg_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_SFTP_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute_PL_DATA_MAX_SFTP_To_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_IMS_Stg_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_IMS_Itg_To_Dw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_DATA_IMS_Stg_To_Itg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_IMS_Itg_To_Dw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_PL_TRAN_SPRC_DM_IMS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_PL_TRAN_SPRC_IMS_Itg_To_Dw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_DM_IMS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:18:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_SFTP_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_MAX_SFTP_To_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_IMS_Stg_To_Itg')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_IMS_Itg_To_Dw')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_DM_IMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_INMARKET_HOSPITAL_ADJUSTMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "医院团队调整的Job，手动运行，为了更新医院团队提供的调整数据tth_if_adjustment",
				"activities": [
					{
						"name": "PL_DATA_DCS_Adjustment_To_Itg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_DCS_Adjustment_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:18:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_DCS_Adjustment_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JOB_RCRM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "RCRM Job，定时触发，凌晨1点",
				"activities": [
					{
						"name": "Execute RCRM",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_RCRM_SFTP_To_Itg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Job"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T02:19:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_RCRM_SFTP_To_Itg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Shuo_CallRestAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://58.213.112.90:25309/apiDocpolicyJobs/getToken",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"userName": "hz01",
								"passWord": "123456"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-09T06:39:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CDI_DM_Backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDMCDITables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetCurrentDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select name AS TableName from sys.objects where schema_name(schema_id) = 'dm_cdi' \r\nand (name not like '%_bak%'\r\nand name not like '%_bk%'\r\nand name not like '%test%') \r\nand type = 'U' order by name",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SetCurrentDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vCurrentDate",
							"value": {
								"value": "@formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachDMICDITable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDMCDITables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDMCDITables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopydataDMCDITableToBackup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 20,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN_Table",
											"type": "DatasetReference",
											"parameters": {
												"pSchemaName": "dm_cdi",
												"pTableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat('Backup/DM/dm_cdi/',substring(variables('vCurrentDate'),0,6),'/',variables('vCurrentDate'))",
													"type": "Expression"
												},
												"pFileName": {
													"value": "@concat(item().TableName,'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"vCurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:08:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CDI_DM_Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dim_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_distributor_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_geography",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_geography]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_product_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_distributor_product_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_date]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_bmcc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_position_bmcc]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_position_hierarchy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_position_hierarchy]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_exchange_rate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_exchange_rate]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_dim_distributor_type]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:09:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CDI_DM_Fact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_distributor_channel_inventory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_distributor_channel_inventory]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_channel_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_distributor_channel_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_net_ttd_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_net_ttd_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_inventory_monthly",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_distributor_inventory_monthly]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_product_inventory_weekly",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_product_inventory_weekly]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ttd_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_ttd_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ttd_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_ttd_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ttd_summary_calendar",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_ttd_summary_calendar]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_forecast",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_distributor_forecast]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_inventory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cdi].[sp_fact_distributor_inventory]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:10:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CDI_DW_Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dim_date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_date]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_bmcc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_position_bmcc]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_position_bmcc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_distributor_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_product_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_distributor_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_distributor_product_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_exchange_rate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_exchange_rate]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_groups",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_exchange_rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_distributor_groups]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_distributor_type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_distributor_groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_distributor_type]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:19:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CDI_DW_Fact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_inventory_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_inventory_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_inventory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_inventory_detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_distributor_inventory]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_net_ttd_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_net_ttd_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ttd_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ttd_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_distributor_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_forecast",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_distributor_forecast]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_channel_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_distributor_channel_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_distributor_sales_forecast",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_distributor_inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_distributor_sales_forecast]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:20:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CMH_Itg_To_Dw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_cmh_itg2dw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_cmh_itg2dw]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:21:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_CPA_Itg_To_Dw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_cpa_itg2dw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_cpa_itg2dw]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DCS_Stg_To_Itg_From_DCS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dcs_stg2itg_from_dcs",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_dcs_stg2itg_from_dcs]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DCS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:04:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_CMH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dim_geography_cmh",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_dim_geography_cmh]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_market_product_cmh",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_dim_market_product_cmh]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_dim_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product_cmh",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_dim_product_cmh]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_cmh_by_market",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_fact_cmh_by_market]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_cmh_distributionrate_by_brand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cmh].[sp_fact_cmh_distributionrate_by_brand]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:11:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_CPA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_cpa_by_market",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_fact_cpa_by_market]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_cpa_by_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_fact_cpa_by_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_dim_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product_cpa",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_dim_product_cpa]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_map_market_cpa",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_dim_map_market_cpa]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_geography_cpa",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_dim_geography_cpa]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_cpa",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_cpa].[sp_dim_account_cpa]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_IMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_ims_by_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_fact_ims_by_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ims_by_market",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_fact_ims_by_market]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product_ims",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_dim_product_ims]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_dim_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_dim_map_market_ims",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_dim_map_market_ims]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_dim_geography_ims",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_ims].[sp_dim_geography_ims]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:12:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_InMarket')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dim_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_geography",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_geography]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_hoka_position_hierarchy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_hoka_position_hierarchy]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_hierarchy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_position_hierarchy]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_hospital_in_market_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_hospital_in_market_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_ka_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_retail_target_ka_account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_retail_ka_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_in_market_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_retail_target_ka_account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_retail_in_market_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_target_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_geography",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_retail_target_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_target_ka_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_retail_target_account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_retail_target_ka_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_permission_by_position",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_dim_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_sp_rel_ka_hospital_vps_mapping",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_rel_ka_hospital_vps_mapping]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_permission_by_position",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_permission_by_position]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_hospital_target_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_account",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_geography",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_inmarket].[sp_fact_hospital_target_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pDatamartName": {
						"type": "string",
						"defaultValue": "dm_inmarket"
					}
				},
				"variables": {
					"vCurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:13:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_Summary')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_in_market_sales_summary_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_summary].[sp_in_market_sales_summary_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_in_market_sales_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm_summary].[sp_in_market_sales_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pDatamartName": {
						"type": "string",
						"defaultValue": "dm_summary"
					}
				},
				"variables": {
					"vCurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:14:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_DM_Summary_Backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDMSummaryTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetCurrentDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select name AS TableName from sys.objects where schema_name(schema_id) = ''',pipeline().parameters.pDatamartName,''' and (name not like ''%_bak%'' and name not like ''%_bk%''and name not like ''%test%'') and type = ''U'' order by name')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dm_inmarket",
									"pTableName": "dim_month"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDMSummaryTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDMSummaryTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDMSummaryTables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopydataDMSummaryTableToBackup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN_Table",
											"type": "DatasetReference",
											"parameters": {
												"pSchemaName": {
													"value": "@pipeline().parameters.pDatamartName",
													"type": "Expression"
												},
												"pTableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat('Backup/DM/',pipeline().parameters.pDatamartName,'/',substring(variables('vCurrentDate'),0,6),'/',variables('vCurrentDate'))",
													"type": "Expression"
												},
												"pFileName": {
													"value": "@concat(item().TableName,'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SetCurrentDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vCurrentDate",
							"value": {
								"value": "@formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pDatamartName": {
						"type": "string",
						"defaultValue": "dm_summary"
					}
				},
				"variables": {
					"vCurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:15:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_FITS_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_update_fits_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_update_fits_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FITS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:51:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_IMS_Itg_To_Dw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_ims_itg2dw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dw.sp_ims_itg2dw"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:22:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InMarket_DW_Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_dim_account",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_employee",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_employee]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_geography",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_geography]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_hierarchy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_position_hierarchy_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_position_hierarchy]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_hierarchy_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_position_hierarchy_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_position_hierarchy_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_position_hierarchy_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_position_hierarchy_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_product",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_product]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_manual_ka_hospital_access",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_manual_ka_hospital_access]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_manual_ka_hospital_access_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_manual_ka_hospital_access_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_product_price_struct",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_product_price_struct]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_small_chainstore",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_small_chainstore]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_full_year_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_full_year_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_hospital_vps_mapping",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_hospital_vps_mapping]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_hoka_position_hierarchy_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_hoka_position_hierarchy_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_hoka_position_hierarchy_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_hoka_position_hierarchy_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_hoka_position_hierarchy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_hoka_position_hierarchy]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_product_segment",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_permission_by_position",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_hoka_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_account",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_geography",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_manual_ka_hospital_access",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_manual_ka_hospital_access_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_product_price_struct",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_small_chainstore",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_full_year_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_hospital_vps_mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account_product_segment]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_check_manual_permission_by_position",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_check_manual_permission_by_position_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_check_manual_permission_by_position]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_permission_by_position",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_check_manual_permission_by_position",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_permission_by_position]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_check_manual_permission_by_position_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_position_hierarchy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_position_hierarchy_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_dim_employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_manual_permission_by_position]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:23:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InMarket_DW_Fact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_account_sales_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_sales_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_sales_detail_by_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_sales_detail_by_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_position_package_weight",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_position_package_weight]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_fact_account_position_sales_intern",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_intern]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_position_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_position_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_position_target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_position_package_weight_cur",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_position_package_weight_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales_intern_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_intern_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_position_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_position_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_position_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_actual",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_actual]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_actual_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_actual_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_in_market_sales_summary_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_in_market_sales_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_position_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_fact_account_position_sales_intern",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_position_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_small_chaninstore_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_in_market_sales_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_in_market_sales_summary_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_position_sales_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_position_sales_intern_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_position_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_small_chaninstore_sales_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_in_market_sales_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_account_retail_ka_position_package",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_in_market_sales_summary_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_small_chaninstore_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_small_chaninstore_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_small_chaninstore_sales_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_small_chaninstore_sales_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_retail_ka_position_package",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_actual",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_ka_target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_retail_ka_position_package]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_ka_sales_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_actual_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_retail_ka_sales_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_channel_sales_detail_by_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_channel_sales_detail_by_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_manual_vps_hospital_potential",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_manual_vps_hospital_potential]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_product_property_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_account_product_property",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account_product_property_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_product_property",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account_product_property]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_history_max_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_account_product_property_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_history_max_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_vps_hospital_score",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_vps_hospital_score]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_fact_hospital_in_market_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_in_market_sales_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_manual_vps_hospital_potential",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_history_max_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_vps_hospital_score",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_hospital_in_market_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T01:59:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InMarket_DW_Fact_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_account_sales_detail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_sales_detail]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_sales_detail_by_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_sales_detail_by_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_position_package_weight",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_position_package_weight]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_fact_account_position_sales_intern",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_intern]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_position_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_position_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_position_target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_position_package_weight_cur",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_position_package_weight_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_sales_intern_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_sales_intern_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_position_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_position_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_account_position_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_position_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_account_position_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_actual",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_actual]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_target",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_target]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_in_market_sales_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_position_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_fact_account_position_sales_intern",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_position_target",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_small_chaninstore_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_in_market_sales_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_small_chaninstore_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_rel_account_position_package_weight",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_small_chaninstore_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_small_chaninstore_sales_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail_by_month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_account_position_package_weight_cur",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_small_chaninstore_sales_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_account_retail_ka_position_package",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_actual",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_ka_target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_account_retail_ka_position_package]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_channel_sales_detail_by_month",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_account_sales_detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_channel_sales_detail_by_month]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_rel_manual_vps_hospital_potential",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_rel_manual_vps_hospital_potential]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_product_property_his",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_account_product_property",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account_product_property_his]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_dim_account_product_property",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_dim_account_product_property]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_history_max_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_dim_account_product_property_his",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_history_max_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_vps_hospital_score",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_vps_hospital_score]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_fact_hospital_in_market_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_in_market_sales_summary",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_rel_manual_vps_hospital_potential",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_history_max_sales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Exec_sp_fact_vps_hospital_score",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_hospital_in_market_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T06:37:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InMarket_DW_Fact_02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_fact_ka_actual_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_actual_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_ka_target_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_actual_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_ka_target_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_in_market_sales_summary_cur_year",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_ka_target_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_in_market_sales_summary_cur_year]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_fact_retail_ka_sales_summary",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exec_sp_fact_in_market_sales_summary_cur_year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dw].[sp_fact_retail_ka_sales_summary]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T06:41:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InMarket_DW_Fact_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_TRAN_SPRC_InMarket_DW_Fact_01",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Fact_01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRAN_SPRC_InMarket_DW_Fact_02",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_TRAN_SPRC_InMarket_DW_Fact_01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRAN_SPRC_InMarket_DW_Fact_02",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DW"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T06:58:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Fact_01')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRAN_SPRC_InMarket_DW_Fact_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_InmMarket_DM_Backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDMInMarketTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetCurrentDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select name AS TableName from sys.objects where schema_name(schema_id) = ''',pipeline().parameters.pDatamartName,''' and (name not like ''%_bak%'' and name not like ''%_bk%''and name not like ''%test%'') and type = ''U'' order by name')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASYN_Table",
								"type": "DatasetReference",
								"parameters": {
									"pSchemaName": "dm_inmarket",
									"pTableName": "dim_month"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDMInMarketTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDMInMarketTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDMInMarketTables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "CopydataDMInMarketTableToBackup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 20,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASYN_Table",
											"type": "DatasetReference",
											"parameters": {
												"pSchemaName": {
													"value": "@pipeline().parameters.pDatamartName",
													"type": "Expression"
												},
												"pTableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Parquet_File",
											"type": "DatasetReference",
											"parameters": {
												"pFolderName": {
													"value": "@concat('Backup/DM/',pipeline().parameters.pDatamartName,'/',substring(variables('vCurrentDate'),0,6),'/',variables('vCurrentDate'))",
													"type": "Expression"
												},
												"pFileName": {
													"value": "@concat(item().TableName,'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SetCurrentDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vCurrentDate",
							"value": {
								"value": "@formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pDatamartName": {
						"type": "string",
						"defaultValue": "dm_inmarket"
					}
				},
				"variables": {
					"vCurrentDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T09:15:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASYN_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_MDM_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_update_mdm_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_update_mdm_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T01:52:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_SPRC_Manual_Stg_To_Itg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec_sp_update_manual_stg2itg",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_update_manual_stg2itg]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_manual_history_max_sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_manual_history_max_sales]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exec_sp_manual_ka_hospital_vps_fill_in_mapping",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[itg].[sp_manual_ka_hospital_vps_fill_in_mapping]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASYN_ChinaDataLake",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Manual"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:19:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cdi_backup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataBackupInputCDI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": "Input/CDI/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Binary_Folder",
								"type": "DatasetReference",
								"parameters": {
									"pFolderName": {
										"value": "@concat(\n'Backup/Input/CDI/',formatDateTime(addhours(utcnow(),8),'yyyyMM'),\n'/',formatDateTime(addhours(utcnow(),8),'yyyyMMddHHmmss')\n)\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CDI"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T08:36:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Binary_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Binary_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Binary_File_Orc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"enablePhysicalSchema": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Binary_File_Zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Binary_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Binary_Folder_Zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Comma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Comma_DefaultRowDelimiter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Comma_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe_GB2312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"encodingName": "GB2312",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe_LF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe_UTF8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"encodingName": "UTF-8",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_File_Pipe_special')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": "|",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Csv_Folder_Comma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Excel_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pPathName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					},
					"pSheetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().pSheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pPathName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_JSON_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Parquet_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Parquet_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						},
						"fileSystem": "china-commercial"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "区域类型",
						"type": "UTF8"
					},
					{
						"name": "年度",
						"type": "UTF8"
					},
					{
						"name": "季度",
						"type": "UTF8"
					},
					{
						"name": "时间",
						"type": "UTF8"
					},
					{
						"name": "上级区域",
						"type": "UTF8"
					},
					{
						"name": "区域",
						"type": "UTF8"
					},
					{
						"name": "处方性质",
						"type": "UTF8"
					},
					{
						"name": "中西药属性",
						"type": "UTF8"
					},
					{
						"name": "剂型",
						"type": "UTF8"
					},
					{
						"name": "对象",
						"type": "UTF8"
					},
					{
						"name": "分类一",
						"type": "UTF8"
					},
					{
						"name": "分类二",
						"type": "UTF8"
					},
					{
						"name": "分类三",
						"type": "UTF8"
					},
					{
						"name": "自定义分类一",
						"type": "UTF8"
					},
					{
						"name": "自定义分类二",
						"type": "UTF8"
					},
					{
						"name": "通用名",
						"type": "UTF8"
					},
					{
						"name": "品牌",
						"type": "UTF8"
					},
					{
						"name": "商品名",
						"type": "UTF8"
					},
					{
						"name": "品名含属性",
						"type": "UTF8"
					},
					{
						"name": "品名",
						"type": "UTF8"
					},
					{
						"name": "厂家",
						"type": "UTF8"
					},
					{
						"name": "集团",
						"type": "UTF8"
					},
					{
						"name": "规格",
						"type": "UTF8"
					},
					{
						"name": "SKU",
						"type": "UTF8"
					},
					{
						"name": "片数",
						"type": "UTF8"
					},
					{
						"name": "日服用量",
						"type": "UTF8"
					},
					{
						"name": "平均单价元盒",
						"type": "UTF8"
					},
					{
						"name": "销售额元",
						"type": "UTF8"
					},
					{
						"name": "销售量盒",
						"type": "UTF8"
					},
					{
						"name": "销售量片",
						"type": "UTF8"
					},
					{
						"name": "铺货率",
						"type": "UTF8"
					},
					{
						"name": "加权铺货率",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_SQLSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_ChinaCommercialBAI",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ChinaCommercialBAI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_SQLSV_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_ChinaCommercialBAI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pSchemaName": {
						"type": "string"
					},
					"pTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().pSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().pTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ChinaCommercialBAI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASYN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASYN_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASYN_Schema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASYN_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pSchemaName": {
						"type": "string"
					},
					"pTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().pSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().pTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASYN_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASYN_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pSchemaName": {
						"type": "string"
					},
					"pTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().pSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().pTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASYN_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_Event')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_REST_Event",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "api/data/copying"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_Event')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Binary_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Binary_File_Zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					},
					"pFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().pFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Binary_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Binary_Folder_Zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@dataset().pFolderName",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Csv_File_Comma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFilename": {
						"type": "string"
					},
					"pFlodername": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().pFilename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFlodername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_Csv_File_Pipe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ChinaDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFilename": {
						"type": "string"
					},
					"pFlodername": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ViatrisDataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().pFilename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pFlodername",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ChinaDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MA_data_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "MA_storage",
						"fileSystem": "china-commercial"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MA_data_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MA_Rest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MA_Rest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_ChinaDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service to Test Environment Data Lake Storage Gen 2 for ChinaDataLake Project",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_ChinaDataLake_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_ChinaCommercialBAI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_ChinaCommercialBAI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASYN_ChinaDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service to China Synapse Test Environment for ChinaDataLake project",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASYN_ChinaDataLake_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_REST_Event')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_REST_Event_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_REST_Event_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_REST_Event_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SFTP_ChinaDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LS_SFTP_ChinaDataLake_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_SFTP_ChinaDataLake_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SFTP_ChinaDataLake_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MA_Rest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('MA_Rest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MA_data_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('MA_data_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('MA_data_storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MA_Trigger_1h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-05-09T10:17:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		}
	]
}